/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    LOAD_STACK_GUARD	= 19,
    STATEPOINT	= 20,
    FRAME_ALLOC	= 21,
    FAULTING_LOAD_OP	= 22,
    ADD4	= 23,
    ADD4TLS	= 24,
    ADD4o	= 25,
    ADD8	= 26,
    ADD8TLS	= 27,
    ADD8TLS_	= 28,
    ADD8o	= 29,
    ADDC	= 30,
    ADDC8	= 31,
    ADDC8o	= 32,
    ADDCo	= 33,
    ADDE	= 34,
    ADDE8	= 35,
    ADDE8o	= 36,
    ADDEo	= 37,
    ADDI	= 38,
    ADDI8	= 39,
    ADDIC	= 40,
    ADDIC8	= 41,
    ADDICo	= 42,
    ADDIS	= 43,
    ADDIS8	= 44,
    ADDISdtprelHA	= 45,
    ADDISdtprelHA32	= 46,
    ADDISgotTprelHA	= 47,
    ADDIStlsgdHA	= 48,
    ADDIStlsldHA	= 49,
    ADDIStocHA	= 50,
    ADDIdtprelL	= 51,
    ADDIdtprelL32	= 52,
    ADDItlsgdL	= 53,
    ADDItlsgdL32	= 54,
    ADDItlsgdLADDR	= 55,
    ADDItlsgdLADDR32	= 56,
    ADDItlsldL	= 57,
    ADDItlsldL32	= 58,
    ADDItlsldLADDR	= 59,
    ADDItlsldLADDR32	= 60,
    ADDItocL	= 61,
    ADDME	= 62,
    ADDME8	= 63,
    ADDME8o	= 64,
    ADDMEo	= 65,
    ADDZE	= 66,
    ADDZE8	= 67,
    ADDZE8o	= 68,
    ADDZEo	= 69,
    ADJCALLSTACKDOWN	= 70,
    ADJCALLSTACKUP	= 71,
    AND	= 72,
    AND8	= 73,
    AND8o	= 74,
    ANDC	= 75,
    ANDC8	= 76,
    ANDC8o	= 77,
    ANDCo	= 78,
    ANDISo	= 79,
    ANDISo8	= 80,
    ANDIo	= 81,
    ANDIo8	= 82,
    ANDIo_1_EQ_BIT	= 83,
    ANDIo_1_EQ_BIT8	= 84,
    ANDIo_1_GT_BIT	= 85,
    ANDIo_1_GT_BIT8	= 86,
    ANDo	= 87,
    ATOMIC_CMP_SWAP_I16	= 88,
    ATOMIC_CMP_SWAP_I32	= 89,
    ATOMIC_CMP_SWAP_I64	= 90,
    ATOMIC_CMP_SWAP_I8	= 91,
    ATOMIC_LOAD_ADD_I16	= 92,
    ATOMIC_LOAD_ADD_I32	= 93,
    ATOMIC_LOAD_ADD_I64	= 94,
    ATOMIC_LOAD_ADD_I8	= 95,
    ATOMIC_LOAD_AND_I16	= 96,
    ATOMIC_LOAD_AND_I32	= 97,
    ATOMIC_LOAD_AND_I64	= 98,
    ATOMIC_LOAD_AND_I8	= 99,
    ATOMIC_LOAD_NAND_I16	= 100,
    ATOMIC_LOAD_NAND_I32	= 101,
    ATOMIC_LOAD_NAND_I64	= 102,
    ATOMIC_LOAD_NAND_I8	= 103,
    ATOMIC_LOAD_OR_I16	= 104,
    ATOMIC_LOAD_OR_I32	= 105,
    ATOMIC_LOAD_OR_I64	= 106,
    ATOMIC_LOAD_OR_I8	= 107,
    ATOMIC_LOAD_SUB_I16	= 108,
    ATOMIC_LOAD_SUB_I32	= 109,
    ATOMIC_LOAD_SUB_I64	= 110,
    ATOMIC_LOAD_SUB_I8	= 111,
    ATOMIC_LOAD_XOR_I16	= 112,
    ATOMIC_LOAD_XOR_I32	= 113,
    ATOMIC_LOAD_XOR_I64	= 114,
    ATOMIC_LOAD_XOR_I8	= 115,
    ATOMIC_SWAP_I16	= 116,
    ATOMIC_SWAP_I32	= 117,
    ATOMIC_SWAP_I64	= 118,
    ATOMIC_SWAP_I8	= 119,
    ATTN	= 120,
    B	= 121,
    BA	= 122,
    BC	= 123,
    BCC	= 124,
    BCCA	= 125,
    BCCCTR	= 126,
    BCCCTR8	= 127,
    BCCCTRL	= 128,
    BCCCTRL8	= 129,
    BCCL	= 130,
    BCCLA	= 131,
    BCCLR	= 132,
    BCCLRL	= 133,
    BCCTR	= 134,
    BCCTR8	= 135,
    BCCTR8n	= 136,
    BCCTRL	= 137,
    BCCTRL8	= 138,
    BCCTRL8n	= 139,
    BCCTRLn	= 140,
    BCCTRn	= 141,
    BCL	= 142,
    BCLR	= 143,
    BCLRL	= 144,
    BCLRLn	= 145,
    BCLRn	= 146,
    BCLalways	= 147,
    BCLn	= 148,
    BCTR	= 149,
    BCTR8	= 150,
    BCTRL	= 151,
    BCTRL8	= 152,
    BCTRL8_LDinto_toc	= 153,
    BCn	= 154,
    BDNZ	= 155,
    BDNZ8	= 156,
    BDNZA	= 157,
    BDNZAm	= 158,
    BDNZAp	= 159,
    BDNZL	= 160,
    BDNZLA	= 161,
    BDNZLAm	= 162,
    BDNZLAp	= 163,
    BDNZLR	= 164,
    BDNZLR8	= 165,
    BDNZLRL	= 166,
    BDNZLRLm	= 167,
    BDNZLRLp	= 168,
    BDNZLRm	= 169,
    BDNZLRp	= 170,
    BDNZLm	= 171,
    BDNZLp	= 172,
    BDNZm	= 173,
    BDNZp	= 174,
    BDZ	= 175,
    BDZ8	= 176,
    BDZA	= 177,
    BDZAm	= 178,
    BDZAp	= 179,
    BDZL	= 180,
    BDZLA	= 181,
    BDZLAm	= 182,
    BDZLAp	= 183,
    BDZLR	= 184,
    BDZLR8	= 185,
    BDZLRL	= 186,
    BDZLRLm	= 187,
    BDZLRLp	= 188,
    BDZLRm	= 189,
    BDZLRp	= 190,
    BDZLm	= 191,
    BDZLp	= 192,
    BDZm	= 193,
    BDZp	= 194,
    BL	= 195,
    BL8	= 196,
    BL8_NOP	= 197,
    BL8_NOP_TLS	= 198,
    BL8_TLS	= 199,
    BL8_TLS_	= 200,
    BLA	= 201,
    BLA8	= 202,
    BLA8_NOP	= 203,
    BLR	= 204,
    BLR8	= 205,
    BLRL	= 206,
    BL_TLS	= 207,
    BPERMD	= 208,
    BRINC	= 209,
    CLRBHRB	= 210,
    CLRLSLDI	= 211,
    CLRLSLDIo	= 212,
    CLRLSLWI	= 213,
    CLRLSLWIo	= 214,
    CLRRDI	= 215,
    CLRRDIo	= 216,
    CLRRWI	= 217,
    CLRRWIo	= 218,
    CMPB	= 219,
    CMPB8	= 220,
    CMPD	= 221,
    CMPDI	= 222,
    CMPLD	= 223,
    CMPLDI	= 224,
    CMPLW	= 225,
    CMPLWI	= 226,
    CMPW	= 227,
    CMPWI	= 228,
    CNTLZD	= 229,
    CNTLZDo	= 230,
    CNTLZW	= 231,
    CNTLZW8	= 232,
    CNTLZW8o	= 233,
    CNTLZWo	= 234,
    CR6SET	= 235,
    CR6UNSET	= 236,
    CRAND	= 237,
    CRANDC	= 238,
    CREQV	= 239,
    CRNAND	= 240,
    CRNOR	= 241,
    CROR	= 242,
    CRORC	= 243,
    CRSET	= 244,
    CRUNSET	= 245,
    CRXOR	= 246,
    DCBA	= 247,
    DCBF	= 248,
    DCBI	= 249,
    DCBST	= 250,
    DCBT	= 251,
    DCBTCT	= 252,
    DCBTDS	= 253,
    DCBTST	= 254,
    DCBTSTCT	= 255,
    DCBTSTDS	= 256,
    DCBTSTT	= 257,
    DCBTSTx	= 258,
    DCBTT	= 259,
    DCBTx	= 260,
    DCBZ	= 261,
    DCBZL	= 262,
    DCCCI	= 263,
    DIVD	= 264,
    DIVDE	= 265,
    DIVDEU	= 266,
    DIVDEUo	= 267,
    DIVDEo	= 268,
    DIVDU	= 269,
    DIVDUo	= 270,
    DIVDo	= 271,
    DIVW	= 272,
    DIVWE	= 273,
    DIVWEU	= 274,
    DIVWEUo	= 275,
    DIVWEo	= 276,
    DIVWU	= 277,
    DIVWUo	= 278,
    DIVWo	= 279,
    DSS	= 280,
    DSSALL	= 281,
    DST	= 282,
    DST64	= 283,
    DSTST	= 284,
    DSTST64	= 285,
    DSTSTT	= 286,
    DSTSTT64	= 287,
    DSTT	= 288,
    DSTT64	= 289,
    DYNALLOC	= 290,
    DYNALLOC8	= 291,
    EH_SjLj_LongJmp32	= 292,
    EH_SjLj_LongJmp64	= 293,
    EH_SjLj_SetJmp32	= 294,
    EH_SjLj_SetJmp64	= 295,
    EH_SjLj_Setup	= 296,
    EQV	= 297,
    EQV8	= 298,
    EQV8o	= 299,
    EQVo	= 300,
    EVABS	= 301,
    EVADDIW	= 302,
    EVADDSMIAAW	= 303,
    EVADDSSIAAW	= 304,
    EVADDUMIAAW	= 305,
    EVADDUSIAAW	= 306,
    EVADDW	= 307,
    EVAND	= 308,
    EVANDC	= 309,
    EVCMPEQ	= 310,
    EVCMPGTS	= 311,
    EVCMPGTU	= 312,
    EVCMPLTS	= 313,
    EVCMPLTU	= 314,
    EVCNTLSW	= 315,
    EVCNTLZW	= 316,
    EVDIVWS	= 317,
    EVDIVWU	= 318,
    EVEQV	= 319,
    EVEXTSB	= 320,
    EVEXTSH	= 321,
    EVLDD	= 322,
    EVLDDX	= 323,
    EVLDH	= 324,
    EVLDHX	= 325,
    EVLDW	= 326,
    EVLDWX	= 327,
    EVLHHESPLAT	= 328,
    EVLHHESPLATX	= 329,
    EVLHHOSSPLAT	= 330,
    EVLHHOSSPLATX	= 331,
    EVLHHOUSPLAT	= 332,
    EVLHHOUSPLATX	= 333,
    EVLWHE	= 334,
    EVLWHEX	= 335,
    EVLWHOS	= 336,
    EVLWHOSX	= 337,
    EVLWHOU	= 338,
    EVLWHOUX	= 339,
    EVLWHSPLAT	= 340,
    EVLWHSPLATX	= 341,
    EVLWWSPLAT	= 342,
    EVLWWSPLATX	= 343,
    EVMERGEHI	= 344,
    EVMERGEHILO	= 345,
    EVMERGELO	= 346,
    EVMERGELOHI	= 347,
    EVMHEGSMFAA	= 348,
    EVMHEGSMFAN	= 349,
    EVMHEGSMIAA	= 350,
    EVMHEGSMIAN	= 351,
    EVMHEGUMIAA	= 352,
    EVMHEGUMIAN	= 353,
    EVMHESMF	= 354,
    EVMHESMFA	= 355,
    EVMHESMFAAW	= 356,
    EVMHESMFANW	= 357,
    EVMHESMI	= 358,
    EVMHESMIA	= 359,
    EVMHESMIAAW	= 360,
    EVMHESMIANW	= 361,
    EVMHESSF	= 362,
    EVMHESSFA	= 363,
    EVMHESSFAAW	= 364,
    EVMHESSFANW	= 365,
    EVMHESSIAAW	= 366,
    EVMHESSIANW	= 367,
    EVMHEUMI	= 368,
    EVMHEUMIA	= 369,
    EVMHEUMIAAW	= 370,
    EVMHEUMIANW	= 371,
    EVMHEUSIAAW	= 372,
    EVMHEUSIANW	= 373,
    EVMHOGSMFAA	= 374,
    EVMHOGSMFAN	= 375,
    EVMHOGSMIAA	= 376,
    EVMHOGSMIAN	= 377,
    EVMHOGUMIAA	= 378,
    EVMHOGUMIAN	= 379,
    EVMHOSMF	= 380,
    EVMHOSMFA	= 381,
    EVMHOSMFAAW	= 382,
    EVMHOSMFANW	= 383,
    EVMHOSMI	= 384,
    EVMHOSMIA	= 385,
    EVMHOSMIAAW	= 386,
    EVMHOSMIANW	= 387,
    EVMHOSSF	= 388,
    EVMHOSSFA	= 389,
    EVMHOSSFAAW	= 390,
    EVMHOSSFANW	= 391,
    EVMHOSSIAAW	= 392,
    EVMHOSSIANW	= 393,
    EVMHOUMI	= 394,
    EVMHOUMIA	= 395,
    EVMHOUMIAAW	= 396,
    EVMHOUMIANW	= 397,
    EVMHOUSIAAW	= 398,
    EVMHOUSIANW	= 399,
    EVMRA	= 400,
    EVMWHSMF	= 401,
    EVMWHSMFA	= 402,
    EVMWHSMI	= 403,
    EVMWHSMIA	= 404,
    EVMWHSSF	= 405,
    EVMWHSSFA	= 406,
    EVMWHUMI	= 407,
    EVMWHUMIA	= 408,
    EVMWLSMIAAW	= 409,
    EVMWLSMIANW	= 410,
    EVMWLSSIAAW	= 411,
    EVMWLSSIANW	= 412,
    EVMWLUMI	= 413,
    EVMWLUMIA	= 414,
    EVMWLUMIAAW	= 415,
    EVMWLUMIANW	= 416,
    EVMWLUSIAAW	= 417,
    EVMWLUSIANW	= 418,
    EVMWSMF	= 419,
    EVMWSMFA	= 420,
    EVMWSMFAA	= 421,
    EVMWSMFAN	= 422,
    EVMWSMI	= 423,
    EVMWSMIA	= 424,
    EVMWSMIAA	= 425,
    EVMWSMIAN	= 426,
    EVMWSSF	= 427,
    EVMWSSFA	= 428,
    EVMWSSFAA	= 429,
    EVMWSSFAN	= 430,
    EVMWUMI	= 431,
    EVMWUMIA	= 432,
    EVMWUMIAA	= 433,
    EVMWUMIAN	= 434,
    EVNAND	= 435,
    EVNEG	= 436,
    EVNOR	= 437,
    EVOR	= 438,
    EVORC	= 439,
    EVRLW	= 440,
    EVRLWI	= 441,
    EVRNDW	= 442,
    EVSLW	= 443,
    EVSLWI	= 444,
    EVSPLATFI	= 445,
    EVSPLATI	= 446,
    EVSRWIS	= 447,
    EVSRWIU	= 448,
    EVSRWS	= 449,
    EVSRWU	= 450,
    EVSTDD	= 451,
    EVSTDDX	= 452,
    EVSTDH	= 453,
    EVSTDHX	= 454,
    EVSTDW	= 455,
    EVSTDWX	= 456,
    EVSTWHE	= 457,
    EVSTWHEX	= 458,
    EVSTWHO	= 459,
    EVSTWHOX	= 460,
    EVSTWWE	= 461,
    EVSTWWEX	= 462,
    EVSTWWO	= 463,
    EVSTWWOX	= 464,
    EVSUBFSMIAAW	= 465,
    EVSUBFSSIAAW	= 466,
    EVSUBFUMIAAW	= 467,
    EVSUBFUSIAAW	= 468,
    EVSUBFW	= 469,
    EVSUBIFW	= 470,
    EVXOR	= 471,
    EXTLDI	= 472,
    EXTLDIo	= 473,
    EXTLWI	= 474,
    EXTLWIo	= 475,
    EXTRDI	= 476,
    EXTRDIo	= 477,
    EXTRWI	= 478,
    EXTRWIo	= 479,
    EXTSB	= 480,
    EXTSB8	= 481,
    EXTSB8_32_64	= 482,
    EXTSB8o	= 483,
    EXTSBo	= 484,
    EXTSH	= 485,
    EXTSH8	= 486,
    EXTSH8_32_64	= 487,
    EXTSH8o	= 488,
    EXTSHo	= 489,
    EXTSW	= 490,
    EXTSW_32_64	= 491,
    EXTSW_32_64o	= 492,
    EXTSWo	= 493,
    EnforceIEIO	= 494,
    FABSD	= 495,
    FABSDo	= 496,
    FABSS	= 497,
    FABSSo	= 498,
    FADD	= 499,
    FADDS	= 500,
    FADDSo	= 501,
    FADDo	= 502,
    FADDrtz	= 503,
    FCFID	= 504,
    FCFIDS	= 505,
    FCFIDSo	= 506,
    FCFIDU	= 507,
    FCFIDUS	= 508,
    FCFIDUSo	= 509,
    FCFIDUo	= 510,
    FCFIDo	= 511,
    FCMPUD	= 512,
    FCMPUS	= 513,
    FCPSGND	= 514,
    FCPSGNDo	= 515,
    FCPSGNS	= 516,
    FCPSGNSo	= 517,
    FCTID	= 518,
    FCTIDUZ	= 519,
    FCTIDUZo	= 520,
    FCTIDZ	= 521,
    FCTIDZo	= 522,
    FCTIDo	= 523,
    FCTIW	= 524,
    FCTIWUZ	= 525,
    FCTIWUZo	= 526,
    FCTIWZ	= 527,
    FCTIWZo	= 528,
    FCTIWo	= 529,
    FDIV	= 530,
    FDIVS	= 531,
    FDIVSo	= 532,
    FDIVo	= 533,
    FMADD	= 534,
    FMADDS	= 535,
    FMADDSo	= 536,
    FMADDo	= 537,
    FMR	= 538,
    FMRo	= 539,
    FMSUB	= 540,
    FMSUBS	= 541,
    FMSUBSo	= 542,
    FMSUBo	= 543,
    FMUL	= 544,
    FMULS	= 545,
    FMULSo	= 546,
    FMULo	= 547,
    FNABSD	= 548,
    FNABSDo	= 549,
    FNABSS	= 550,
    FNABSSo	= 551,
    FNEGD	= 552,
    FNEGDo	= 553,
    FNEGS	= 554,
    FNEGSo	= 555,
    FNMADD	= 556,
    FNMADDS	= 557,
    FNMADDSo	= 558,
    FNMADDo	= 559,
    FNMSUB	= 560,
    FNMSUBS	= 561,
    FNMSUBSo	= 562,
    FNMSUBo	= 563,
    FRE	= 564,
    FRES	= 565,
    FRESo	= 566,
    FREo	= 567,
    FRIMD	= 568,
    FRIMDo	= 569,
    FRIMS	= 570,
    FRIMSo	= 571,
    FRIND	= 572,
    FRINDo	= 573,
    FRINS	= 574,
    FRINSo	= 575,
    FRIPD	= 576,
    FRIPDo	= 577,
    FRIPS	= 578,
    FRIPSo	= 579,
    FRIZD	= 580,
    FRIZDo	= 581,
    FRIZS	= 582,
    FRIZSo	= 583,
    FRSP	= 584,
    FRSPo	= 585,
    FRSQRTE	= 586,
    FRSQRTES	= 587,
    FRSQRTESo	= 588,
    FRSQRTEo	= 589,
    FSELD	= 590,
    FSELDo	= 591,
    FSELS	= 592,
    FSELSo	= 593,
    FSQRT	= 594,
    FSQRTS	= 595,
    FSQRTSo	= 596,
    FSQRTo	= 597,
    FSUB	= 598,
    FSUBS	= 599,
    FSUBSo	= 600,
    FSUBo	= 601,
    GETtlsADDR	= 602,
    GETtlsADDR32	= 603,
    GETtlsldADDR	= 604,
    GETtlsldADDR32	= 605,
    ICBI	= 606,
    ICBT	= 607,
    ICCCI	= 608,
    INSLWI	= 609,
    INSLWIo	= 610,
    INSRDI	= 611,
    INSRDIo	= 612,
    INSRWI	= 613,
    INSRWIo	= 614,
    ISEL	= 615,
    ISEL8	= 616,
    ISYNC	= 617,
    LA	= 618,
    LAx	= 619,
    LBARX	= 620,
    LBARXL	= 621,
    LBZ	= 622,
    LBZ8	= 623,
    LBZCIX	= 624,
    LBZU	= 625,
    LBZU8	= 626,
    LBZUX	= 627,
    LBZUX8	= 628,
    LBZX	= 629,
    LBZX8	= 630,
    LD	= 631,
    LDARX	= 632,
    LDARXL	= 633,
    LDBRX	= 634,
    LDCIX	= 635,
    LDU	= 636,
    LDUX	= 637,
    LDX	= 638,
    LDgotTprelL	= 639,
    LDgotTprelL32	= 640,
    LDtoc	= 641,
    LDtocBA	= 642,
    LDtocCPT	= 643,
    LDtocJTI	= 644,
    LDtocL	= 645,
    LFD	= 646,
    LFDU	= 647,
    LFDUX	= 648,
    LFDX	= 649,
    LFIWAX	= 650,
    LFIWZX	= 651,
    LFS	= 652,
    LFSU	= 653,
    LFSUX	= 654,
    LFSX	= 655,
    LHA	= 656,
    LHA8	= 657,
    LHARX	= 658,
    LHARXL	= 659,
    LHAU	= 660,
    LHAU8	= 661,
    LHAUX	= 662,
    LHAUX8	= 663,
    LHAX	= 664,
    LHAX8	= 665,
    LHBRX	= 666,
    LHBRX8	= 667,
    LHZ	= 668,
    LHZ8	= 669,
    LHZCIX	= 670,
    LHZU	= 671,
    LHZU8	= 672,
    LHZUX	= 673,
    LHZUX8	= 674,
    LHZX	= 675,
    LHZX8	= 676,
    LI	= 677,
    LI8	= 678,
    LIS	= 679,
    LIS8	= 680,
    LMW	= 681,
    LSWI	= 682,
    LVEBX	= 683,
    LVEHX	= 684,
    LVEWX	= 685,
    LVSL	= 686,
    LVSR	= 687,
    LVX	= 688,
    LVXL	= 689,
    LWA	= 690,
    LWARX	= 691,
    LWARXL	= 692,
    LWAUX	= 693,
    LWAX	= 694,
    LWAX_32	= 695,
    LWA_32	= 696,
    LWBRX	= 697,
    LWBRX8	= 698,
    LWZ	= 699,
    LWZ8	= 700,
    LWZCIX	= 701,
    LWZU	= 702,
    LWZU8	= 703,
    LWZUX	= 704,
    LWZUX8	= 705,
    LWZX	= 706,
    LWZX8	= 707,
    LWZtoc	= 708,
    LXSDX	= 709,
    LXSIWAX	= 710,
    LXSIWZX	= 711,
    LXSSPX	= 712,
    LXVD2X	= 713,
    LXVDSX	= 714,
    LXVW4X	= 715,
    MBAR	= 716,
    MCRF	= 717,
    MCRFS	= 718,
    MFBHRBE	= 719,
    MFCR	= 720,
    MFCR8	= 721,
    MFCTR	= 722,
    MFCTR8	= 723,
    MFDCR	= 724,
    MFFS	= 725,
    MFFSo	= 726,
    MFLR	= 727,
    MFLR8	= 728,
    MFMSR	= 729,
    MFOCRF	= 730,
    MFOCRF8	= 731,
    MFSPR	= 732,
    MFSPR8	= 733,
    MFSR	= 734,
    MFSRIN	= 735,
    MFTB	= 736,
    MFTB8	= 737,
    MFVRSAVE	= 738,
    MFVRSAVEv	= 739,
    MFVSCR	= 740,
    MFVSRD	= 741,
    MFVSRWZ	= 742,
    MSYNC	= 743,
    MTCRF	= 744,
    MTCRF8	= 745,
    MTCTR	= 746,
    MTCTR8	= 747,
    MTCTR8loop	= 748,
    MTCTRloop	= 749,
    MTDCR	= 750,
    MTFSB0	= 751,
    MTFSB1	= 752,
    MTFSF	= 753,
    MTFSFI	= 754,
    MTFSFIo	= 755,
    MTFSFb	= 756,
    MTFSFo	= 757,
    MTLR	= 758,
    MTLR8	= 759,
    MTMSR	= 760,
    MTMSRD	= 761,
    MTOCRF	= 762,
    MTOCRF8	= 763,
    MTSPR	= 764,
    MTSPR8	= 765,
    MTSR	= 766,
    MTSRIN	= 767,
    MTVRSAVE	= 768,
    MTVRSAVEv	= 769,
    MTVSCR	= 770,
    MTVSRD	= 771,
    MTVSRWA	= 772,
    MTVSRWZ	= 773,
    MULHD	= 774,
    MULHDU	= 775,
    MULHDUo	= 776,
    MULHDo	= 777,
    MULHW	= 778,
    MULHWU	= 779,
    MULHWUo	= 780,
    MULHWo	= 781,
    MULLD	= 782,
    MULLDo	= 783,
    MULLI	= 784,
    MULLI8	= 785,
    MULLW	= 786,
    MULLWo	= 787,
    MoveGOTtoLR	= 788,
    MovePCtoLR	= 789,
    MovePCtoLR8	= 790,
    NAND	= 791,
    NAND8	= 792,
    NAND8o	= 793,
    NANDo	= 794,
    NEG	= 795,
    NEG8	= 796,
    NEG8o	= 797,
    NEGo	= 798,
    NOP	= 799,
    NOP_GT_PWR6	= 800,
    NOP_GT_PWR7	= 801,
    NOR	= 802,
    NOR8	= 803,
    NOR8o	= 804,
    NORo	= 805,
    OR	= 806,
    OR8	= 807,
    OR8o	= 808,
    ORC	= 809,
    ORC8	= 810,
    ORC8o	= 811,
    ORCo	= 812,
    ORI	= 813,
    ORI8	= 814,
    ORIS	= 815,
    ORIS8	= 816,
    ORo	= 817,
    POPCNTD	= 818,
    POPCNTW	= 819,
    PPC32GOT	= 820,
    PPC32PICGOT	= 821,
    QVALIGNI	= 822,
    QVALIGNIb	= 823,
    QVALIGNIs	= 824,
    QVESPLATI	= 825,
    QVESPLATIb	= 826,
    QVESPLATIs	= 827,
    QVFABS	= 828,
    QVFABSs	= 829,
    QVFADD	= 830,
    QVFADDS	= 831,
    QVFADDSs	= 832,
    QVFCFID	= 833,
    QVFCFIDS	= 834,
    QVFCFIDU	= 835,
    QVFCFIDUS	= 836,
    QVFCFIDb	= 837,
    QVFCMPEQ	= 838,
    QVFCMPEQb	= 839,
    QVFCMPEQbs	= 840,
    QVFCMPGT	= 841,
    QVFCMPGTb	= 842,
    QVFCMPGTbs	= 843,
    QVFCMPLT	= 844,
    QVFCMPLTb	= 845,
    QVFCMPLTbs	= 846,
    QVFCPSGN	= 847,
    QVFCPSGNs	= 848,
    QVFCTID	= 849,
    QVFCTIDU	= 850,
    QVFCTIDUZ	= 851,
    QVFCTIDZ	= 852,
    QVFCTIDb	= 853,
    QVFCTIW	= 854,
    QVFCTIWU	= 855,
    QVFCTIWUZ	= 856,
    QVFCTIWZ	= 857,
    QVFLOGICAL	= 858,
    QVFLOGICALb	= 859,
    QVFLOGICALs	= 860,
    QVFMADD	= 861,
    QVFMADDS	= 862,
    QVFMADDSs	= 863,
    QVFMR	= 864,
    QVFMRb	= 865,
    QVFMRs	= 866,
    QVFMSUB	= 867,
    QVFMSUBS	= 868,
    QVFMSUBSs	= 869,
    QVFMUL	= 870,
    QVFMULS	= 871,
    QVFMULSs	= 872,
    QVFNABS	= 873,
    QVFNABSs	= 874,
    QVFNEG	= 875,
    QVFNEGs	= 876,
    QVFNMADD	= 877,
    QVFNMADDS	= 878,
    QVFNMADDSs	= 879,
    QVFNMSUB	= 880,
    QVFNMSUBS	= 881,
    QVFNMSUBSs	= 882,
    QVFPERM	= 883,
    QVFPERMs	= 884,
    QVFRE	= 885,
    QVFRES	= 886,
    QVFRESs	= 887,
    QVFRIM	= 888,
    QVFRIMs	= 889,
    QVFRIN	= 890,
    QVFRINs	= 891,
    QVFRIP	= 892,
    QVFRIPs	= 893,
    QVFRIZ	= 894,
    QVFRIZs	= 895,
    QVFRSP	= 896,
    QVFRSPs	= 897,
    QVFRSQRTE	= 898,
    QVFRSQRTES	= 899,
    QVFRSQRTESs	= 900,
    QVFSEL	= 901,
    QVFSELb	= 902,
    QVFSELbb	= 903,
    QVFSELbs	= 904,
    QVFSUB	= 905,
    QVFSUBS	= 906,
    QVFSUBSs	= 907,
    QVFTSTNAN	= 908,
    QVFTSTNANb	= 909,
    QVFTSTNANbs	= 910,
    QVFXMADD	= 911,
    QVFXMADDS	= 912,
    QVFXMUL	= 913,
    QVFXMULS	= 914,
    QVFXXCPNMADD	= 915,
    QVFXXCPNMADDS	= 916,
    QVFXXMADD	= 917,
    QVFXXMADDS	= 918,
    QVFXXNPMADD	= 919,
    QVFXXNPMADDS	= 920,
    QVGPCI	= 921,
    QVLFCDUX	= 922,
    QVLFCDUXA	= 923,
    QVLFCDX	= 924,
    QVLFCDXA	= 925,
    QVLFCSUX	= 926,
    QVLFCSUXA	= 927,
    QVLFCSX	= 928,
    QVLFCSXA	= 929,
    QVLFCSXs	= 930,
    QVLFDUX	= 931,
    QVLFDUXA	= 932,
    QVLFDX	= 933,
    QVLFDXA	= 934,
    QVLFDXb	= 935,
    QVLFIWAX	= 936,
    QVLFIWAXA	= 937,
    QVLFIWZX	= 938,
    QVLFIWZXA	= 939,
    QVLFSUX	= 940,
    QVLFSUXA	= 941,
    QVLFSX	= 942,
    QVLFSXA	= 943,
    QVLFSXb	= 944,
    QVLFSXs	= 945,
    QVLPCLDX	= 946,
    QVLPCLSX	= 947,
    QVLPCLSXint	= 948,
    QVLPCRDX	= 949,
    QVLPCRSX	= 950,
    QVSTFCDUX	= 951,
    QVSTFCDUXA	= 952,
    QVSTFCDUXI	= 953,
    QVSTFCDUXIA	= 954,
    QVSTFCDX	= 955,
    QVSTFCDXA	= 956,
    QVSTFCDXI	= 957,
    QVSTFCDXIA	= 958,
    QVSTFCSUX	= 959,
    QVSTFCSUXA	= 960,
    QVSTFCSUXI	= 961,
    QVSTFCSUXIA	= 962,
    QVSTFCSX	= 963,
    QVSTFCSXA	= 964,
    QVSTFCSXI	= 965,
    QVSTFCSXIA	= 966,
    QVSTFCSXs	= 967,
    QVSTFDUX	= 968,
    QVSTFDUXA	= 969,
    QVSTFDUXI	= 970,
    QVSTFDUXIA	= 971,
    QVSTFDX	= 972,
    QVSTFDXA	= 973,
    QVSTFDXI	= 974,
    QVSTFDXIA	= 975,
    QVSTFDXb	= 976,
    QVSTFIWX	= 977,
    QVSTFIWXA	= 978,
    QVSTFSUX	= 979,
    QVSTFSUXA	= 980,
    QVSTFSUXI	= 981,
    QVSTFSUXIA	= 982,
    QVSTFSUXs	= 983,
    QVSTFSX	= 984,
    QVSTFSXA	= 985,
    QVSTFSXI	= 986,
    QVSTFSXIA	= 987,
    QVSTFSXs	= 988,
    RESTORE_CR	= 989,
    RESTORE_CRBIT	= 990,
    RESTORE_VRSAVE	= 991,
    RFCI	= 992,
    RFDI	= 993,
    RFEBB	= 994,
    RFI	= 995,
    RFID	= 996,
    RFMCI	= 997,
    RLDCL	= 998,
    RLDCLo	= 999,
    RLDCR	= 1000,
    RLDCRo	= 1001,
    RLDIC	= 1002,
    RLDICL	= 1003,
    RLDICL_32_64	= 1004,
    RLDICLo	= 1005,
    RLDICR	= 1006,
    RLDICRo	= 1007,
    RLDICo	= 1008,
    RLDIMI	= 1009,
    RLDIMIo	= 1010,
    RLWIMI	= 1011,
    RLWIMI8	= 1012,
    RLWIMI8o	= 1013,
    RLWIMIbm	= 1014,
    RLWIMIo	= 1015,
    RLWIMIobm	= 1016,
    RLWINM	= 1017,
    RLWINM8	= 1018,
    RLWINM8o	= 1019,
    RLWINMbm	= 1020,
    RLWINMo	= 1021,
    RLWINMobm	= 1022,
    RLWNM	= 1023,
    RLWNM8	= 1024,
    RLWNM8o	= 1025,
    RLWNMbm	= 1026,
    RLWNMo	= 1027,
    RLWNMobm	= 1028,
    ROTRDI	= 1029,
    ROTRDIo	= 1030,
    ROTRWI	= 1031,
    ROTRWIo	= 1032,
    ReadTB	= 1033,
    SC	= 1034,
    SELECT_CC_F4	= 1035,
    SELECT_CC_F8	= 1036,
    SELECT_CC_I4	= 1037,
    SELECT_CC_I8	= 1038,
    SELECT_CC_QBRC	= 1039,
    SELECT_CC_QFRC	= 1040,
    SELECT_CC_QSRC	= 1041,
    SELECT_CC_VRRC	= 1042,
    SELECT_CC_VSFRC	= 1043,
    SELECT_CC_VSRC	= 1044,
    SELECT_CC_VSSRC	= 1045,
    SELECT_F4	= 1046,
    SELECT_F8	= 1047,
    SELECT_I4	= 1048,
    SELECT_I8	= 1049,
    SELECT_QBRC	= 1050,
    SELECT_QFRC	= 1051,
    SELECT_QSRC	= 1052,
    SELECT_VRRC	= 1053,
    SELECT_VSFRC	= 1054,
    SELECT_VSRC	= 1055,
    SELECT_VSSRC	= 1056,
    SLBIA	= 1057,
    SLBIE	= 1058,
    SLBMFEE	= 1059,
    SLBMTE	= 1060,
    SLD	= 1061,
    SLDI	= 1062,
    SLDIo	= 1063,
    SLDo	= 1064,
    SLW	= 1065,
    SLW8	= 1066,
    SLW8o	= 1067,
    SLWI	= 1068,
    SLWIo	= 1069,
    SLWo	= 1070,
    SPILL_CR	= 1071,
    SPILL_CRBIT	= 1072,
    SPILL_VRSAVE	= 1073,
    SRAD	= 1074,
    SRADI	= 1075,
    SRADIo	= 1076,
    SRADo	= 1077,
    SRAW	= 1078,
    SRAWI	= 1079,
    SRAWIo	= 1080,
    SRAWo	= 1081,
    SRD	= 1082,
    SRDI	= 1083,
    SRDIo	= 1084,
    SRDo	= 1085,
    SRW	= 1086,
    SRW8	= 1087,
    SRW8o	= 1088,
    SRWI	= 1089,
    SRWIo	= 1090,
    SRWo	= 1091,
    STB	= 1092,
    STB8	= 1093,
    STBCIX	= 1094,
    STBCX	= 1095,
    STBU	= 1096,
    STBU8	= 1097,
    STBUX	= 1098,
    STBUX8	= 1099,
    STBX	= 1100,
    STBX8	= 1101,
    STD	= 1102,
    STDBRX	= 1103,
    STDCIX	= 1104,
    STDCX	= 1105,
    STDU	= 1106,
    STDUX	= 1107,
    STDX	= 1108,
    STFD	= 1109,
    STFDU	= 1110,
    STFDUX	= 1111,
    STFDX	= 1112,
    STFIWX	= 1113,
    STFS	= 1114,
    STFSU	= 1115,
    STFSUX	= 1116,
    STFSX	= 1117,
    STH	= 1118,
    STH8	= 1119,
    STHBRX	= 1120,
    STHCIX	= 1121,
    STHCX	= 1122,
    STHU	= 1123,
    STHU8	= 1124,
    STHUX	= 1125,
    STHUX8	= 1126,
    STHX	= 1127,
    STHX8	= 1128,
    STMW	= 1129,
    STSWI	= 1130,
    STVEBX	= 1131,
    STVEHX	= 1132,
    STVEWX	= 1133,
    STVX	= 1134,
    STVXL	= 1135,
    STW	= 1136,
    STW8	= 1137,
    STWBRX	= 1138,
    STWCIX	= 1139,
    STWCX	= 1140,
    STWU	= 1141,
    STWU8	= 1142,
    STWUX	= 1143,
    STWUX8	= 1144,
    STWX	= 1145,
    STWX8	= 1146,
    STXSDX	= 1147,
    STXSIWX	= 1148,
    STXSSPX	= 1149,
    STXVD2X	= 1150,
    STXVW4X	= 1151,
    SUBF	= 1152,
    SUBF8	= 1153,
    SUBF8o	= 1154,
    SUBFC	= 1155,
    SUBFC8	= 1156,
    SUBFC8o	= 1157,
    SUBFCo	= 1158,
    SUBFE	= 1159,
    SUBFE8	= 1160,
    SUBFE8o	= 1161,
    SUBFEo	= 1162,
    SUBFIC	= 1163,
    SUBFIC8	= 1164,
    SUBFME	= 1165,
    SUBFME8	= 1166,
    SUBFME8o	= 1167,
    SUBFMEo	= 1168,
    SUBFZE	= 1169,
    SUBFZE8	= 1170,
    SUBFZE8o	= 1171,
    SUBFZEo	= 1172,
    SUBFo	= 1173,
    SUBI	= 1174,
    SUBIC	= 1175,
    SUBICo	= 1176,
    SUBIS	= 1177,
    SYNC	= 1178,
    TABORT	= 1179,
    TABORTDC	= 1180,
    TABORTDCI	= 1181,
    TABORTWC	= 1182,
    TABORTWCI	= 1183,
    TAILB	= 1184,
    TAILB8	= 1185,
    TAILBA	= 1186,
    TAILBA8	= 1187,
    TAILBCTR	= 1188,
    TAILBCTR8	= 1189,
    TBEGIN	= 1190,
    TCHECK	= 1191,
    TCHECK_RET	= 1192,
    TCRETURNai	= 1193,
    TCRETURNai8	= 1194,
    TCRETURNdi	= 1195,
    TCRETURNdi8	= 1196,
    TCRETURNri	= 1197,
    TCRETURNri8	= 1198,
    TD	= 1199,
    TDI	= 1200,
    TEND	= 1201,
    TLBIA	= 1202,
    TLBIE	= 1203,
    TLBIEL	= 1204,
    TLBIVAX	= 1205,
    TLBLD	= 1206,
    TLBLI	= 1207,
    TLBRE	= 1208,
    TLBRE2	= 1209,
    TLBSX	= 1210,
    TLBSX2	= 1211,
    TLBSX2D	= 1212,
    TLBSYNC	= 1213,
    TLBWE	= 1214,
    TLBWE2	= 1215,
    TRAP	= 1216,
    TRECHKPT	= 1217,
    TRECLAIM	= 1218,
    TSR	= 1219,
    TW	= 1220,
    TWI	= 1221,
    UPDATE_VRSAVE	= 1222,
    UpdateGBR	= 1223,
    VADDCUQ	= 1224,
    VADDCUW	= 1225,
    VADDECUQ	= 1226,
    VADDEUQM	= 1227,
    VADDFP	= 1228,
    VADDSBS	= 1229,
    VADDSHS	= 1230,
    VADDSWS	= 1231,
    VADDUBM	= 1232,
    VADDUBS	= 1233,
    VADDUDM	= 1234,
    VADDUHM	= 1235,
    VADDUHS	= 1236,
    VADDUQM	= 1237,
    VADDUWM	= 1238,
    VADDUWS	= 1239,
    VAND	= 1240,
    VANDC	= 1241,
    VAVGSB	= 1242,
    VAVGSH	= 1243,
    VAVGSW	= 1244,
    VAVGUB	= 1245,
    VAVGUH	= 1246,
    VAVGUW	= 1247,
    VBPERMQ	= 1248,
    VCFSX	= 1249,
    VCFSX_0	= 1250,
    VCFUX	= 1251,
    VCFUX_0	= 1252,
    VCIPHER	= 1253,
    VCIPHERLAST	= 1254,
    VCLZB	= 1255,
    VCLZD	= 1256,
    VCLZH	= 1257,
    VCLZW	= 1258,
    VCMPBFP	= 1259,
    VCMPBFPo	= 1260,
    VCMPEQFP	= 1261,
    VCMPEQFPo	= 1262,
    VCMPEQUB	= 1263,
    VCMPEQUBo	= 1264,
    VCMPEQUD	= 1265,
    VCMPEQUDo	= 1266,
    VCMPEQUH	= 1267,
    VCMPEQUHo	= 1268,
    VCMPEQUW	= 1269,
    VCMPEQUWo	= 1270,
    VCMPGEFP	= 1271,
    VCMPGEFPo	= 1272,
    VCMPGTFP	= 1273,
    VCMPGTFPo	= 1274,
    VCMPGTSB	= 1275,
    VCMPGTSBo	= 1276,
    VCMPGTSD	= 1277,
    VCMPGTSDo	= 1278,
    VCMPGTSH	= 1279,
    VCMPGTSHo	= 1280,
    VCMPGTSW	= 1281,
    VCMPGTSWo	= 1282,
    VCMPGTUB	= 1283,
    VCMPGTUBo	= 1284,
    VCMPGTUD	= 1285,
    VCMPGTUDo	= 1286,
    VCMPGTUH	= 1287,
    VCMPGTUHo	= 1288,
    VCMPGTUW	= 1289,
    VCMPGTUWo	= 1290,
    VCTSXS	= 1291,
    VCTSXS_0	= 1292,
    VCTUXS	= 1293,
    VCTUXS_0	= 1294,
    VEQV	= 1295,
    VEXPTEFP	= 1296,
    VGBBD	= 1297,
    VLOGEFP	= 1298,
    VMADDFP	= 1299,
    VMAXFP	= 1300,
    VMAXSB	= 1301,
    VMAXSD	= 1302,
    VMAXSH	= 1303,
    VMAXSW	= 1304,
    VMAXUB	= 1305,
    VMAXUD	= 1306,
    VMAXUH	= 1307,
    VMAXUW	= 1308,
    VMHADDSHS	= 1309,
    VMHRADDSHS	= 1310,
    VMINFP	= 1311,
    VMINSB	= 1312,
    VMINSD	= 1313,
    VMINSH	= 1314,
    VMINSW	= 1315,
    VMINUB	= 1316,
    VMINUD	= 1317,
    VMINUH	= 1318,
    VMINUW	= 1319,
    VMLADDUHM	= 1320,
    VMRGEW	= 1321,
    VMRGHB	= 1322,
    VMRGHH	= 1323,
    VMRGHW	= 1324,
    VMRGLB	= 1325,
    VMRGLH	= 1326,
    VMRGLW	= 1327,
    VMRGOW	= 1328,
    VMSUMMBM	= 1329,
    VMSUMSHM	= 1330,
    VMSUMSHS	= 1331,
    VMSUMUBM	= 1332,
    VMSUMUHM	= 1333,
    VMSUMUHS	= 1334,
    VMULESB	= 1335,
    VMULESH	= 1336,
    VMULESW	= 1337,
    VMULEUB	= 1338,
    VMULEUH	= 1339,
    VMULEUW	= 1340,
    VMULOSB	= 1341,
    VMULOSH	= 1342,
    VMULOSW	= 1343,
    VMULOUB	= 1344,
    VMULOUH	= 1345,
    VMULOUW	= 1346,
    VMULUWM	= 1347,
    VNAND	= 1348,
    VNCIPHER	= 1349,
    VNCIPHERLAST	= 1350,
    VNMSUBFP	= 1351,
    VNOR	= 1352,
    VOR	= 1353,
    VORC	= 1354,
    VPERM	= 1355,
    VPERMXOR	= 1356,
    VPKPX	= 1357,
    VPKSDSS	= 1358,
    VPKSDUS	= 1359,
    VPKSHSS	= 1360,
    VPKSHUS	= 1361,
    VPKSWSS	= 1362,
    VPKSWUS	= 1363,
    VPKUDUM	= 1364,
    VPKUDUS	= 1365,
    VPKUHUM	= 1366,
    VPKUHUS	= 1367,
    VPKUWUM	= 1368,
    VPKUWUS	= 1369,
    VPMSUMB	= 1370,
    VPMSUMD	= 1371,
    VPMSUMH	= 1372,
    VPMSUMW	= 1373,
    VPOPCNTB	= 1374,
    VPOPCNTD	= 1375,
    VPOPCNTH	= 1376,
    VPOPCNTW	= 1377,
    VREFP	= 1378,
    VRFIM	= 1379,
    VRFIN	= 1380,
    VRFIP	= 1381,
    VRFIZ	= 1382,
    VRLB	= 1383,
    VRLD	= 1384,
    VRLH	= 1385,
    VRLW	= 1386,
    VRSQRTEFP	= 1387,
    VSBOX	= 1388,
    VSEL	= 1389,
    VSHASIGMAD	= 1390,
    VSHASIGMAW	= 1391,
    VSL	= 1392,
    VSLB	= 1393,
    VSLD	= 1394,
    VSLDOI	= 1395,
    VSLH	= 1396,
    VSLO	= 1397,
    VSLW	= 1398,
    VSPLTB	= 1399,
    VSPLTH	= 1400,
    VSPLTISB	= 1401,
    VSPLTISH	= 1402,
    VSPLTISW	= 1403,
    VSPLTW	= 1404,
    VSR	= 1405,
    VSRAB	= 1406,
    VSRAD	= 1407,
    VSRAH	= 1408,
    VSRAW	= 1409,
    VSRB	= 1410,
    VSRD	= 1411,
    VSRH	= 1412,
    VSRO	= 1413,
    VSRW	= 1414,
    VSUBCUQ	= 1415,
    VSUBCUW	= 1416,
    VSUBECUQ	= 1417,
    VSUBEUQM	= 1418,
    VSUBFP	= 1419,
    VSUBSBS	= 1420,
    VSUBSHS	= 1421,
    VSUBSWS	= 1422,
    VSUBUBM	= 1423,
    VSUBUBS	= 1424,
    VSUBUDM	= 1425,
    VSUBUHM	= 1426,
    VSUBUHS	= 1427,
    VSUBUQM	= 1428,
    VSUBUWM	= 1429,
    VSUBUWS	= 1430,
    VSUM2SWS	= 1431,
    VSUM4SBS	= 1432,
    VSUM4SHS	= 1433,
    VSUM4UBS	= 1434,
    VSUMSWS	= 1435,
    VUPKHPX	= 1436,
    VUPKHSB	= 1437,
    VUPKHSH	= 1438,
    VUPKHSW	= 1439,
    VUPKLPX	= 1440,
    VUPKLSB	= 1441,
    VUPKLSH	= 1442,
    VUPKLSW	= 1443,
    VXOR	= 1444,
    V_SET0	= 1445,
    V_SET0B	= 1446,
    V_SET0H	= 1447,
    V_SETALLONES	= 1448,
    V_SETALLONESB	= 1449,
    V_SETALLONESH	= 1450,
    WAIT	= 1451,
    WRTEE	= 1452,
    WRTEEI	= 1453,
    XOR	= 1454,
    XOR8	= 1455,
    XOR8o	= 1456,
    XORI	= 1457,
    XORI8	= 1458,
    XORIS	= 1459,
    XORIS8	= 1460,
    XORo	= 1461,
    XSABSDP	= 1462,
    XSADDDP	= 1463,
    XSADDSP	= 1464,
    XSCMPODP	= 1465,
    XSCMPUDP	= 1466,
    XSCPSGNDP	= 1467,
    XSCVDPSP	= 1468,
    XSCVDPSXDS	= 1469,
    XSCVDPSXWS	= 1470,
    XSCVDPUXDS	= 1471,
    XSCVDPUXWS	= 1472,
    XSCVSPDP	= 1473,
    XSCVSXDDP	= 1474,
    XSCVUXDDP	= 1475,
    XSDIVDP	= 1476,
    XSDIVSP	= 1477,
    XSMADDADP	= 1478,
    XSMADDASP	= 1479,
    XSMADDMDP	= 1480,
    XSMADDMSP	= 1481,
    XSMAXDP	= 1482,
    XSMINDP	= 1483,
    XSMSUBADP	= 1484,
    XSMSUBASP	= 1485,
    XSMSUBMDP	= 1486,
    XSMSUBMSP	= 1487,
    XSMULDP	= 1488,
    XSMULSP	= 1489,
    XSNABSDP	= 1490,
    XSNEGDP	= 1491,
    XSNMADDADP	= 1492,
    XSNMADDASP	= 1493,
    XSNMADDMDP	= 1494,
    XSNMADDMSP	= 1495,
    XSNMSUBADP	= 1496,
    XSNMSUBASP	= 1497,
    XSNMSUBMDP	= 1498,
    XSNMSUBMSP	= 1499,
    XSRDPI	= 1500,
    XSRDPIC	= 1501,
    XSRDPIM	= 1502,
    XSRDPIP	= 1503,
    XSRDPIZ	= 1504,
    XSREDP	= 1505,
    XSRESP	= 1506,
    XSRSQRTEDP	= 1507,
    XSRSQRTESP	= 1508,
    XSSQRTDP	= 1509,
    XSSQRTSP	= 1510,
    XSSUBDP	= 1511,
    XSSUBSP	= 1512,
    XSTDIVDP	= 1513,
    XSTSQRTDP	= 1514,
    XVABSDP	= 1515,
    XVABSSP	= 1516,
    XVADDDP	= 1517,
    XVADDSP	= 1518,
    XVCMPEQDP	= 1519,
    XVCMPEQDPo	= 1520,
    XVCMPEQSP	= 1521,
    XVCMPEQSPo	= 1522,
    XVCMPGEDP	= 1523,
    XVCMPGEDPo	= 1524,
    XVCMPGESP	= 1525,
    XVCMPGESPo	= 1526,
    XVCMPGTDP	= 1527,
    XVCMPGTDPo	= 1528,
    XVCMPGTSP	= 1529,
    XVCMPGTSPo	= 1530,
    XVCPSGNDP	= 1531,
    XVCPSGNSP	= 1532,
    XVCVDPSP	= 1533,
    XVCVDPSXDS	= 1534,
    XVCVDPSXWS	= 1535,
    XVCVDPUXDS	= 1536,
    XVCVDPUXWS	= 1537,
    XVCVSPDP	= 1538,
    XVCVSPSXDS	= 1539,
    XVCVSPSXWS	= 1540,
    XVCVSPUXDS	= 1541,
    XVCVSPUXWS	= 1542,
    XVCVSXDDP	= 1543,
    XVCVSXDSP	= 1544,
    XVCVSXWDP	= 1545,
    XVCVSXWSP	= 1546,
    XVCVUXDDP	= 1547,
    XVCVUXDSP	= 1548,
    XVCVUXWDP	= 1549,
    XVCVUXWSP	= 1550,
    XVDIVDP	= 1551,
    XVDIVSP	= 1552,
    XVMADDADP	= 1553,
    XVMADDASP	= 1554,
    XVMADDMDP	= 1555,
    XVMADDMSP	= 1556,
    XVMAXDP	= 1557,
    XVMAXSP	= 1558,
    XVMINDP	= 1559,
    XVMINSP	= 1560,
    XVMSUBADP	= 1561,
    XVMSUBASP	= 1562,
    XVMSUBMDP	= 1563,
    XVMSUBMSP	= 1564,
    XVMULDP	= 1565,
    XVMULSP	= 1566,
    XVNABSDP	= 1567,
    XVNABSSP	= 1568,
    XVNEGDP	= 1569,
    XVNEGSP	= 1570,
    XVNMADDADP	= 1571,
    XVNMADDASP	= 1572,
    XVNMADDMDP	= 1573,
    XVNMADDMSP	= 1574,
    XVNMSUBADP	= 1575,
    XVNMSUBASP	= 1576,
    XVNMSUBMDP	= 1577,
    XVNMSUBMSP	= 1578,
    XVRDPI	= 1579,
    XVRDPIC	= 1580,
    XVRDPIM	= 1581,
    XVRDPIP	= 1582,
    XVRDPIZ	= 1583,
    XVREDP	= 1584,
    XVRESP	= 1585,
    XVRSPI	= 1586,
    XVRSPIC	= 1587,
    XVRSPIM	= 1588,
    XVRSPIP	= 1589,
    XVRSPIZ	= 1590,
    XVRSQRTEDP	= 1591,
    XVRSQRTESP	= 1592,
    XVSQRTDP	= 1593,
    XVSQRTSP	= 1594,
    XVSUBDP	= 1595,
    XVSUBSP	= 1596,
    XVTDIVDP	= 1597,
    XVTDIVSP	= 1598,
    XVTSQRTDP	= 1599,
    XVTSQRTSP	= 1600,
    XXLAND	= 1601,
    XXLANDC	= 1602,
    XXLEQV	= 1603,
    XXLNAND	= 1604,
    XXLNOR	= 1605,
    XXLOR	= 1606,
    XXLORC	= 1607,
    XXLORf	= 1608,
    XXLXOR	= 1609,
    XXMRGHW	= 1610,
    XXMRGLW	= 1611,
    XXPERMDI	= 1612,
    XXSEL	= 1613,
    XXSLDWI	= 1614,
    XXSPLTW	= 1615,
    gBC	= 1616,
    gBCA	= 1617,
    gBCCTR	= 1618,
    gBCCTRL	= 1619,
    gBCL	= 1620,
    gBCLA	= 1621,
    gBCLR	= 1622,
    gBCLRL	= 1623,
    INSTRUCTION_LIST_END = 1624
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_IntSimple	= 1,
    IIC_IntGeneral	= 2,
    IIC_BrB	= 3,
    IIC_VecFP	= 4,
    IIC_IntCompare	= 5,
    IIC_BrCR	= 6,
    IIC_LdStDCBF	= 7,
    IIC_LdStLoad	= 8,
    IIC_IntDivD	= 9,
    IIC_IntDivW	= 10,
    IIC_FPGeneral	= 11,
    IIC_FPAddSub	= 12,
    IIC_FPCompare	= 13,
    IIC_FPDivD	= 14,
    IIC_FPDivS	= 15,
    IIC_FPFused	= 16,
    IIC_FPSqrtD	= 17,
    IIC_FPSqrtS	= 18,
    IIC_LdStICBI	= 19,
    IIC_IntISEL	= 20,
    IIC_SprISYNC	= 21,
    IIC_LdStLWARX	= 22,
    IIC_LdStLoadUpd	= 23,
    IIC_LdStLoadUpdX	= 24,
    IIC_LdStLD	= 25,
    IIC_LdStLDARX	= 26,
    IIC_LdStLDU	= 27,
    IIC_LdStLDUX	= 28,
    IIC_LdStLFD	= 29,
    IIC_LdStLFDU	= 30,
    IIC_LdStLFDUX	= 31,
    IIC_LdStLHA	= 32,
    IIC_LdStLHAU	= 33,
    IIC_LdStLHAUX	= 34,
    IIC_LdStLMW	= 35,
    IIC_LdStLWA	= 36,
    IIC_BrMCR	= 37,
    IIC_SprMFCR	= 38,
    IIC_SprMFSPR	= 39,
    IIC_IntMFFS	= 40,
    IIC_SprMFMSR	= 41,
    IIC_SprMFCRF	= 42,
    IIC_SprMFSR	= 43,
    IIC_SprMFTB	= 44,
    IIC_LdStStore	= 45,
    IIC_VecGeneral	= 46,
    IIC_LdStSync	= 47,
    IIC_BrMCRX	= 48,
    IIC_SprMTSPR	= 49,
    IIC_IntMTFSB0	= 50,
    IIC_SprMTMSR	= 51,
    IIC_SprMTMSRD	= 52,
    IIC_SprMTSR	= 53,
    IIC_IntMulHW	= 54,
    IIC_IntMulHWU	= 55,
    IIC_IntMulHD	= 56,
    IIC_IntMulLI	= 57,
    IIC_VecPerm	= 58,
    IIC_LdStSTFD	= 59,
    IIC_LdStSTFDU	= 60,
    IIC_SprRFI	= 61,
    IIC_IntRFID	= 62,
    IIC_IntRotateD	= 63,
    IIC_IntRotateDI	= 64,
    IIC_IntRotate	= 65,
    IIC_SprSLBIA	= 66,
    IIC_SprSLBIE	= 67,
    IIC_SprSLBMFEE	= 68,
    IIC_SprSLBMTE	= 69,
    IIC_IntShift	= 70,
    IIC_LdStSTWCX	= 71,
    IIC_LdStStoreUpd	= 72,
    IIC_LdStSTD	= 73,
    IIC_LdStSTDCX	= 74,
    IIC_LdStSTDU	= 75,
    IIC_LdStSTDUX	= 76,
    IIC_IntTrapD	= 77,
    IIC_SprTLBIA	= 78,
    IIC_SprTLBIE	= 79,
    IIC_SprTLBIEL	= 80,
    IIC_SprTLBSYNC	= 81,
    IIC_IntTrapW	= 82,
    IIC_VecFPCompare	= 83,
    SCHED_LIST_END = 84
  };
} // End Sched namespace
} // End PPC namespace
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Descriptors                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { PPC::CR0, 0 };
static const uint16_t ImplicitList2[] = { PPC::CARRY, 0 };
static const uint16_t ImplicitList3[] = { PPC::CARRY, PPC::CR0, 0 };
static const uint16_t ImplicitList4[] = { PPC::X0, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const uint16_t ImplicitList5[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const uint16_t ImplicitList6[] = { PPC::R1, 0 };
static const uint16_t ImplicitList7[] = { PPC::CTR, 0 };
static const uint16_t ImplicitList8[] = { PPC::CTR8, 0 };
static const uint16_t ImplicitList9[] = { PPC::CTR, PPC::RM, 0 };
static const uint16_t ImplicitList10[] = { PPC::LR, 0 };
static const uint16_t ImplicitList11[] = { PPC::CTR8, PPC::RM, 0 };
static const uint16_t ImplicitList12[] = { PPC::LR8, 0 };
static const uint16_t ImplicitList13[] = { PPC::RM, 0 };
static const uint16_t ImplicitList14[] = { PPC::LR, PPC::RM, 0 };
static const uint16_t ImplicitList15[] = { PPC::LR8, PPC::X2, 0 };
static const uint16_t ImplicitList16[] = { PPC::CTR, PPC::LR, PPC::RM, 0 };
static const uint16_t ImplicitList17[] = { PPC::CTR8, PPC::LR8, PPC::RM, 0 };
static const uint16_t ImplicitList18[] = { PPC::LR8, PPC::RM, 0 };
static const uint16_t ImplicitList19[] = { PPC::CR1EQ, 0 };
static const uint16_t ImplicitList20[] = { PPC::X1, 0 };
static const uint16_t ImplicitList21[] = { PPC::CR1, 0 };
static const uint16_t ImplicitList22[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const uint16_t ImplicitList23[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const uint16_t ImplicitList24[] = { PPC::CR6, 0 };
static const uint16_t ImplicitList25[] = { PPC::LR, PPC::CTR, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo67[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo68[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo80[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo170[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo171[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo174[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo176[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { PPC::CTRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { PPC::CTRRC8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };

extern const MCInstrDesc PPCInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #18 = PATCHPOINT
  { 19,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #19 = LOAD_STACK_GUARD
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #20 = STATEPOINT
  { 21,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #21 = FRAME_ALLOC
  { 22,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #22 = FAULTING_LOAD_OP
  { 23,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #23 = ADD4
  { 24,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #24 = ADD4TLS
  { 25,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #25 = ADD4o
  { 26,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #26 = ADD8
  { 27,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #27 = ADD8TLS
  { 28,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #28 = ADD8TLS_
  { 29,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #29 = ADD8o
  { 30,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo12, -1 ,nullptr },  // Inst #30 = ADDC
  { 31,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #31 = ADDC8
  { 32,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo14, -1 ,nullptr },  // Inst #32 = ADDC8o
  { 33,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo12, -1 ,nullptr },  // Inst #33 = ADDCo
  { 34,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo12, -1 ,nullptr },  // Inst #34 = ADDE
  { 35,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #35 = ADDE8
  { 36,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo14, -1 ,nullptr },  // Inst #36 = ADDE8o
  { 37,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo12, -1 ,nullptr },  // Inst #37 = ADDEo
  { 38,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #38 = ADDI
  { 39,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #39 = ADDI8
  { 40,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #40 = ADDIC
  { 41,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #41 = ADDIC8
  { 42,	3,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #42 = ADDICo
  { 43,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #43 = ADDIS
  { 44,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #44 = ADDIS8
  { 45,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #45 = ADDISdtprelHA
  { 46,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #46 = ADDISdtprelHA32
  { 47,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #47 = ADDISgotTprelHA
  { 48,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #48 = ADDIStlsgdHA
  { 49,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = ADDIStlsldHA
  { 50,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #50 = ADDIStocHA
  { 51,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #51 = ADDIdtprelL
  { 52,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = ADDIdtprelL32
  { 53,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #53 = ADDItlsgdL
  { 54,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #54 = ADDItlsgdL32
  { 55,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo18, -1 ,nullptr },  // Inst #55 = ADDItlsgdLADDR
  { 56,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo19, -1 ,nullptr },  // Inst #56 = ADDItlsgdLADDR32
  { 57,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #57 = ADDItlsldL
  { 58,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #58 = ADDItlsldL32
  { 59,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo18, -1 ,nullptr },  // Inst #59 = ADDItlsldLADDR
  { 60,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo19, -1 ,nullptr },  // Inst #60 = ADDItlsldLADDR32
  { 61,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #61 = ADDItocL
  { 62,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo20, -1 ,nullptr },  // Inst #62 = ADDME
  { 63,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #63 = ADDME8
  { 64,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #64 = ADDME8o
  { 65,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo20, -1 ,nullptr },  // Inst #65 = ADDMEo
  { 66,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo20, -1 ,nullptr },  // Inst #66 = ADDZE
  { 67,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #67 = ADDZE8
  { 68,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #68 = ADDZE8o
  { 69,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo20, -1 ,nullptr },  // Inst #69 = ADDZEo
  { 70,	1,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo5, -1 ,nullptr },  // Inst #70 = ADJCALLSTACKDOWN
  { 71,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo7, -1 ,nullptr },  // Inst #71 = ADJCALLSTACKUP
  { 72,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #72 = AND
  { 73,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #73 = AND8
  { 74,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #74 = AND8o
  { 75,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #75 = ANDC
  { 76,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #76 = ANDC8
  { 77,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #77 = ANDC8o
  { 78,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #78 = ANDCo
  { 79,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #79 = ANDISo
  { 80,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #80 = ANDISo8
  { 81,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #81 = ANDIo
  { 82,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #82 = ANDIo8
  { 83,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #83 = ANDIo_1_EQ_BIT
  { 84,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #84 = ANDIo_1_EQ_BIT8
  { 85,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #85 = ANDIo_1_GT_BIT
  { 86,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #86 = ANDIo_1_GT_BIT8
  { 87,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #87 = ANDo
  { 88,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo24, -1 ,nullptr },  // Inst #88 = ATOMIC_CMP_SWAP_I16
  { 89,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo24, -1 ,nullptr },  // Inst #89 = ATOMIC_CMP_SWAP_I32
  { 90,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo25, -1 ,nullptr },  // Inst #90 = ATOMIC_CMP_SWAP_I64
  { 91,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo24, -1 ,nullptr },  // Inst #91 = ATOMIC_CMP_SWAP_I8
  { 92,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #92 = ATOMIC_LOAD_ADD_I16
  { 93,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #93 = ATOMIC_LOAD_ADD_I32
  { 94,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #94 = ATOMIC_LOAD_ADD_I64
  { 95,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #95 = ATOMIC_LOAD_ADD_I8
  { 96,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #96 = ATOMIC_LOAD_AND_I16
  { 97,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #97 = ATOMIC_LOAD_AND_I32
  { 98,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #98 = ATOMIC_LOAD_AND_I64
  { 99,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #99 = ATOMIC_LOAD_AND_I8
  { 100,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #100 = ATOMIC_LOAD_NAND_I16
  { 101,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #101 = ATOMIC_LOAD_NAND_I32
  { 102,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #102 = ATOMIC_LOAD_NAND_I64
  { 103,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #103 = ATOMIC_LOAD_NAND_I8
  { 104,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #104 = ATOMIC_LOAD_OR_I16
  { 105,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #105 = ATOMIC_LOAD_OR_I32
  { 106,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #106 = ATOMIC_LOAD_OR_I64
  { 107,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #107 = ATOMIC_LOAD_OR_I8
  { 108,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #108 = ATOMIC_LOAD_SUB_I16
  { 109,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #109 = ATOMIC_LOAD_SUB_I32
  { 110,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #110 = ATOMIC_LOAD_SUB_I64
  { 111,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #111 = ATOMIC_LOAD_SUB_I8
  { 112,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #112 = ATOMIC_LOAD_XOR_I16
  { 113,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #113 = ATOMIC_LOAD_XOR_I32
  { 114,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #114 = ATOMIC_LOAD_XOR_I64
  { 115,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #115 = ATOMIC_LOAD_XOR_I8
  { 116,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #116 = ATOMIC_SWAP_I16
  { 117,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #117 = ATOMIC_SWAP_I32
  { 118,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #118 = ATOMIC_SWAP_I64
  { 119,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #119 = ATOMIC_SWAP_I8
  { 120,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #120 = ATTN
  { 121,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #121 = B
  { 122,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #122 = BA
  { 123,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #123 = BC
  { 124,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #124 = BCC
  { 125,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #125 = BCCA
  { 126,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #126 = BCCCTR
  { 127,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #127 = BCCCTR8
  { 128,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo30, -1 ,nullptr },  // Inst #128 = BCCCTRL
  { 129,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo30, -1 ,nullptr },  // Inst #129 = BCCCTRL8
  { 130,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo29, -1 ,nullptr },  // Inst #130 = BCCL
  { 131,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo29, -1 ,nullptr },  // Inst #131 = BCCLA
  { 132,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #132 = BCCLR
  { 133,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo30, -1 ,nullptr },  // Inst #133 = BCCLRL
  { 134,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #134 = BCCTR
  { 135,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #135 = BCCTR8
  { 136,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #136 = BCCTR8n
  { 137,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo31, -1 ,nullptr },  // Inst #137 = BCCTRL
  { 138,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo31, -1 ,nullptr },  // Inst #138 = BCCTRL8
  { 139,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo31, -1 ,nullptr },  // Inst #139 = BCCTRL8n
  { 140,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo31, -1 ,nullptr },  // Inst #140 = BCCTRLn
  { 141,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #141 = BCCTRn
  { 142,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo28, -1 ,nullptr },  // Inst #142 = BCL
  { 143,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #143 = BCLR
  { 144,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo31, -1 ,nullptr },  // Inst #144 = BCLRL
  { 145,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo31, -1 ,nullptr },  // Inst #145 = BCLRLn
  { 146,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #146 = BCLRn
  { 147,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo5, -1 ,nullptr },  // Inst #147 = BCLalways
  { 148,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo28, -1 ,nullptr },  // Inst #148 = BCLn
  { 149,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, nullptr, -1 ,nullptr },  // Inst #149 = BCTR
  { 150,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, nullptr, -1 ,nullptr },  // Inst #150 = BCTR8
  { 151,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList9, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #151 = BCTRL
  { 152,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #152 = BCTRL8
  { 153,	2,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList15, OperandInfo32, -1 ,nullptr },  // Inst #153 = BCTRL8_LDinto_toc
  { 154,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #154 = BCn
  { 155,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #155 = BDNZ
  { 156,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo5, -1 ,nullptr },  // Inst #156 = BDNZ8
  { 157,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #157 = BDNZA
  { 158,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #158 = BDNZAm
  { 159,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #159 = BDNZAp
  { 160,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #160 = BDNZL
  { 161,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #161 = BDNZLA
  { 162,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #162 = BDNZLAm
  { 163,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #163 = BDNZLAp
  { 164,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #164 = BDNZLR
  { 165,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #165 = BDNZLR8
  { 166,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #166 = BDNZLRL
  { 167,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #167 = BDNZLRLm
  { 168,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #168 = BDNZLRLp
  { 169,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #169 = BDNZLRm
  { 170,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #170 = BDNZLRp
  { 171,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #171 = BDNZLm
  { 172,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #172 = BDNZLp
  { 173,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #173 = BDNZm
  { 174,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #174 = BDNZp
  { 175,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #175 = BDZ
  { 176,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo5, -1 ,nullptr },  // Inst #176 = BDZ8
  { 177,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #177 = BDZA
  { 178,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #178 = BDZAm
  { 179,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #179 = BDZAp
  { 180,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #180 = BDZL
  { 181,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #181 = BDZLA
  { 182,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #182 = BDZLAm
  { 183,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #183 = BDZLAp
  { 184,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #184 = BDZLR
  { 185,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #185 = BDZLR8
  { 186,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #186 = BDZLRL
  { 187,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #187 = BDZLRLm
  { 188,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #188 = BDZLRLp
  { 189,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #189 = BDZLRm
  { 190,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #190 = BDZLRp
  { 191,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #191 = BDZLm
  { 192,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #192 = BDZLp
  { 193,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #193 = BDZm
  { 194,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo5, -1 ,nullptr },  // Inst #194 = BDZp
  { 195,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo5, -1 ,nullptr },  // Inst #195 = BL
  { 196,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo5, -1 ,nullptr },  // Inst #196 = BL8
  { 197,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo5, -1 ,nullptr },  // Inst #197 = BL8_NOP
  { 198,	2,	0,	8,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #198 = BL8_NOP_TLS
  { 199,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #199 = BL8_TLS
  { 200,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #200 = BL8_TLS_
  { 201,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo5, -1 ,nullptr },  // Inst #201 = BLA
  { 202,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo5, -1 ,nullptr },  // Inst #202 = BLA8
  { 203,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo5, -1 ,nullptr },  // Inst #203 = BLA8_NOP
  { 204,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList14, nullptr, nullptr, -1 ,nullptr },  // Inst #204 = BLR
  { 205,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList18, nullptr, nullptr, -1 ,nullptr },  // Inst #205 = BLR8
  { 206,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #206 = BLRL
  { 207,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo7, -1 ,nullptr },  // Inst #207 = BL_TLS
  { 208,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #208 = BPERMD
  { 209,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #209 = BRINC
  { 210,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #210 = CLRBHRB
  { 211,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #211 = CLRLSLDI
  { 212,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #212 = CLRLSLDIo
  { 213,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #213 = CLRLSLWI
  { 214,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #214 = CLRLSLWIo
  { 215,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #215 = CLRRDI
  { 216,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #216 = CLRRDIo
  { 217,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #217 = CLRRWI
  { 218,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #218 = CLRRWIo
  { 219,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #219 = CMPB
  { 220,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #220 = CMPB8
  { 221,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #221 = CMPD
  { 222,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #222 = CMPDI
  { 223,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #223 = CMPLD
  { 224,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #224 = CMPLDI
  { 225,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #225 = CMPLW
  { 226,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #226 = CMPLWI
  { 227,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #227 = CMPW
  { 228,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #228 = CMPWI
  { 229,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #229 = CNTLZD
  { 230,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #230 = CNTLZDo
  { 231,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #231 = CNTLZW
  { 232,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #232 = CNTLZW8
  { 233,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #233 = CNTLZW8o
  { 234,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo20, -1 ,nullptr },  // Inst #234 = CNTLZWo
  { 235,	0,	0,	4,	6,	0, 0x0ULL, nullptr, ImplicitList19, nullptr, -1 ,nullptr },  // Inst #235 = CR6SET
  { 236,	0,	0,	4,	6,	0, 0x0ULL, nullptr, ImplicitList19, nullptr, -1 ,nullptr },  // Inst #236 = CR6UNSET
  { 237,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #237 = CRAND
  { 238,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #238 = CRANDC
  { 239,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #239 = CREQV
  { 240,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #240 = CRNAND
  { 241,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #241 = CRNOR
  { 242,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #242 = CROR
  { 243,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #243 = CRORC
  { 244,	1,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #244 = CRSET
  { 245,	1,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #245 = CRUNSET
  { 246,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #246 = CRXOR
  { 247,	2,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #247 = DCBA
  { 248,	2,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #248 = DCBF
  { 249,	2,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #249 = DCBI
  { 250,	2,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #250 = DCBST
  { 251,	3,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #251 = DCBT
  { 252,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #252 = DCBTCT
  { 253,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #253 = DCBTDS
  { 254,	3,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #254 = DCBTST
  { 255,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #255 = DCBTSTCT
  { 256,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #256 = DCBTSTDS
  { 257,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #257 = DCBTSTT
  { 258,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #258 = DCBTSTx
  { 259,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #259 = DCBTT
  { 260,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #260 = DCBTx
  { 261,	2,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #261 = DCBZ
  { 262,	2,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #262 = DCBZL
  { 263,	2,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #263 = DCCCI
  { 264,	3,	1,	4,	9,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #264 = DIVD
  { 265,	3,	1,	4,	9,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #265 = DIVDE
  { 266,	3,	1,	4,	9,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #266 = DIVDEU
  { 267,	3,	1,	4,	9,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #267 = DIVDEUo
  { 268,	3,	1,	4,	9,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #268 = DIVDEo
  { 269,	3,	1,	4,	9,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #269 = DIVDU
  { 270,	3,	1,	4,	9,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #270 = DIVDUo
  { 271,	3,	1,	4,	9,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #271 = DIVDo
  { 272,	3,	1,	4,	10,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #272 = DIVW
  { 273,	3,	1,	4,	10,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #273 = DIVWE
  { 274,	3,	1,	4,	10,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #274 = DIVWEU
  { 275,	3,	1,	4,	10,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #275 = DIVWEUo
  { 276,	3,	1,	4,	10,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #276 = DIVWEo
  { 277,	3,	1,	4,	10,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #277 = DIVWU
  { 278,	3,	1,	4,	10,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #278 = DIVWUo
  { 279,	3,	1,	4,	10,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #279 = DIVWo
  { 280,	1,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5, PPC::DeprecatedDST ,nullptr },  // Inst #280 = DSS
  { 281,	0,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, PPC::DeprecatedDST ,nullptr },  // Inst #281 = DSSALL
  { 282,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, PPC::DeprecatedDST ,nullptr },  // Inst #282 = DST
  { 283,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, PPC::DeprecatedDST ,nullptr },  // Inst #283 = DST64
  { 284,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, PPC::DeprecatedDST ,nullptr },  // Inst #284 = DSTST
  { 285,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, PPC::DeprecatedDST ,nullptr },  // Inst #285 = DSTST64
  { 286,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, PPC::DeprecatedDST ,nullptr },  // Inst #286 = DSTSTT
  { 287,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, PPC::DeprecatedDST ,nullptr },  // Inst #287 = DSTSTT64
  { 288,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, PPC::DeprecatedDST ,nullptr },  // Inst #288 = DSTT
  { 289,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, PPC::DeprecatedDST ,nullptr },  // Inst #289 = DSTT64
  { 290,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo45, -1 ,nullptr },  // Inst #290 = DYNALLOC
  { 291,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList20, ImplicitList20, OperandInfo46, -1 ,nullptr },  // Inst #291 = DYNALLOC8
  { 292,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #292 = EH_SjLj_LongJmp32
  { 293,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #293 = EH_SjLj_LongJmp64
  { 294,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo47, -1 ,nullptr },  // Inst #294 = EH_SjLj_SetJmp32
  { 295,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo47, -1 ,nullptr },  // Inst #295 = EH_SjLj_SetJmp64
  { 296,	1,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #296 = EH_SjLj_Setup
  { 297,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #297 = EQV
  { 298,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #298 = EQV8
  { 299,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #299 = EQV8o
  { 300,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #300 = EQVo
  { 301,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #301 = EVABS
  { 302,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #302 = EVADDIW
  { 303,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #303 = EVADDSMIAAW
  { 304,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #304 = EVADDSSIAAW
  { 305,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #305 = EVADDUMIAAW
  { 306,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #306 = EVADDUSIAAW
  { 307,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #307 = EVADDW
  { 308,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #308 = EVAND
  { 309,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #309 = EVANDC
  { 310,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #310 = EVCMPEQ
  { 311,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #311 = EVCMPGTS
  { 312,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #312 = EVCMPGTU
  { 313,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #313 = EVCMPLTS
  { 314,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #314 = EVCMPLTU
  { 315,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #315 = EVCNTLSW
  { 316,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #316 = EVCNTLZW
  { 317,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #317 = EVDIVWS
  { 318,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #318 = EVDIVWU
  { 319,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #319 = EVEQV
  { 320,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #320 = EVEXTSB
  { 321,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #321 = EVEXTSH
  { 322,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #322 = EVLDD
  { 323,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #323 = EVLDDX
  { 324,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #324 = EVLDH
  { 325,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #325 = EVLDHX
  { 326,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #326 = EVLDW
  { 327,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #327 = EVLDWX
  { 328,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #328 = EVLHHESPLAT
  { 329,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #329 = EVLHHESPLATX
  { 330,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #330 = EVLHHOSSPLAT
  { 331,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #331 = EVLHHOSSPLATX
  { 332,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #332 = EVLHHOUSPLAT
  { 333,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #333 = EVLHHOUSPLATX
  { 334,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #334 = EVLWHE
  { 335,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #335 = EVLWHEX
  { 336,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #336 = EVLWHOS
  { 337,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #337 = EVLWHOSX
  { 338,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #338 = EVLWHOU
  { 339,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #339 = EVLWHOUX
  { 340,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #340 = EVLWHSPLAT
  { 341,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #341 = EVLWHSPLATX
  { 342,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #342 = EVLWWSPLAT
  { 343,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #343 = EVLWWSPLATX
  { 344,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #344 = EVMERGEHI
  { 345,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #345 = EVMERGEHILO
  { 346,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #346 = EVMERGELO
  { 347,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #347 = EVMERGELOHI
  { 348,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #348 = EVMHEGSMFAA
  { 349,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #349 = EVMHEGSMFAN
  { 350,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #350 = EVMHEGSMIAA
  { 351,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #351 = EVMHEGSMIAN
  { 352,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #352 = EVMHEGUMIAA
  { 353,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #353 = EVMHEGUMIAN
  { 354,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #354 = EVMHESMF
  { 355,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #355 = EVMHESMFA
  { 356,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #356 = EVMHESMFAAW
  { 357,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #357 = EVMHESMFANW
  { 358,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #358 = EVMHESMI
  { 359,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #359 = EVMHESMIA
  { 360,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #360 = EVMHESMIAAW
  { 361,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #361 = EVMHESMIANW
  { 362,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #362 = EVMHESSF
  { 363,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #363 = EVMHESSFA
  { 364,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #364 = EVMHESSFAAW
  { 365,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #365 = EVMHESSFANW
  { 366,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #366 = EVMHESSIAAW
  { 367,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #367 = EVMHESSIANW
  { 368,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #368 = EVMHEUMI
  { 369,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #369 = EVMHEUMIA
  { 370,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #370 = EVMHEUMIAAW
  { 371,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #371 = EVMHEUMIANW
  { 372,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #372 = EVMHEUSIAAW
  { 373,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #373 = EVMHEUSIANW
  { 374,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #374 = EVMHOGSMFAA
  { 375,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #375 = EVMHOGSMFAN
  { 376,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #376 = EVMHOGSMIAA
  { 377,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #377 = EVMHOGSMIAN
  { 378,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #378 = EVMHOGUMIAA
  { 379,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #379 = EVMHOGUMIAN
  { 380,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #380 = EVMHOSMF
  { 381,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #381 = EVMHOSMFA
  { 382,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #382 = EVMHOSMFAAW
  { 383,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #383 = EVMHOSMFANW
  { 384,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #384 = EVMHOSMI
  { 385,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #385 = EVMHOSMIA
  { 386,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #386 = EVMHOSMIAAW
  { 387,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #387 = EVMHOSMIANW
  { 388,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #388 = EVMHOSSF
  { 389,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #389 = EVMHOSSFA
  { 390,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #390 = EVMHOSSFAAW
  { 391,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #391 = EVMHOSSFANW
  { 392,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #392 = EVMHOSSIAAW
  { 393,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #393 = EVMHOSSIANW
  { 394,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #394 = EVMHOUMI
  { 395,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #395 = EVMHOUMIA
  { 396,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #396 = EVMHOUMIAAW
  { 397,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #397 = EVMHOUMIANW
  { 398,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #398 = EVMHOUSIAAW
  { 399,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #399 = EVMHOUSIANW
  { 400,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #400 = EVMRA
  { 401,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #401 = EVMWHSMF
  { 402,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #402 = EVMWHSMFA
  { 403,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #403 = EVMWHSMI
  { 404,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #404 = EVMWHSMIA
  { 405,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #405 = EVMWHSSF
  { 406,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #406 = EVMWHSSFA
  { 407,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #407 = EVMWHUMI
  { 408,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #408 = EVMWHUMIA
  { 409,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #409 = EVMWLSMIAAW
  { 410,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #410 = EVMWLSMIANW
  { 411,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #411 = EVMWLSSIAAW
  { 412,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #412 = EVMWLSSIANW
  { 413,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #413 = EVMWLUMI
  { 414,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #414 = EVMWLUMIA
  { 415,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #415 = EVMWLUMIAAW
  { 416,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #416 = EVMWLUMIANW
  { 417,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #417 = EVMWLUSIAAW
  { 418,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #418 = EVMWLUSIANW
  { 419,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #419 = EVMWSMF
  { 420,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #420 = EVMWSMFA
  { 421,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #421 = EVMWSMFAA
  { 422,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #422 = EVMWSMFAN
  { 423,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #423 = EVMWSMI
  { 424,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #424 = EVMWSMIA
  { 425,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #425 = EVMWSMIAA
  { 426,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #426 = EVMWSMIAN
  { 427,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #427 = EVMWSSF
  { 428,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #428 = EVMWSSFA
  { 429,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #429 = EVMWSSFAA
  { 430,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #430 = EVMWSSFAN
  { 431,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #431 = EVMWUMI
  { 432,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #432 = EVMWUMIA
  { 433,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #433 = EVMWUMIAA
  { 434,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #434 = EVMWUMIAN
  { 435,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #435 = EVNAND
  { 436,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #436 = EVNEG
  { 437,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #437 = EVNOR
  { 438,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #438 = EVOR
  { 439,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #439 = EVORC
  { 440,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #440 = EVRLW
  { 441,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #441 = EVRLWI
  { 442,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #442 = EVRNDW
  { 443,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #443 = EVSLW
  { 444,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #444 = EVSLWI
  { 445,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #445 = EVSPLATFI
  { 446,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #446 = EVSPLATI
  { 447,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #447 = EVSRWIS
  { 448,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #448 = EVSRWIU
  { 449,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #449 = EVSRWS
  { 450,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #450 = EVSRWU
  { 451,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #451 = EVSTDD
  { 452,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #452 = EVSTDDX
  { 453,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #453 = EVSTDH
  { 454,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #454 = EVSTDHX
  { 455,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #455 = EVSTDW
  { 456,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #456 = EVSTDWX
  { 457,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #457 = EVSTWHE
  { 458,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #458 = EVSTWHEX
  { 459,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #459 = EVSTWHO
  { 460,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #460 = EVSTWHOX
  { 461,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #461 = EVSTWWE
  { 462,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #462 = EVSTWWEX
  { 463,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #463 = EVSTWWO
  { 464,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #464 = EVSTWWOX
  { 465,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #465 = EVSUBFSMIAAW
  { 466,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #466 = EVSUBFSSIAAW
  { 467,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #467 = EVSUBFUMIAAW
  { 468,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #468 = EVSUBFUSIAAW
  { 469,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #469 = EVSUBFW
  { 470,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #470 = EVSUBIFW
  { 471,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #471 = EVXOR
  { 472,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #472 = EXTLDI
  { 473,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #473 = EXTLDIo
  { 474,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #474 = EXTLWI
  { 475,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #475 = EXTLWIo
  { 476,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #476 = EXTRDI
  { 477,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #477 = EXTRDIo
  { 478,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #478 = EXTRWI
  { 479,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #479 = EXTRWIo
  { 480,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #480 = EXTSB
  { 481,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #481 = EXTSB8
  { 482,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #482 = EXTSB8_32_64
  { 483,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #483 = EXTSB8o
  { 484,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo20, -1 ,nullptr },  // Inst #484 = EXTSBo
  { 485,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #485 = EXTSH
  { 486,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #486 = EXTSH8
  { 487,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #487 = EXTSH8_32_64
  { 488,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #488 = EXTSH8o
  { 489,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo20, -1 ,nullptr },  // Inst #489 = EXTSHo
  { 490,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #490 = EXTSW
  { 491,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #491 = EXTSW_32_64
  { 492,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51, -1 ,nullptr },  // Inst #492 = EXTSW_32_64o
  { 493,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #493 = EXTSWo
  { 494,	0,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #494 = EnforceIEIO
  { 495,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #495 = FABSD
  { 496,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #496 = FABSDo
  { 497,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #497 = FABSS
  { 498,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #498 = FABSSo
  { 499,	3,	1,	4,	12,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #499 = FADD
  { 500,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #500 = FADDS
  { 501,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo55, -1 ,nullptr },  // Inst #501 = FADDSo
  { 502,	3,	1,	4,	12,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo54, -1 ,nullptr },  // Inst #502 = FADDo
  { 503,	3,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #503 = FADDrtz
  { 504,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #504 = FCFID
  { 505,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #505 = FCFIDS
  { 506,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo56, -1 ,nullptr },  // Inst #506 = FCFIDSo
  { 507,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #507 = FCFIDU
  { 508,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #508 = FCFIDUS
  { 509,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo56, -1 ,nullptr },  // Inst #509 = FCFIDUSo
  { 510,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #510 = FCFIDUo
  { 511,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #511 = FCFIDo
  { 512,	3,	1,	4,	13,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #512 = FCMPUD
  { 513,	3,	1,	4,	13,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #513 = FCMPUS
  { 514,	3,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #514 = FCPSGND
  { 515,	3,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo54, -1 ,nullptr },  // Inst #515 = FCPSGNDo
  { 516,	3,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #516 = FCPSGNS
  { 517,	3,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo55, -1 ,nullptr },  // Inst #517 = FCPSGNSo
  { 518,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #518 = FCTID
  { 519,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #519 = FCTIDUZ
  { 520,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #520 = FCTIDUZo
  { 521,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #521 = FCTIDZ
  { 522,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #522 = FCTIDZo
  { 523,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #523 = FCTIDo
  { 524,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #524 = FCTIW
  { 525,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #525 = FCTIWUZ
  { 526,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #526 = FCTIWUZo
  { 527,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #527 = FCTIWZ
  { 528,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #528 = FCTIWZo
  { 529,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #529 = FCTIWo
  { 530,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #530 = FDIV
  { 531,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #531 = FDIVS
  { 532,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo55, -1 ,nullptr },  // Inst #532 = FDIVSo
  { 533,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo54, -1 ,nullptr },  // Inst #533 = FDIVo
  { 534,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #534 = FMADD
  { 535,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #535 = FMADDS
  { 536,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo60, -1 ,nullptr },  // Inst #536 = FMADDSo
  { 537,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo59, -1 ,nullptr },  // Inst #537 = FMADDo
  { 538,	2,	1,	4,	11,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #538 = FMR
  { 539,	2,	1,	4,	11,	0, 0x0ULL, nullptr, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #539 = FMRo
  { 540,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #540 = FMSUB
  { 541,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #541 = FMSUBS
  { 542,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo60, -1 ,nullptr },  // Inst #542 = FMSUBSo
  { 543,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo59, -1 ,nullptr },  // Inst #543 = FMSUBo
  { 544,	3,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #544 = FMUL
  { 545,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #545 = FMULS
  { 546,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo55, -1 ,nullptr },  // Inst #546 = FMULSo
  { 547,	3,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo54, -1 ,nullptr },  // Inst #547 = FMULo
  { 548,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #548 = FNABSD
  { 549,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #549 = FNABSDo
  { 550,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #550 = FNABSS
  { 551,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #551 = FNABSSo
  { 552,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #552 = FNEGD
  { 553,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #553 = FNEGDo
  { 554,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #554 = FNEGS
  { 555,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #555 = FNEGSo
  { 556,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #556 = FNMADD
  { 557,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #557 = FNMADDS
  { 558,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo60, -1 ,nullptr },  // Inst #558 = FNMADDSo
  { 559,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo59, -1 ,nullptr },  // Inst #559 = FNMADDo
  { 560,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #560 = FNMSUB
  { 561,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #561 = FNMSUBS
  { 562,	4,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo60, -1 ,nullptr },  // Inst #562 = FNMSUBSo
  { 563,	4,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo59, -1 ,nullptr },  // Inst #563 = FNMSUBo
  { 564,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #564 = FRE
  { 565,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #565 = FRES
  { 566,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #566 = FRESo
  { 567,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #567 = FREo
  { 568,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #568 = FRIMD
  { 569,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #569 = FRIMDo
  { 570,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #570 = FRIMS
  { 571,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #571 = FRIMSo
  { 572,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #572 = FRIND
  { 573,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #573 = FRINDo
  { 574,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #574 = FRINS
  { 575,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #575 = FRINSo
  { 576,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #576 = FRIPD
  { 577,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #577 = FRIPDo
  { 578,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #578 = FRIPS
  { 579,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #579 = FRIPSo
  { 580,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #580 = FRIZD
  { 581,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #581 = FRIZDo
  { 582,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #582 = FRIZS
  { 583,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #583 = FRIZSo
  { 584,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #584 = FRSP
  { 585,	2,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo56, -1 ,nullptr },  // Inst #585 = FRSPo
  { 586,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #586 = FRSQRTE
  { 587,	2,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #587 = FRSQRTES
  { 588,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #588 = FRSQRTESo
  { 589,	2,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #589 = FRSQRTEo
  { 590,	4,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #590 = FSELD
  { 591,	4,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo59, -1 ,nullptr },  // Inst #591 = FSELDo
  { 592,	4,	1,	4,	11,	0, 0x18ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #592 = FSELS
  { 593,	4,	1,	4,	11,	0, 0x18ULL, nullptr, ImplicitList21, OperandInfo61, -1 ,nullptr },  // Inst #593 = FSELSo
  { 594,	2,	1,	4,	17,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #594 = FSQRT
  { 595,	2,	1,	4,	18,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #595 = FSQRTS
  { 596,	2,	1,	4,	18,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #596 = FSQRTSo
  { 597,	2,	1,	4,	17,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo52, -1 ,nullptr },  // Inst #597 = FSQRTo
  { 598,	3,	1,	4,	12,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #598 = FSUB
  { 599,	3,	1,	4,	11,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #599 = FSUBS
  { 600,	3,	1,	4,	11,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo55, -1 ,nullptr },  // Inst #600 = FSUBSo
  { 601,	3,	1,	4,	12,	0, 0x18ULL, ImplicitList13, ImplicitList21, OperandInfo54, -1 ,nullptr },  // Inst #601 = FSUBo
  { 602,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList22, OperandInfo15, -1 ,nullptr },  // Inst #602 = GETtlsADDR
  { 603,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo13, -1 ,nullptr },  // Inst #603 = GETtlsADDR32
  { 604,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList22, OperandInfo15, -1 ,nullptr },  // Inst #604 = GETtlsldADDR
  { 605,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo13, -1 ,nullptr },  // Inst #605 = GETtlsldADDR32
  { 606,	2,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #606 = ICBI
  { 607,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #607 = ICBT
  { 608,	2,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #608 = ICCCI
  { 609,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #609 = INSLWI
  { 610,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #610 = INSLWIo
  { 611,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #611 = INSRDI
  { 612,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #612 = INSRDIo
  { 613,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #613 = INSRWI
  { 614,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #614 = INSRWIo
  { 615,	4,	1,	4,	20,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #615 = ISEL
  { 616,	4,	1,	4,	20,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #616 = ISEL8
  { 617,	0,	0,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #617 = ISYNC
  { 618,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #618 = LA
  { 619,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #619 = LAx
  { 620,	3,	1,	4,	22,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #620 = LBARX
  { 621,	3,	1,	4,	22,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #621 = LBARXL
  { 622,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #622 = LBZ
  { 623,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #623 = LBZ8
  { 624,	3,	1,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #624 = LBZCIX
  { 625,	4,	2,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #625 = LBZU
  { 626,	4,	2,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #626 = LBZU8
  { 627,	4,	2,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #627 = LBZUX
  { 628,	4,	2,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #628 = LBZUX8
  { 629,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #629 = LBZX
  { 630,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #630 = LBZX8
  { 631,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #631 = LD
  { 632,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #632 = LDARX
  { 633,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #633 = LDARXL
  { 634,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #634 = LDBRX
  { 635,	3,	1,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #635 = LDCIX
  { 636,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #636 = LDU
  { 637,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #637 = LDUX
  { 638,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #638 = LDX
  { 639,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #639 = LDgotTprelL
  { 640,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #640 = LDgotTprelL32
  { 641,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #641 = LDtoc
  { 642,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #642 = LDtocBA
  { 643,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #643 = LDtocCPT
  { 644,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #644 = LDtocJTI
  { 645,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #645 = LDtocL
  { 646,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #646 = LFD
  { 647,	4,	2,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #647 = LFDU
  { 648,	4,	2,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #648 = LFDUX
  { 649,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #649 = LFDX
  { 650,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #650 = LFIWAX
  { 651,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #651 = LFIWZX
  { 652,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #652 = LFS
  { 653,	4,	2,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #653 = LFSU
  { 654,	4,	2,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #654 = LFSUX
  { 655,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #655 = LFSX
  { 656,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #656 = LHA
  { 657,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #657 = LHA8
  { 658,	3,	1,	4,	22,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #658 = LHARX
  { 659,	3,	1,	4,	22,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #659 = LHARXL
  { 660,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #660 = LHAU
  { 661,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #661 = LHAU8
  { 662,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #662 = LHAUX
  { 663,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #663 = LHAUX8
  { 664,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #664 = LHAX
  { 665,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #665 = LHAX8
  { 666,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #666 = LHBRX
  { 667,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #667 = LHBRX8
  { 668,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #668 = LHZ
  { 669,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #669 = LHZ8
  { 670,	3,	1,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #670 = LHZCIX
  { 671,	4,	2,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #671 = LHZU
  { 672,	4,	2,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #672 = LHZU8
  { 673,	4,	2,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #673 = LHZUX
  { 674,	4,	2,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #674 = LHZUX8
  { 675,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #675 = LHZX
  { 676,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #676 = LHZX8
  { 677,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #677 = LI
  { 678,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #678 = LI8
  { 679,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #679 = LIS
  { 680,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #680 = LIS8
  { 681,	3,	1,	4,	35,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #681 = LMW
  { 682,	3,	1,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #682 = LSWI
  { 683,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #683 = LVEBX
  { 684,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #684 = LVEHX
  { 685,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #685 = LVEWX
  { 686,	3,	1,	4,	8,	0, 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #686 = LVSL
  { 687,	3,	1,	4,	8,	0, 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #687 = LVSR
  { 688,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #688 = LVX
  { 689,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #689 = LVXL
  { 690,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #690 = LWA
  { 691,	3,	1,	4,	22,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #691 = LWARX
  { 692,	3,	1,	4,	22,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #692 = LWARXL
  { 693,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #693 = LWAUX
  { 694,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #694 = LWAX
  { 695,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #695 = LWAX_32
  { 696,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #696 = LWA_32
  { 697,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #697 = LWBRX
  { 698,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #698 = LWBRX8
  { 699,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #699 = LWZ
  { 700,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #700 = LWZ8
  { 701,	3,	1,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #701 = LWZCIX
  { 702,	4,	2,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #702 = LWZU
  { 703,	4,	2,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #703 = LWZU8
  { 704,	4,	2,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #704 = LWZUX
  { 705,	4,	2,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #705 = LWZUX8
  { 706,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #706 = LWZX
  { 707,	3,	1,	4,	8,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #707 = LWZX8
  { 708,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #708 = LWZtoc
  { 709,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #709 = LXSDX
  { 710,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #710 = LXSIWAX
  { 711,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #711 = LXSIWZX
  { 712,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #712 = LXSSPX
  { 713,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #713 = LXVD2X
  { 714,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #714 = LXVDSX
  { 715,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #715 = LXVW4X
  { 716,	1,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #716 = MBAR
  { 717,	2,	1,	4,	37,	0, 0x21ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #717 = MCRF
  { 718,	2,	1,	4,	37,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #718 = MCRFS
  { 719,	3,	1,	4,	3,	0, 0x1ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #719 = MFBHRBE
  { 720,	1,	1,	4,	38,	0, 0x20ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #720 = MFCR
  { 721,	1,	1,	4,	38,	0, 0x20ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #721 = MFCR8
  { 722,	1,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList7, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #722 = MFCTR
  { 723,	1,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList8, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #723 = MFCTR8
  { 724,	2,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #724 = MFDCR
  { 725,	1,	1,	4,	40,	0, 0x1aULL, ImplicitList13, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #725 = MFFS
  { 726,	1,	1,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList13, ImplicitList21, OperandInfo92, -1 ,nullptr },  // Inst #726 = MFFSo
  { 727,	1,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList10, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #727 = MFLR
  { 728,	1,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList12, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #728 = MFLR8
  { 729,	1,	1,	4,	41,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #729 = MFMSR
  { 730,	2,	1,	4,	42,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #730 = MFOCRF
  { 731,	2,	1,	4,	42,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #731 = MFOCRF8
  { 732,	2,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #732 = MFSPR
  { 733,	2,	1,	4,	39,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #733 = MFSPR8
  { 734,	2,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #734 = MFSR
  { 735,	2,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #735 = MFSRIN
  { 736,	2,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #736 = MFTB
  { 737,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #737 = MFTB8
  { 738,	1,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #738 = MFVRSAVE
  { 739,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #739 = MFVRSAVEv
  { 740,	1,	1,	4,	45,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #740 = MFVSCR
  { 741,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #741 = MFVSRD
  { 742,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #742 = MFVSRWZ
  { 743,	0,	0,	4,	47,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #743 = MSYNC
  { 744,	2,	0,	4,	48,	0, 0x20ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #744 = MTCRF
  { 745,	2,	0,	4,	48,	0, 0x20ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #745 = MTCRF8
  { 746,	1,	0,	4,	49,	0, 0x9ULL, nullptr, ImplicitList7, OperandInfo90, -1 ,nullptr },  // Inst #746 = MTCTR
  { 747,	1,	0,	4,	49,	0, 0x9ULL, nullptr, ImplicitList8, OperandInfo91, -1 ,nullptr },  // Inst #747 = MTCTR8
  { 748,	1,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList8, OperandInfo91, -1 ,nullptr },  // Inst #748 = MTCTR8loop
  { 749,	1,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList7, OperandInfo90, -1 ,nullptr },  // Inst #749 = MTCTRloop
  { 750,	2,	0,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #750 = MTDCR
  { 751,	1,	0,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo5, -1 ,nullptr },  // Inst #751 = MTFSB0
  { 752,	1,	0,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo5, -1 ,nullptr },  // Inst #752 = MTFSB1
  { 753,	4,	0,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #753 = MTFSF
  { 754,	3,	1,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #754 = MTFSFI
  { 755,	3,	1,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #755 = MTFSFIo
  { 756,	2,	0,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo102, -1 ,nullptr },  // Inst #756 = MTFSFb
  { 757,	4,	0,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #757 = MTFSFo
  { 758,	1,	0,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList10, OperandInfo90, -1 ,nullptr },  // Inst #758 = MTLR
  { 759,	1,	0,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList12, OperandInfo91, -1 ,nullptr },  // Inst #759 = MTLR8
  { 760,	2,	0,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #760 = MTMSR
  { 761,	2,	0,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #761 = MTMSRD
  { 762,	2,	1,	4,	48,	0, 0x21ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #762 = MTOCRF
  { 763,	2,	1,	4,	48,	0, 0x21ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #763 = MTOCRF8
  { 764,	2,	0,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #764 = MTSPR
  { 765,	2,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #765 = MTSPR8
  { 766,	2,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #766 = MTSR
  { 767,	2,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #767 = MTSRIN
  { 768,	1,	0,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #768 = MTVRSAVE
  { 769,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #769 = MTVRSAVEv
  { 770,	1,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #770 = MTVSCR
  { 771,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #771 = MTVSRD
  { 772,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #772 = MTVSRWA
  { 773,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #773 = MTVSRWZ
  { 774,	3,	1,	4,	54,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #774 = MULHD
  { 775,	3,	1,	4,	55,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #775 = MULHDU
  { 776,	3,	1,	4,	55,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #776 = MULHDUo
  { 777,	3,	1,	4,	54,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #777 = MULHDo
  { 778,	3,	1,	4,	54,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #778 = MULHW
  { 779,	3,	1,	4,	55,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #779 = MULHWU
  { 780,	3,	1,	4,	55,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #780 = MULHWUo
  { 781,	3,	1,	4,	54,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #781 = MULHWo
  { 782,	3,	1,	4,	56,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #782 = MULLD
  { 783,	3,	1,	4,	56,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #783 = MULLDo
  { 784,	3,	1,	4,	57,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #784 = MULLI
  { 785,	3,	1,	4,	57,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #785 = MULLI8
  { 786,	3,	1,	4,	54,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #786 = MULLW
  { 787,	3,	1,	4,	54,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #787 = MULLWo
  { 788,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #788 = MoveGOTtoLR
  { 789,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #789 = MovePCtoLR
  { 790,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #790 = MovePCtoLR8
  { 791,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #791 = NAND
  { 792,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #792 = NAND8
  { 793,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #793 = NAND8o
  { 794,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #794 = NANDo
  { 795,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #795 = NEG
  { 796,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #796 = NEG8
  { 797,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #797 = NEG8o
  { 798,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo20, -1 ,nullptr },  // Inst #798 = NEGo
  { 799,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #799 = NOP
  { 800,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #800 = NOP_GT_PWR6
  { 801,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #801 = NOP_GT_PWR7
  { 802,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #802 = NOR
  { 803,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #803 = NOR8
  { 804,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #804 = NOR8o
  { 805,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #805 = NORo
  { 806,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #806 = OR
  { 807,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #807 = OR8
  { 808,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #808 = OR8o
  { 809,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #809 = ORC
  { 810,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #810 = ORC8
  { 811,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #811 = ORC8o
  { 812,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #812 = ORCo
  { 813,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #813 = ORI
  { 814,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #814 = ORI8
  { 815,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #815 = ORIS
  { 816,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #816 = ORIS8
  { 817,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #817 = ORo
  { 818,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #818 = POPCNTD
  { 819,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #819 = POPCNTW
  { 820,	1,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #820 = PPC32GOT
  { 821,	2,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #821 = PPC32PICGOT
  { 822,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #822 = QVALIGNI
  { 823,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #823 = QVALIGNIb
  { 824,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #824 = QVALIGNIs
  { 825,	3,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #825 = QVESPLATI
  { 826,	3,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #826 = QVESPLATIb
  { 827,	3,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #827 = QVESPLATIs
  { 828,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #828 = QVFABS
  { 829,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #829 = QVFABSs
  { 830,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #830 = QVFADD
  { 831,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #831 = QVFADDS
  { 832,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #832 = QVFADDSs
  { 833,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #833 = QVFCFID
  { 834,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #834 = QVFCFIDS
  { 835,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #835 = QVFCFIDU
  { 836,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #836 = QVFCFIDUS
  { 837,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #837 = QVFCFIDb
  { 838,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #838 = QVFCMPEQ
  { 839,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #839 = QVFCMPEQb
  { 840,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #840 = QVFCMPEQbs
  { 841,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #841 = QVFCMPGT
  { 842,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #842 = QVFCMPGTb
  { 843,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #843 = QVFCMPGTbs
  { 844,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #844 = QVFCMPLT
  { 845,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #845 = QVFCMPLTb
  { 846,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #846 = QVFCMPLTbs
  { 847,	3,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #847 = QVFCPSGN
  { 848,	3,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #848 = QVFCPSGNs
  { 849,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #849 = QVFCTID
  { 850,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #850 = QVFCTIDU
  { 851,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #851 = QVFCTIDUZ
  { 852,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #852 = QVFCTIDZ
  { 853,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #853 = QVFCTIDb
  { 854,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #854 = QVFCTIW
  { 855,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #855 = QVFCTIWU
  { 856,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #856 = QVFCTIWUZ
  { 857,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #857 = QVFCTIWZ
  { 858,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #858 = QVFLOGICAL
  { 859,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #859 = QVFLOGICALb
  { 860,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #860 = QVFLOGICALs
  { 861,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #861 = QVFMADD
  { 862,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #862 = QVFMADDS
  { 863,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #863 = QVFMADDSs
  { 864,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #864 = QVFMR
  { 865,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #865 = QVFMRb
  { 866,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #866 = QVFMRs
  { 867,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #867 = QVFMSUB
  { 868,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #868 = QVFMSUBS
  { 869,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #869 = QVFMSUBSs
  { 870,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #870 = QVFMUL
  { 871,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #871 = QVFMULS
  { 872,	3,	1,	4,	11,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #872 = QVFMULSs
  { 873,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #873 = QVFNABS
  { 874,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #874 = QVFNABSs
  { 875,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #875 = QVFNEG
  { 876,	2,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #876 = QVFNEGs
  { 877,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #877 = QVFNMADD
  { 878,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #878 = QVFNMADDS
  { 879,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #879 = QVFNMADDSs
  { 880,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #880 = QVFNMSUB
  { 881,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #881 = QVFNMSUBS
  { 882,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #882 = QVFNMSUBSs
  { 883,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #883 = QVFPERM
  { 884,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #884 = QVFPERMs
  { 885,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #885 = QVFRE
  { 886,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #886 = QVFRES
  { 887,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #887 = QVFRESs
  { 888,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #888 = QVFRIM
  { 889,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #889 = QVFRIMs
  { 890,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #890 = QVFRIN
  { 891,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #891 = QVFRINs
  { 892,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #892 = QVFRIP
  { 893,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #893 = QVFRIPs
  { 894,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #894 = QVFRIZ
  { 895,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #895 = QVFRIZs
  { 896,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #896 = QVFRSP
  { 897,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #897 = QVFRSPs
  { 898,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #898 = QVFRSQRTE
  { 899,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #899 = QVFRSQRTES
  { 900,	2,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #900 = QVFRSQRTESs
  { 901,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #901 = QVFSEL
  { 902,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #902 = QVFSELb
  { 903,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #903 = QVFSELbb
  { 904,	4,	1,	4,	58,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #904 = QVFSELbs
  { 905,	3,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #905 = QVFSUB
  { 906,	3,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #906 = QVFSUBS
  { 907,	3,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #907 = QVFSUBSs
  { 908,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #908 = QVFTSTNAN
  { 909,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #909 = QVFTSTNANb
  { 910,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #910 = QVFTSTNANbs
  { 911,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #911 = QVFXMADD
  { 912,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #912 = QVFXMADDS
  { 913,	3,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #913 = QVFXMUL
  { 914,	3,	1,	4,	11,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #914 = QVFXMULS
  { 915,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #915 = QVFXXCPNMADD
  { 916,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #916 = QVFXXCPNMADDS
  { 917,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #917 = QVFXXMADD
  { 918,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #918 = QVFXXMADDS
  { 919,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #919 = QVFXXNPMADD
  { 920,	4,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #920 = QVFXXNPMADDS
  { 921,	2,	1,	4,	58,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #921 = QVGPCI
  { 922,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #922 = QVLFCDUX
  { 923,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #923 = QVLFCDUXA
  { 924,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #924 = QVLFCDX
  { 925,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #925 = QVLFCDXA
  { 926,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #926 = QVLFCSUX
  { 927,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #927 = QVLFCSUXA
  { 928,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #928 = QVLFCSX
  { 929,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #929 = QVLFCSXA
  { 930,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #930 = QVLFCSXs
  { 931,	4,	2,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #931 = QVLFDUX
  { 932,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #932 = QVLFDUXA
  { 933,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #933 = QVLFDX
  { 934,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #934 = QVLFDXA
  { 935,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #935 = QVLFDXb
  { 936,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #936 = QVLFIWAX
  { 937,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #937 = QVLFIWAXA
  { 938,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #938 = QVLFIWZX
  { 939,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #939 = QVLFIWZXA
  { 940,	4,	2,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #940 = QVLFSUX
  { 941,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #941 = QVLFSUXA
  { 942,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #942 = QVLFSX
  { 943,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #943 = QVLFSXA
  { 944,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #944 = QVLFSXb
  { 945,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #945 = QVLFSXs
  { 946,	3,	1,	4,	29,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #946 = QVLPCLDX
  { 947,	3,	1,	4,	29,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #947 = QVLPCLSX
  { 948,	2,	1,	4,	29,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #948 = QVLPCLSXint
  { 949,	3,	1,	4,	29,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #949 = QVLPCRDX
  { 950,	3,	1,	4,	29,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #950 = QVLPCRSX
  { 951,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #951 = QVSTFCDUX
  { 952,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #952 = QVSTFCDUXA
  { 953,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #953 = QVSTFCDUXI
  { 954,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #954 = QVSTFCDUXIA
  { 955,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #955 = QVSTFCDX
  { 956,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #956 = QVSTFCDXA
  { 957,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #957 = QVSTFCDXI
  { 958,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #958 = QVSTFCDXIA
  { 959,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #959 = QVSTFCSUX
  { 960,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #960 = QVSTFCSUXA
  { 961,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #961 = QVSTFCSUXI
  { 962,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #962 = QVSTFCSUXIA
  { 963,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #963 = QVSTFCSX
  { 964,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #964 = QVSTFCSXA
  { 965,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #965 = QVSTFCSXI
  { 966,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #966 = QVSTFCSXIA
  { 967,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #967 = QVSTFCSXs
  { 968,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #968 = QVSTFDUX
  { 969,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #969 = QVSTFDUXA
  { 970,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #970 = QVSTFDUXI
  { 971,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #971 = QVSTFDUXIA
  { 972,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #972 = QVSTFDX
  { 973,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #973 = QVSTFDXA
  { 974,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #974 = QVSTFDXI
  { 975,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #975 = QVSTFDXIA
  { 976,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #976 = QVSTFDXb
  { 977,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #977 = QVSTFIWX
  { 978,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #978 = QVSTFIWXA
  { 979,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #979 = QVSTFSUX
  { 980,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #980 = QVSTFSUXA
  { 981,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #981 = QVSTFSUXI
  { 982,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #982 = QVSTFSUXIA
  { 983,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #983 = QVSTFSUXs
  { 984,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #984 = QVSTFSX
  { 985,	3,	0,	4,	59,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #985 = QVSTFSXA
  { 986,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #986 = QVSTFSXI
  { 987,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #987 = QVSTFSXIA
  { 988,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #988 = QVSTFSXs
  { 989,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #989 = RESTORE_CR
  { 990,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #990 = RESTORE_CRBIT
  { 991,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #991 = RESTORE_VRSAVE
  { 992,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #992 = RFCI
  { 993,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #993 = RFDI
  { 994,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #994 = RFEBB
  { 995,	0,	0,	4,	61,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #995 = RFI
  { 996,	0,	0,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #996 = RFID
  { 997,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #997 = RFMCI
  { 998,	4,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #998 = RLDCL
  { 999,	4,	1,	4,	63,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo140, -1 ,nullptr },  // Inst #999 = RLDCLo
  { 1000,	4,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1000 = RLDCR
  { 1001,	4,	1,	4,	63,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo140, -1 ,nullptr },  // Inst #1001 = RLDCRo
  { 1002,	4,	1,	4,	64,	0, 0x8ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #1002 = RLDIC
  { 1003,	4,	1,	4,	64,	0, 0x8ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #1003 = RLDICL
  { 1004,	4,	1,	4,	64,	0, 0x8ULL, nullptr, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1004 = RLDICL_32_64
  { 1005,	4,	1,	4,	64,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #1005 = RLDICLo
  { 1006,	4,	1,	4,	64,	0, 0x8ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #1006 = RLDICR
  { 1007,	4,	1,	4,	64,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #1007 = RLDICRo
  { 1008,	4,	1,	4,	64,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #1008 = RLDICo
  { 1009,	5,	1,	4,	64,	0, 0x8ULL, nullptr, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #1009 = RLDIMI
  { 1010,	5,	1,	4,	64,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo142, -1 ,nullptr },  // Inst #1010 = RLDIMIo
  { 1011,	6,	1,	4,	65,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1011 = RLWIMI
  { 1012,	6,	1,	4,	65,	0, 0xcULL, nullptr, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #1012 = RLWIMI8
  { 1013,	6,	1,	4,	65,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo144, -1 ,nullptr },  // Inst #1013 = RLWIMI8o
  { 1014,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1014 = RLWIMIbm
  { 1015,	6,	1,	4,	65,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList1, OperandInfo143, -1 ,nullptr },  // Inst #1015 = RLWIMIo
  { 1016,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1016 = RLWIMIobm
  { 1017,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1017 = RLWINM
  { 1018,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1018 = RLWINM8
  { 1019,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo147, -1 ,nullptr },  // Inst #1019 = RLWINM8o
  { 1020,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1020 = RLWINMbm
  { 1021,	5,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo146, -1 ,nullptr },  // Inst #1021 = RLWINMo
  { 1022,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1022 = RLWINMobm
  { 1023,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1023 = RLWNM
  { 1024,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1024 = RLWNM8
  { 1025,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo149, -1 ,nullptr },  // Inst #1025 = RLWNM8o
  { 1026,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1026 = RLWNMbm
  { 1027,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo148, -1 ,nullptr },  // Inst #1027 = RLWNMo
  { 1028,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1028 = RLWNMobm
  { 1029,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1029 = ROTRDI
  { 1030,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1030 = ROTRDIo
  { 1031,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1031 = ROTRWI
  { 1032,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1032 = ROTRWIo
  { 1033,	2,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1033 = ReadTB
  { 1034,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1034 = SC
  { 1035,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1035 = SELECT_CC_F4
  { 1036,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1036 = SELECT_CC_F8
  { 1037,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1037 = SELECT_CC_I4
  { 1038,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1038 = SELECT_CC_I8
  { 1039,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1039 = SELECT_CC_QBRC
  { 1040,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1040 = SELECT_CC_QFRC
  { 1041,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1041 = SELECT_CC_QSRC
  { 1042,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1042 = SELECT_CC_VRRC
  { 1043,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1043 = SELECT_CC_VSFRC
  { 1044,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #1044 = SELECT_CC_VSRC
  { 1045,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1045 = SELECT_CC_VSSRC
  { 1046,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1046 = SELECT_F4
  { 1047,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1047 = SELECT_F8
  { 1048,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo161, -1 ,nullptr },  // Inst #1048 = SELECT_I4
  { 1049,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1049 = SELECT_I8
  { 1050,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1050 = SELECT_QBRC
  { 1051,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1051 = SELECT_QFRC
  { 1052,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1052 = SELECT_QSRC
  { 1053,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1053 = SELECT_VRRC
  { 1054,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1054 = SELECT_VSFRC
  { 1055,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1055 = SELECT_VSRC
  { 1056,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1056 = SELECT_VSSRC
  { 1057,	0,	0,	4,	66,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1057 = SLBIA
  { 1058,	1,	0,	4,	67,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1058 = SLBIE
  { 1059,	2,	1,	4,	68,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1059 = SLBMFEE
  { 1060,	2,	0,	4,	69,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1060 = SLBMTE
  { 1061,	3,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1061 = SLD
  { 1062,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1062 = SLDI
  { 1063,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1063 = SLDIo
  { 1064,	3,	1,	4,	63,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo168, -1 ,nullptr },  // Inst #1064 = SLDo
  { 1065,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1065 = SLW
  { 1066,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1066 = SLW8
  { 1067,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #1067 = SLW8o
  { 1068,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1068 = SLWI
  { 1069,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1069 = SLWIo
  { 1070,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #1070 = SLWo
  { 1071,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #1071 = SPILL_CR
  { 1072,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #1072 = SPILL_CRBIT
  { 1073,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1073 = SPILL_VRSAVE
  { 1074,	3,	1,	4,	63,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo168, -1 ,nullptr },  // Inst #1074 = SRAD
  { 1075,	3,	1,	4,	64,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #1075 = SRADI
  { 1076,	3,	1,	4,	64,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo15, -1 ,nullptr },  // Inst #1076 = SRADIo
  { 1077,	3,	1,	4,	63,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo168, -1 ,nullptr },  // Inst #1077 = SRADo
  { 1078,	3,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo12, -1 ,nullptr },  // Inst #1078 = SRAW
  { 1079,	3,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #1079 = SRAWI
  { 1080,	3,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #1080 = SRAWIo
  { 1081,	3,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo12, -1 ,nullptr },  // Inst #1081 = SRAWo
  { 1082,	3,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1082 = SRD
  { 1083,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1083 = SRDI
  { 1084,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1084 = SRDIo
  { 1085,	3,	1,	4,	63,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo168, -1 ,nullptr },  // Inst #1085 = SRDo
  { 1086,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1086 = SRW
  { 1087,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1087 = SRW8
  { 1088,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #1088 = SRW8o
  { 1089,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1089 = SRWI
  { 1090,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1090 = SRWIo
  { 1091,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #1091 = SRWo
  { 1092,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1092 = STB
  { 1093,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #1093 = STB8
  { 1094,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1094 = STBCIX
  { 1095,	3,	0,	4,	71,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #1095 = STBCX
  { 1096,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1096 = STBU
  { 1097,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1097 = STBU8
  { 1098,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1098 = STBUX
  { 1099,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1099 = STBUX8
  { 1100,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1100 = STBX
  { 1101,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #1101 = STBX8
  { 1102,	3,	0,	4,	73,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #1102 = STD
  { 1103,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #1103 = STDBRX
  { 1104,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1104 = STDCIX
  { 1105,	3,	0,	4,	74,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo70, -1 ,nullptr },  // Inst #1105 = STDCX
  { 1106,	4,	1,	4,	75,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1106 = STDU
  { 1107,	4,	1,	4,	76,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1107 = STDUX
  { 1108,	3,	0,	4,	73,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #1108 = STDX
  { 1109,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #1109 = STFD
  { 1110,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1110 = STFDU
  { 1111,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1111 = STFDUX
  { 1112,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #1112 = STFDX
  { 1113,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #1113 = STFIWX
  { 1114,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #1114 = STFS
  { 1115,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #1115 = STFSU
  { 1116,	4,	1,	4,	60,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo176, -1 ,nullptr },  // Inst #1116 = STFSUX
  { 1117,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #1117 = STFSX
  { 1118,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1118 = STH
  { 1119,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #1119 = STH8
  { 1120,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1120 = STHBRX
  { 1121,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1121 = STHCIX
  { 1122,	3,	0,	4,	71,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #1122 = STHCX
  { 1123,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1123 = STHU
  { 1124,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1124 = STHU8
  { 1125,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1125 = STHUX
  { 1126,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1126 = STHUX8
  { 1127,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1127 = STHX
  { 1128,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #1128 = STHX8
  { 1129,	3,	0,	4,	35,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1129 = STMW
  { 1130,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1130 = STSWI
  { 1131,	3,	0,	4,	45,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #1131 = STVEBX
  { 1132,	3,	0,	4,	45,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #1132 = STVEHX
  { 1133,	3,	0,	4,	45,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #1133 = STVEWX
  { 1134,	3,	0,	4,	45,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #1134 = STVX
  { 1135,	3,	0,	4,	45,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #1135 = STVXL
  { 1136,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1136 = STW
  { 1137,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #1137 = STW8
  { 1138,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1138 = STWBRX
  { 1139,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1139 = STWCIX
  { 1140,	3,	0,	4,	71,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #1140 = STWCX
  { 1141,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1141 = STWU
  { 1142,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1142 = STWU8
  { 1143,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1143 = STWUX
  { 1144,	4,	1,	4,	72,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1144 = STWUX8
  { 1145,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #1145 = STWX
  { 1146,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #1146 = STWX8
  { 1147,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #1147 = STXSDX
  { 1148,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #1148 = STXSIWX
  { 1149,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #1149 = STXSSPX
  { 1150,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1150 = STXVD2X
  { 1151,	3,	0,	4,	59,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #1151 = STXVW4X
  { 1152,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1152 = SUBF
  { 1153,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1153 = SUBF8
  { 1154,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #1154 = SUBF8o
  { 1155,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo12, -1 ,nullptr },  // Inst #1155 = SUBFC
  { 1156,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #1156 = SUBFC8
  { 1157,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #1157 = SUBFC8o
  { 1158,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo12, -1 ,nullptr },  // Inst #1158 = SUBFCo
  { 1159,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo12, -1 ,nullptr },  // Inst #1159 = SUBFE
  { 1160,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #1160 = SUBFE8
  { 1161,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo14, -1 ,nullptr },  // Inst #1161 = SUBFE8o
  { 1162,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo12, -1 ,nullptr },  // Inst #1162 = SUBFEo
  { 1163,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #1163 = SUBFIC
  { 1164,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #1164 = SUBFIC8
  { 1165,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo20, -1 ,nullptr },  // Inst #1165 = SUBFME
  { 1166,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1166 = SUBFME8
  { 1167,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1167 = SUBFME8o
  { 1168,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo20, -1 ,nullptr },  // Inst #1168 = SUBFMEo
  { 1169,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo20, -1 ,nullptr },  // Inst #1169 = SUBFZE
  { 1170,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1170 = SUBFZE8
  { 1171,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1171 = SUBFZE8o
  { 1172,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo20, -1 ,nullptr },  // Inst #1172 = SUBFZEo
  { 1173,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #1173 = SUBFo
  { 1174,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1174 = SUBI
  { 1175,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1175 = SUBIC
  { 1176,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1176 = SUBICo
  { 1177,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1177 = SUBIS
  { 1178,	1,	0,	4,	47,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1178 = SYNC
  { 1179,	2,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #1179 = TABORT
  { 1180,	4,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1180 = TABORTDC
  { 1181,	4,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1181 = TABORTDCI
  { 1182,	4,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1182 = TABORTWC
  { 1183,	4,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1183 = TABORTWCI
  { 1184,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #1184 = TAILB
  { 1185,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #1185 = TAILB8
  { 1186,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #1186 = TAILBA
  { 1187,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #1187 = TAILBA8
  { 1188,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, nullptr, nullptr, -1 ,nullptr },  // Inst #1188 = TAILBCTR
  { 1189,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, nullptr, nullptr, -1 ,nullptr },  // Inst #1189 = TAILBCTR8
  { 1190,	2,	1,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1190 = TBEGIN
  { 1191,	1,	0,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1191 = TCHECK
  { 1192,	1,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1192 = TCHECK_RET
  { 1193,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1193 = TCRETURNai
  { 1194,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1194 = TCRETURNai8
  { 1195,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1195 = TCRETURNdi
  { 1196,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1196 = TCRETURNdi8
  { 1197,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1197 = TCRETURNri
  { 1198,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1198 = TCRETURNri8
  { 1199,	3,	0,	4,	77,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1199 = TD
  { 1200,	3,	0,	4,	77,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1200 = TDI
  { 1201,	2,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1201 = TEND
  { 1202,	0,	0,	4,	78,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1202 = TLBIA
  { 1203,	2,	0,	4,	79,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1203 = TLBIE
  { 1204,	1,	0,	4,	80,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1204 = TLBIEL
  { 1205,	2,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1205 = TLBIVAX
  { 1206,	1,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1206 = TLBLD
  { 1207,	1,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1207 = TLBLI
  { 1208,	0,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1208 = TLBRE
  { 1209,	3,	1,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo187, -1 ,nullptr },  // Inst #1209 = TLBRE2
  { 1210,	2,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1210 = TLBSX
  { 1211,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1211 = TLBSX2
  { 1212,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1212 = TLBSX2D
  { 1213,	0,	0,	4,	81,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1213 = TLBSYNC
  { 1214,	0,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1214 = TLBWE
  { 1215,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo187, -1 ,nullptr },  // Inst #1215 = TLBWE2
  { 1216,	0,	0,	4,	8,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1216 = TRAP
  { 1217,	1,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1217 = TRECHKPT
  { 1218,	2,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo188, -1 ,nullptr },  // Inst #1218 = TRECLAIM
  { 1219,	2,	1,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1219 = TSR
  { 1220,	3,	0,	4,	82,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1220 = TW
  { 1221,	3,	0,	4,	82,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo189, -1 ,nullptr },  // Inst #1221 = TWI
  { 1222,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #1222 = UPDATE_VRSAVE
  { 1223,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1223 = UpdateGBR
  { 1224,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1224 = VADDCUQ
  { 1225,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1225 = VADDCUW
  { 1226,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1226 = VADDECUQ
  { 1227,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1227 = VADDEUQM
  { 1228,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1228 = VADDFP
  { 1229,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1229 = VADDSBS
  { 1230,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1230 = VADDSHS
  { 1231,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1231 = VADDSWS
  { 1232,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1232 = VADDUBM
  { 1233,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1233 = VADDUBS
  { 1234,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1234 = VADDUDM
  { 1235,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1235 = VADDUHM
  { 1236,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1236 = VADDUHS
  { 1237,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1237 = VADDUQM
  { 1238,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1238 = VADDUWM
  { 1239,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1239 = VADDUWS
  { 1240,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1240 = VAND
  { 1241,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1241 = VANDC
  { 1242,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1242 = VAVGSB
  { 1243,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1243 = VAVGSH
  { 1244,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1244 = VAVGSW
  { 1245,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1245 = VAVGUB
  { 1246,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1246 = VAVGUH
  { 1247,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1247 = VAVGUW
  { 1248,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1248 = VBPERMQ
  { 1249,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1249 = VCFSX
  { 1250,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1250 = VCFSX_0
  { 1251,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1251 = VCFUX
  { 1252,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1252 = VCFUX_0
  { 1253,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1253 = VCIPHER
  { 1254,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1254 = VCIPHERLAST
  { 1255,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1255 = VCLZB
  { 1256,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1256 = VCLZD
  { 1257,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1257 = VCLZH
  { 1258,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1258 = VCLZW
  { 1259,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1259 = VCMPBFP
  { 1260,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1260 = VCMPBFPo
  { 1261,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1261 = VCMPEQFP
  { 1262,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1262 = VCMPEQFPo
  { 1263,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1263 = VCMPEQUB
  { 1264,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1264 = VCMPEQUBo
  { 1265,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1265 = VCMPEQUD
  { 1266,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1266 = VCMPEQUDo
  { 1267,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1267 = VCMPEQUH
  { 1268,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1268 = VCMPEQUHo
  { 1269,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1269 = VCMPEQUW
  { 1270,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1270 = VCMPEQUWo
  { 1271,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1271 = VCMPGEFP
  { 1272,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1272 = VCMPGEFPo
  { 1273,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1273 = VCMPGTFP
  { 1274,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1274 = VCMPGTFPo
  { 1275,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1275 = VCMPGTSB
  { 1276,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1276 = VCMPGTSBo
  { 1277,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1277 = VCMPGTSD
  { 1278,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1278 = VCMPGTSDo
  { 1279,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1279 = VCMPGTSH
  { 1280,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1280 = VCMPGTSHo
  { 1281,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1281 = VCMPGTSW
  { 1282,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1282 = VCMPGTSWo
  { 1283,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1283 = VCMPGTUB
  { 1284,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1284 = VCMPGTUBo
  { 1285,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1285 = VCMPGTUD
  { 1286,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1286 = VCMPGTUDo
  { 1287,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1287 = VCMPGTUH
  { 1288,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1288 = VCMPGTUHo
  { 1289,	3,	1,	4,	83,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1289 = VCMPGTUW
  { 1290,	3,	1,	4,	83,	0, 0x28ULL, nullptr, ImplicitList24, OperandInfo190, -1 ,nullptr },  // Inst #1290 = VCMPGTUWo
  { 1291,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1291 = VCTSXS
  { 1292,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1292 = VCTSXS_0
  { 1293,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1293 = VCTUXS
  { 1294,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1294 = VCTUXS_0
  { 1295,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1295 = VEQV
  { 1296,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1296 = VEXPTEFP
  { 1297,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1297 = VGBBD
  { 1298,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1298 = VLOGEFP
  { 1299,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1299 = VMADDFP
  { 1300,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1300 = VMAXFP
  { 1301,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1301 = VMAXSB
  { 1302,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1302 = VMAXSD
  { 1303,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1303 = VMAXSH
  { 1304,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1304 = VMAXSW
  { 1305,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1305 = VMAXUB
  { 1306,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1306 = VMAXUD
  { 1307,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1307 = VMAXUH
  { 1308,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1308 = VMAXUW
  { 1309,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1309 = VMHADDSHS
  { 1310,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1310 = VMHRADDSHS
  { 1311,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1311 = VMINFP
  { 1312,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1312 = VMINSB
  { 1313,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1313 = VMINSD
  { 1314,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1314 = VMINSH
  { 1315,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1315 = VMINSW
  { 1316,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1316 = VMINUB
  { 1317,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1317 = VMINUD
  { 1318,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1318 = VMINUH
  { 1319,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1319 = VMINUW
  { 1320,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1320 = VMLADDUHM
  { 1321,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1321 = VMRGEW
  { 1322,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1322 = VMRGHB
  { 1323,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1323 = VMRGHH
  { 1324,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1324 = VMRGHW
  { 1325,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1325 = VMRGLB
  { 1326,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1326 = VMRGLH
  { 1327,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1327 = VMRGLW
  { 1328,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1328 = VMRGOW
  { 1329,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1329 = VMSUMMBM
  { 1330,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1330 = VMSUMSHM
  { 1331,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1331 = VMSUMSHS
  { 1332,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1332 = VMSUMUBM
  { 1333,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1333 = VMSUMUHM
  { 1334,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1334 = VMSUMUHS
  { 1335,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1335 = VMULESB
  { 1336,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1336 = VMULESH
  { 1337,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1337 = VMULESW
  { 1338,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1338 = VMULEUB
  { 1339,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1339 = VMULEUH
  { 1340,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1340 = VMULEUW
  { 1341,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1341 = VMULOSB
  { 1342,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1342 = VMULOSH
  { 1343,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1343 = VMULOSW
  { 1344,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1344 = VMULOUB
  { 1345,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1345 = VMULOUH
  { 1346,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1346 = VMULOUW
  { 1347,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1347 = VMULUWM
  { 1348,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1348 = VNAND
  { 1349,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1349 = VNCIPHER
  { 1350,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1350 = VNCIPHERLAST
  { 1351,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1351 = VNMSUBFP
  { 1352,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1352 = VNOR
  { 1353,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1353 = VOR
  { 1354,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1354 = VORC
  { 1355,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1355 = VPERM
  { 1356,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1356 = VPERMXOR
  { 1357,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1357 = VPKPX
  { 1358,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1358 = VPKSDSS
  { 1359,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1359 = VPKSDUS
  { 1360,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1360 = VPKSHSS
  { 1361,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1361 = VPKSHUS
  { 1362,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1362 = VPKSWSS
  { 1363,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1363 = VPKSWUS
  { 1364,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1364 = VPKUDUM
  { 1365,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1365 = VPKUDUS
  { 1366,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1366 = VPKUHUM
  { 1367,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1367 = VPKUHUS
  { 1368,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1368 = VPKUWUM
  { 1369,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1369 = VPKUWUS
  { 1370,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1370 = VPMSUMB
  { 1371,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1371 = VPMSUMD
  { 1372,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1372 = VPMSUMH
  { 1373,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1373 = VPMSUMW
  { 1374,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1374 = VPOPCNTB
  { 1375,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1375 = VPOPCNTD
  { 1376,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1376 = VPOPCNTH
  { 1377,	2,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1377 = VPOPCNTW
  { 1378,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1378 = VREFP
  { 1379,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1379 = VRFIM
  { 1380,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1380 = VRFIN
  { 1381,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1381 = VRFIP
  { 1382,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1382 = VRFIZ
  { 1383,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1383 = VRLB
  { 1384,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1384 = VRLD
  { 1385,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1385 = VRLH
  { 1386,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1386 = VRLW
  { 1387,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1387 = VRSQRTEFP
  { 1388,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1388 = VSBOX
  { 1389,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1389 = VSEL
  { 1390,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1390 = VSHASIGMAD
  { 1391,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1391 = VSHASIGMAW
  { 1392,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1392 = VSL
  { 1393,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1393 = VSLB
  { 1394,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1394 = VSLD
  { 1395,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1395 = VSLDOI
  { 1396,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1396 = VSLH
  { 1397,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1397 = VSLO
  { 1398,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1398 = VSLW
  { 1399,	3,	1,	4,	58,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1399 = VSPLTB
  { 1400,	3,	1,	4,	58,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1400 = VSPLTH
  { 1401,	2,	1,	4,	58,	0, 0x28ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1401 = VSPLTISB
  { 1402,	2,	1,	4,	58,	0, 0x28ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1402 = VSPLTISH
  { 1403,	2,	1,	4,	58,	0, 0x28ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1403 = VSPLTISW
  { 1404,	3,	1,	4,	58,	0, 0x28ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1404 = VSPLTW
  { 1405,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1405 = VSR
  { 1406,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1406 = VSRAB
  { 1407,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1407 = VSRAD
  { 1408,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1408 = VSRAH
  { 1409,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1409 = VSRAW
  { 1410,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1410 = VSRB
  { 1411,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1411 = VSRD
  { 1412,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1412 = VSRH
  { 1413,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1413 = VSRO
  { 1414,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1414 = VSRW
  { 1415,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1415 = VSUBCUQ
  { 1416,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1416 = VSUBCUW
  { 1417,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1417 = VSUBECUQ
  { 1418,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1418 = VSUBEUQM
  { 1419,	3,	1,	4,	46,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1419 = VSUBFP
  { 1420,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1420 = VSUBSBS
  { 1421,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1421 = VSUBSHS
  { 1422,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1422 = VSUBSWS
  { 1423,	3,	1,	4,	46,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1423 = VSUBUBM
  { 1424,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1424 = VSUBUBS
  { 1425,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1425 = VSUBUDM
  { 1426,	3,	1,	4,	46,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1426 = VSUBUHM
  { 1427,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1427 = VSUBUHS
  { 1428,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1428 = VSUBUQM
  { 1429,	3,	1,	4,	46,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1429 = VSUBUWM
  { 1430,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1430 = VSUBUWS
  { 1431,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1431 = VSUM2SWS
  { 1432,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1432 = VSUM4SBS
  { 1433,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1433 = VSUM4SHS
  { 1434,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1434 = VSUM4UBS
  { 1435,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1435 = VSUMSWS
  { 1436,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1436 = VUPKHPX
  { 1437,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1437 = VUPKHSB
  { 1438,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1438 = VUPKHSH
  { 1439,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1439 = VUPKHSW
  { 1440,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1440 = VUPKLPX
  { 1441,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1441 = VUPKLSB
  { 1442,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1442 = VUPKLSH
  { 1443,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1443 = VUPKLSW
  { 1444,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1444 = VXOR
  { 1445,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1445 = V_SET0
  { 1446,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1446 = V_SET0B
  { 1447,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1447 = V_SET0H
  { 1448,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1448 = V_SETALLONES
  { 1449,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1449 = V_SETALLONESB
  { 1450,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1450 = V_SETALLONESH
  { 1451,	1,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1451 = WAIT
  { 1452,	1,	0,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1452 = WRTEE
  { 1453,	1,	0,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1453 = WRTEEI
  { 1454,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #1454 = XOR
  { 1455,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1455 = XOR8
  { 1456,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #1456 = XOR8o
  { 1457,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1457 = XORI
  { 1458,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1458 = XORI8
  { 1459,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1459 = XORIS
  { 1460,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1460 = XORIS8
  { 1461,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo12, -1 ,nullptr },  // Inst #1461 = XORo
  { 1462,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1462 = XSABSDP
  { 1463,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1463 = XSADDDP
  { 1464,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1464 = XSADDSP
  { 1465,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1465 = XSCMPODP
  { 1466,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1466 = XSCMPUDP
  { 1467,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1467 = XSCPSGNDP
  { 1468,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1468 = XSCVDPSP
  { 1469,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1469 = XSCVDPSXDS
  { 1470,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1470 = XSCVDPSXWS
  { 1471,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1471 = XSCVDPUXDS
  { 1472,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1472 = XSCVDPUXWS
  { 1473,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1473 = XSCVSPDP
  { 1474,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1474 = XSCVSXDDP
  { 1475,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1475 = XSCVUXDDP
  { 1476,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1476 = XSDIVDP
  { 1477,	3,	1,	4,	15,	0, 0x0ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1477 = XSDIVSP
  { 1478,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1478 = XSMADDADP
  { 1479,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1479 = XSMADDASP
  { 1480,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1480 = XSMADDMDP
  { 1481,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1481 = XSMADDMSP
  { 1482,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1482 = XSMAXDP
  { 1483,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1483 = XSMINDP
  { 1484,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1484 = XSMSUBADP
  { 1485,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1485 = XSMSUBASP
  { 1486,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1486 = XSMSUBMDP
  { 1487,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1487 = XSMSUBMSP
  { 1488,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1488 = XSMULDP
  { 1489,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1489 = XSMULSP
  { 1490,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1490 = XSNABSDP
  { 1491,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1491 = XSNEGDP
  { 1492,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1492 = XSNMADDADP
  { 1493,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1493 = XSNMADDASP
  { 1494,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1494 = XSNMADDMDP
  { 1495,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1495 = XSNMADDMSP
  { 1496,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1496 = XSNMSUBADP
  { 1497,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1497 = XSNMSUBASP
  { 1498,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1498 = XSNMSUBMDP
  { 1499,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1499 = XSNMSUBMSP
  { 1500,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1500 = XSRDPI
  { 1501,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1501 = XSRDPIC
  { 1502,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1502 = XSRDPIM
  { 1503,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1503 = XSRDPIP
  { 1504,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1504 = XSRDPIZ
  { 1505,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1505 = XSREDP
  { 1506,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1506 = XSRESP
  { 1507,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1507 = XSRSQRTEDP
  { 1508,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1508 = XSRSQRTESP
  { 1509,	2,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1509 = XSSQRTDP
  { 1510,	2,	1,	4,	18,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1510 = XSSQRTSP
  { 1511,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1511 = XSSUBDP
  { 1512,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1512 = XSSUBSP
  { 1513,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1513 = XSTDIVDP
  { 1514,	2,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1514 = XSTSQRTDP
  { 1515,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1515 = XVABSDP
  { 1516,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1516 = XVABSSP
  { 1517,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1517 = XVADDDP
  { 1518,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1518 = XVADDSP
  { 1519,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1519 = XVCMPEQDP
  { 1520,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, ImplicitList24, OperandInfo206, -1 ,nullptr },  // Inst #1520 = XVCMPEQDPo
  { 1521,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1521 = XVCMPEQSP
  { 1522,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, ImplicitList24, OperandInfo206, -1 ,nullptr },  // Inst #1522 = XVCMPEQSPo
  { 1523,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1523 = XVCMPGEDP
  { 1524,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, ImplicitList24, OperandInfo206, -1 ,nullptr },  // Inst #1524 = XVCMPGEDPo
  { 1525,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1525 = XVCMPGESP
  { 1526,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, ImplicitList24, OperandInfo206, -1 ,nullptr },  // Inst #1526 = XVCMPGESPo
  { 1527,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1527 = XVCMPGTDP
  { 1528,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, ImplicitList24, OperandInfo206, -1 ,nullptr },  // Inst #1528 = XVCMPGTDPo
  { 1529,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1529 = XVCMPGTSP
  { 1530,	3,	1,	4,	83,	0, 0x0ULL, ImplicitList13, ImplicitList24, OperandInfo206, -1 ,nullptr },  // Inst #1530 = XVCMPGTSPo
  { 1531,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1531 = XVCPSGNDP
  { 1532,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1532 = XVCPSGNSP
  { 1533,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1533 = XVCVDPSP
  { 1534,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1534 = XVCVDPSXDS
  { 1535,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1535 = XVCVDPSXWS
  { 1536,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1536 = XVCVDPUXDS
  { 1537,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1537 = XVCVDPUXWS
  { 1538,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1538 = XVCVSPDP
  { 1539,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1539 = XVCVSPSXDS
  { 1540,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1540 = XVCVSPSXWS
  { 1541,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1541 = XVCVSPUXDS
  { 1542,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1542 = XVCVSPUXWS
  { 1543,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1543 = XVCVSXDDP
  { 1544,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1544 = XVCVSXDSP
  { 1545,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1545 = XVCVSXWDP
  { 1546,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1546 = XVCVSXWSP
  { 1547,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1547 = XVCVUXDDP
  { 1548,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1548 = XVCVUXDSP
  { 1549,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1549 = XVCVUXWDP
  { 1550,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1550 = XVCVUXWSP
  { 1551,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1551 = XVDIVDP
  { 1552,	3,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1552 = XVDIVSP
  { 1553,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1553 = XVMADDADP
  { 1554,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1554 = XVMADDASP
  { 1555,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1555 = XVMADDMDP
  { 1556,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1556 = XVMADDMSP
  { 1557,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1557 = XVMAXDP
  { 1558,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1558 = XVMAXSP
  { 1559,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1559 = XVMINDP
  { 1560,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1560 = XVMINSP
  { 1561,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1561 = XVMSUBADP
  { 1562,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1562 = XVMSUBASP
  { 1563,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1563 = XVMSUBMDP
  { 1564,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1564 = XVMSUBMSP
  { 1565,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1565 = XVMULDP
  { 1566,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1566 = XVMULSP
  { 1567,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1567 = XVNABSDP
  { 1568,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1568 = XVNABSSP
  { 1569,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1569 = XVNEGDP
  { 1570,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1570 = XVNEGSP
  { 1571,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1571 = XVNMADDADP
  { 1572,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1572 = XVNMADDASP
  { 1573,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1573 = XVNMADDMDP
  { 1574,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1574 = XVNMADDMSP
  { 1575,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1575 = XVNMSUBADP
  { 1576,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1576 = XVNMSUBASP
  { 1577,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1577 = XVNMSUBMDP
  { 1578,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1578 = XVNMSUBMSP
  { 1579,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1579 = XVRDPI
  { 1580,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1580 = XVRDPIC
  { 1581,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1581 = XVRDPIM
  { 1582,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1582 = XVRDPIP
  { 1583,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1583 = XVRDPIZ
  { 1584,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1584 = XVREDP
  { 1585,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1585 = XVRESP
  { 1586,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1586 = XVRSPI
  { 1587,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1587 = XVRSPIC
  { 1588,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1588 = XVRSPIM
  { 1589,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1589 = XVRSPIP
  { 1590,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1590 = XVRSPIZ
  { 1591,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1591 = XVRSQRTEDP
  { 1592,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1592 = XVRSQRTESP
  { 1593,	2,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1593 = XVSQRTDP
  { 1594,	2,	1,	4,	18,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1594 = XVSQRTSP
  { 1595,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1595 = XVSUBDP
  { 1596,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1596 = XVSUBSP
  { 1597,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1597 = XVTDIVDP
  { 1598,	3,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1598 = XVTDIVSP
  { 1599,	2,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1599 = XVTSQRTDP
  { 1600,	2,	1,	4,	13,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1600 = XVTSQRTSP
  { 1601,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1601 = XXLAND
  { 1602,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1602 = XXLANDC
  { 1603,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1603 = XXLEQV
  { 1604,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1604 = XXLNAND
  { 1605,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1605 = XXLNOR
  { 1606,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1606 = XXLOR
  { 1607,	3,	1,	4,	46,	0, 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1607 = XXLORC
  { 1608,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1608 = XXLORf
  { 1609,	3,	1,	4,	46,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1609 = XXLXOR
  { 1610,	3,	1,	4,	58,	0, 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1610 = XXMRGHW
  { 1611,	3,	1,	4,	58,	0, 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1611 = XXMRGLW
  { 1612,	4,	1,	4,	58,	0, 0x0ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1612 = XXPERMDI
  { 1613,	4,	1,	4,	58,	0, 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1613 = XXSEL
  { 1614,	4,	1,	4,	58,	0, 0x0ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1614 = XXSLDWI
  { 1615,	3,	1,	4,	58,	0, 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1615 = XXSPLTW
  { 1616,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo213, -1 ,nullptr },  // Inst #1616 = gBC
  { 1617,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo213, -1 ,nullptr },  // Inst #1617 = gBCA
  { 1618,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, OperandInfo214, -1 ,nullptr },  // Inst #1618 = gBCCTR
  { 1619,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList25, OperandInfo214, -1 ,nullptr },  // Inst #1619 = gBCCTRL
  { 1620,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo213, -1 ,nullptr },  // Inst #1620 = gBCL
  { 1621,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo213, -1 ,nullptr },  // Inst #1621 = gBCLA
  { 1622,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList7, OperandInfo214, -1 ,nullptr },  // Inst #1622 = gBCLR
  { 1623,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList16, ImplicitList25, OperandInfo214, -1 ,nullptr },  // Inst #1623 = gBCLRL
};

extern const char PPCInstrNameData[] = {
  /* 0 */ 'M', 'T', 'F', 'S', 'B', '0', 0,
  /* 7 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 14 */ 'V', 'C', 'T', 'S', 'X', 'S', '_', '0', 0,
  /* 23 */ 'V', 'C', 'T', 'U', 'X', 'S', '_', '0', 0,
  /* 32 */ 'V', 'C', 'F', 'S', 'X', '_', '0', 0,
  /* 40 */ 'V', 'C', 'F', 'U', 'X', '_', '0', 0,
  /* 48 */ 'M', 'T', 'F', 'S', 'B', '1', 0,
  /* 55 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 71 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 91 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 132 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 168 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 188 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 208 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 227 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 240 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 253 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 267 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 281 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 298 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 315 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 330 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 343 */ 'L', 'W', 'A', '_', '3', '2', 0,
  /* 350 */ 'L', 'W', 'A', 'X', '_', '3', '2', 0,
  /* 358 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 376 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 393 */ 'T', 'L', 'B', 'R', 'E', '2', 0,
  /* 400 */ 'T', 'L', 'B', 'W', 'E', '2', 0,
  /* 407 */ 'T', 'L', 'B', 'S', 'X', '2', 0,
  /* 414 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 434 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 454 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 475 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 495 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 511 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 531 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 551 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 570 */ 'D', 'S', 'T', '6', '4', 0,
  /* 576 */ 'D', 'S', 'T', 'S', 'T', '6', '4', 0,
  /* 584 */ 'D', 'S', 'T', 'T', '6', '4', 0,
  /* 591 */ 'D', 'S', 'T', 'S', 'T', 'T', '6', '4', 0,
  /* 600 */ 'E', 'X', 'T', 'S', 'B', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 613 */ 'E', 'X', 'T', 'S', 'H', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 626 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', '6', '4', 0,
  /* 639 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 0,
  /* 651 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 669 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 686 */ 'A', 'D', 'D', '4', 0,
  /* 691 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 704 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 714 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 727 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 737 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 757 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 777 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 798 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 818 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 834 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 854 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 874 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 893 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '6', 0,
  /* 905 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '7', 0,
  /* 917 */ 'T', 'A', 'I', 'L', 'B', 'A', '8', 0,
  /* 925 */ 'L', 'H', 'A', '8', 0,
  /* 930 */ 'B', 'L', 'A', '8', 0,
  /* 935 */ 'T', 'A', 'I', 'L', 'B', '8', 0,
  /* 942 */ 'C', 'M', 'P', 'B', '8', 0,
  /* 948 */ 'E', 'X', 'T', 'S', 'B', '8', 0,
  /* 955 */ 'M', 'F', 'T', 'B', '8', 0,
  /* 961 */ 'S', 'T', 'B', '8', 0,
  /* 966 */ 'A', 'D', 'D', 'C', '8', 0,
  /* 972 */ 'A', 'N', 'D', 'C', '8', 0,
  /* 978 */ 'S', 'U', 'B', 'F', 'C', '8', 0,
  /* 985 */ 'A', 'D', 'D', 'I', 'C', '8', 0,
  /* 992 */ 'S', 'U', 'B', 'F', 'I', 'C', '8', 0,
  /* 1000 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 1010 */ 'O', 'R', 'C', '8', 0,
  /* 1015 */ 'A', 'D', 'D', '8', 0,
  /* 1020 */ 'N', 'A', 'N', 'D', '8', 0,
  /* 1026 */ 'A', 'D', 'D', 'E', '8', 0,
  /* 1032 */ 'S', 'U', 'B', 'F', 'E', '8', 0,
  /* 1039 */ 'A', 'D', 'D', 'M', 'E', '8', 0,
  /* 1046 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 0,
  /* 1054 */ 'A', 'D', 'D', 'Z', 'E', '8', 0,
  /* 1061 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 0,
  /* 1069 */ 'S', 'U', 'B', 'F', '8', 0,
  /* 1075 */ 'M', 'F', 'O', 'C', 'R', 'F', '8', 0,
  /* 1083 */ 'M', 'T', 'O', 'C', 'R', 'F', '8', 0,
  /* 1091 */ 'M', 'T', 'C', 'R', 'F', '8', 0,
  /* 1098 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 1111 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 1121 */ 'N', 'E', 'G', '8', 0,
  /* 1126 */ 'E', 'X', 'T', 'S', 'H', '8', 0,
  /* 1133 */ 'S', 'T', 'H', '8', 0,
  /* 1138 */ 'A', 'D', 'D', 'I', '8', 0,
  /* 1144 */ 'M', 'U', 'L', 'L', 'I', '8', 0,
  /* 1151 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 0,
  /* 1159 */ 'X', 'O', 'R', 'I', '8', 0,
  /* 1165 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 1184 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 1197 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 1216 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1236 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1255 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1270 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1289 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 1308 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 1326 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 1336 */ 'B', 'L', '8', 0,
  /* 1340 */ 'I', 'S', 'E', 'L', '8', 0,
  /* 1346 */ 'B', 'C', 'T', 'R', 'L', '8', 0,
  /* 1353 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1361 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1370 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 0,
  /* 1378 */ 'R', 'L', 'W', 'N', 'M', '8', 0,
  /* 1385 */ 'M', 'F', 'C', 'R', '8', 0,
  /* 1391 */ 'B', 'L', 'R', '8', 0,
  /* 1396 */ 'M', 'F', 'L', 'R', '8', 0,
  /* 1402 */ 'M', 'T', 'L', 'R', '8', 0,
  /* 1408 */ 'B', 'D', 'Z', 'L', 'R', '8', 0,
  /* 1415 */ 'B', 'D', 'N', 'Z', 'L', 'R', '8', 0,
  /* 1423 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 1435 */ 'N', 'O', 'R', '8', 0,
  /* 1440 */ 'X', 'O', 'R', '8', 0,
  /* 1445 */ 'M', 'F', 'S', 'P', 'R', '8', 0,
  /* 1452 */ 'M', 'T', 'S', 'P', 'R', '8', 0,
  /* 1459 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', '8', 0,
  /* 1469 */ 'B', 'C', 'C', 'T', 'R', '8', 0,
  /* 1476 */ 'B', 'C', 'C', 'C', 'T', 'R', '8', 0,
  /* 1484 */ 'M', 'F', 'C', 'T', 'R', '8', 0,
  /* 1491 */ 'M', 'T', 'C', 'T', 'R', '8', 0,
  /* 1498 */ 'A', 'D', 'D', 'I', 'S', '8', 0,
  /* 1505 */ 'L', 'I', 'S', '8', 0,
  /* 1510 */ 'X', 'O', 'R', 'I', 'S', '8', 0,
  /* 1517 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 1533 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 1549 */ 'L', 'H', 'A', 'U', '8', 0,
  /* 1555 */ 'S', 'T', 'B', 'U', '8', 0,
  /* 1561 */ 'S', 'T', 'H', 'U', '8', 0,
  /* 1567 */ 'S', 'T', 'W', 'U', '8', 0,
  /* 1573 */ 'L', 'B', 'Z', 'U', '8', 0,
  /* 1579 */ 'L', 'H', 'Z', 'U', '8', 0,
  /* 1585 */ 'L', 'W', 'Z', 'U', '8', 0,
  /* 1591 */ 'E', 'Q', 'V', '8', 0,
  /* 1596 */ 'S', 'L', 'W', '8', 0,
  /* 1601 */ 'S', 'R', 'W', '8', 0,
  /* 1606 */ 'S', 'T', 'W', '8', 0,
  /* 1611 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 0,
  /* 1619 */ 'L', 'H', 'A', 'X', '8', 0,
  /* 1625 */ 'S', 'T', 'B', 'X', '8', 0,
  /* 1631 */ 'S', 'T', 'H', 'X', '8', 0,
  /* 1637 */ 'L', 'H', 'B', 'R', 'X', '8', 0,
  /* 1644 */ 'L', 'W', 'B', 'R', 'X', '8', 0,
  /* 1651 */ 'L', 'H', 'A', 'U', 'X', '8', 0,
  /* 1658 */ 'S', 'T', 'B', 'U', 'X', '8', 0,
  /* 1665 */ 'S', 'T', 'H', 'U', 'X', '8', 0,
  /* 1672 */ 'S', 'T', 'W', 'U', 'X', '8', 0,
  /* 1679 */ 'L', 'B', 'Z', 'U', 'X', '8', 0,
  /* 1686 */ 'L', 'H', 'Z', 'U', 'X', '8', 0,
  /* 1693 */ 'L', 'W', 'Z', 'U', 'X', '8', 0,
  /* 1700 */ 'S', 'T', 'W', 'X', '8', 0,
  /* 1706 */ 'L', 'B', 'Z', 'X', '8', 0,
  /* 1712 */ 'L', 'H', 'Z', 'X', '8', 0,
  /* 1718 */ 'L', 'W', 'Z', 'X', '8', 0,
  /* 1724 */ 'L', 'B', 'Z', '8', 0,
  /* 1729 */ 'B', 'D', 'Z', '8', 0,
  /* 1734 */ 'L', 'H', 'Z', '8', 0,
  /* 1739 */ 'B', 'D', 'N', 'Z', '8', 0,
  /* 1745 */ 'L', 'W', 'Z', '8', 0,
  /* 1750 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', '8', 0,
  /* 1762 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '8', 0,
  /* 1774 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '8', 0,
  /* 1786 */ 'A', 'N', 'D', 'I', 'o', '8', 0,
  /* 1793 */ 'A', 'N', 'D', 'I', 'S', 'o', '8', 0,
  /* 1801 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 1813 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 1825 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'A', 0,
  /* 1835 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'A', 0,
  /* 1845 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 1857 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 1869 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'A', 0,
  /* 1879 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 1891 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 1903 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'A', 0,
  /* 1913 */ 'D', 'C', 'B', 'A', 0,
  /* 1918 */ 'T', 'A', 'I', 'L', 'B', 'A', 0,
  /* 1925 */ 'L', 'D', 't', 'o', 'c', 'B', 'A', 0,
  /* 1933 */ 'g', 'B', 'C', 'A', 0,
  /* 1938 */ 'B', 'C', 'C', 'A', 0,
  /* 1943 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 0,
  /* 1953 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 'A', 0,
  /* 1963 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 0,
  /* 1973 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 0,
  /* 1982 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 0,
  /* 1992 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 'A', 0,
  /* 2002 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 0,
  /* 2012 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 0,
  /* 2021 */ 'L', 'H', 'A', 0,
  /* 2025 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 2036 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 2049 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 2062 */ 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2078 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2092 */ 'S', 'L', 'B', 'I', 'A', 0,
  /* 2098 */ 'T', 'L', 'B', 'I', 'A', 0,
  /* 2104 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 0,
  /* 2114 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 'A', 0,
  /* 2124 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 0,
  /* 2134 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 0,
  /* 2143 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 0,
  /* 2153 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 'A', 0,
  /* 2163 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 0,
  /* 2173 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 0,
  /* 2183 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 0,
  /* 2192 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 'A', 0,
  /* 2203 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 'A', 0,
  /* 2213 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 'A', 0,
  /* 2224 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 'A', 0,
  /* 2234 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2246 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2257 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2269 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2280 */ 'B', 'L', 'A', 0,
  /* 2284 */ 'g', 'B', 'C', 'L', 'A', 0,
  /* 2290 */ 'B', 'C', 'C', 'L', 'A', 0,
  /* 2296 */ 'B', 'D', 'Z', 'L', 'A', 0,
  /* 2302 */ 'B', 'D', 'N', 'Z', 'L', 'A', 0,
  /* 2309 */ 'E', 'V', 'M', 'R', 'A', 0,
  /* 2315 */ 'L', 'W', 'A', 0,
  /* 2319 */ 'M', 'T', 'V', 'S', 'R', 'W', 'A', 0,
  /* 2327 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 'A', 0,
  /* 2337 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2346 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2356 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'A', 0,
  /* 2364 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'A', 0,
  /* 2373 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2382 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2392 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'A', 0,
  /* 2400 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'A', 0,
  /* 2409 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2419 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2430 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2439 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2449 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2459 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2470 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2479 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2489 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 'A', 0,
  /* 2499 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 'A', 0,
  /* 2509 */ 'B', 'D', 'Z', 'A', 0,
  /* 2514 */ 'B', 'D', 'N', 'Z', 'A', 0,
  /* 2520 */ 'V', '_', 'S', 'E', 'T', '0', 'B', 0,
  /* 2528 */ 'V', 'S', 'R', 'A', 'B', 0,
  /* 2534 */ 'R', 'F', 'E', 'B', 'B', 0,
  /* 2540 */ 'V', 'M', 'R', 'G', 'H', 'B', 0,
  /* 2547 */ 'V', 'M', 'R', 'G', 'L', 'B', 0,
  /* 2554 */ 'T', 'A', 'I', 'L', 'B', 0,
  /* 2560 */ 'V', 'R', 'L', 'B', 0,
  /* 2565 */ 'V', 'S', 'L', 'B', 0,
  /* 2570 */ 'V', 'P', 'M', 'S', 'U', 'M', 'B', 0,
  /* 2578 */ 'C', 'M', 'P', 'B', 0,
  /* 2583 */ 'C', 'L', 'R', 'B', 'H', 'R', 'B', 0,
  /* 2591 */ 'V', 'S', 'R', 'B', 0,
  /* 2596 */ 'V', 'M', 'U', 'L', 'E', 'S', 'B', 0,
  /* 2604 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'B', 0,
  /* 2618 */ 'V', 'A', 'V', 'G', 'S', 'B', 0,
  /* 2625 */ 'V', 'U', 'P', 'K', 'H', 'S', 'B', 0,
  /* 2633 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'B', 0,
  /* 2642 */ 'V', 'U', 'P', 'K', 'L', 'S', 'B', 0,
  /* 2650 */ 'V', 'M', 'I', 'N', 'S', 'B', 0,
  /* 2657 */ 'V', 'M', 'U', 'L', 'O', 'S', 'B', 0,
  /* 2665 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 0,
  /* 2674 */ 'E', 'V', 'E', 'X', 'T', 'S', 'B', 0,
  /* 2682 */ 'V', 'M', 'A', 'X', 'S', 'B', 0,
  /* 2689 */ 'M', 'F', 'T', 'B', 0,
  /* 2694 */ 'V', 'S', 'P', 'L', 'T', 'B', 0,
  /* 2701 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'B', 0,
  /* 2710 */ 'S', 'T', 'B', 0,
  /* 2714 */ 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 2721 */ 'V', 'M', 'U', 'L', 'E', 'U', 'B', 0,
  /* 2729 */ 'V', 'A', 'V', 'G', 'U', 'B', 0,
  /* 2736 */ 'V', 'M', 'I', 'N', 'U', 'B', 0,
  /* 2743 */ 'V', 'M', 'U', 'L', 'O', 'U', 'B', 0,
  /* 2751 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 0,
  /* 2760 */ 'Q', 'V', 'F', 'S', 'U', 'B', 0,
  /* 2767 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 0,
  /* 2775 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 0,
  /* 2784 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 0,
  /* 2793 */ 'V', 'M', 'A', 'X', 'U', 'B', 0,
  /* 2800 */ 'V', 'C', 'L', 'Z', 'B', 0,
  /* 2806 */ 'g', 'B', 'C', 0,
  /* 2810 */ 'B', 'C', 'C', 0,
  /* 2814 */ 'A', 'D', 'D', 'C', 0,
  /* 2819 */ 'X', 'X', 'L', 'A', 'N', 'D', 'C', 0,
  /* 2827 */ 'C', 'R', 'A', 'N', 'D', 'C', 0,
  /* 2834 */ 'E', 'V', 'A', 'N', 'D', 'C', 0,
  /* 2841 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 0,
  /* 2850 */ 'S', 'U', 'B', 'F', 'C', 0,
  /* 2856 */ 'S', 'U', 'B', 'I', 'C', 0,
  /* 2862 */ 'A', 'D', 'D', 'I', 'C', 0,
  /* 2868 */ 'R', 'L', 'D', 'I', 'C', 0,
  /* 2874 */ 'S', 'U', 'B', 'F', 'I', 'C', 0,
  /* 2881 */ 'X', 'S', 'R', 'D', 'P', 'I', 'C', 0,
  /* 2889 */ 'X', 'V', 'R', 'D', 'P', 'I', 'C', 0,
  /* 2897 */ 'X', 'V', 'R', 'S', 'P', 'I', 'C', 0,
  /* 2905 */ 'B', 'R', 'I', 'N', 'C', 0,
  /* 2911 */ 'T', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 2919 */ 'I', 'S', 'Y', 'N', 'C', 0,
  /* 2925 */ 'M', 'S', 'Y', 'N', 'C', 0,
  /* 2931 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 2940 */ 'F', 'R', 'A', 'M', 'E', '_', 'A', 'L', 'L', 'O', 'C', 0,
  /* 2952 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'B', 'R', 'C', 0,
  /* 2967 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'B', 'R', 'C', 0,
  /* 2979 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'R', 'C', 0,
  /* 2994 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3006 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3022 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3035 */ 'X', 'X', 'L', 'O', 'R', 'C', 0,
  /* 3042 */ 'C', 'R', 'O', 'R', 'C', 0,
  /* 3048 */ 'E', 'V', 'O', 'R', 'C', 0,
  /* 3054 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 3069 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 3081 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3096 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3108 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3124 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3137 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 3152 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 3164 */ 'S', 'C', 0,
  /* 3167 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 0,
  /* 3176 */ 'T', 'L', 'B', 'S', 'X', '2', 'D', 0,
  /* 3184 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'D', 0,
  /* 3195 */ 'V', 'S', 'R', 'A', 'D', 0,
  /* 3201 */ 'V', 'G', 'B', 'B', 'D', 0,
  /* 3207 */ 'Q', 'V', 'F', 'A', 'D', 'D', 0,
  /* 3214 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 0,
  /* 3222 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3231 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3244 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 0,
  /* 3256 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3265 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3275 */ 'E', 'V', 'L', 'D', 'D', 0,
  /* 3281 */ 'E', 'V', 'S', 'T', 'D', 'D', 0,
  /* 3288 */ 'L', 'F', 'D', 0,
  /* 3292 */ 'S', 'T', 'F', 'D', 0,
  /* 3297 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 3303 */ 'M', 'U', 'L', 'H', 'D', 0,
  /* 3309 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 0,
  /* 3317 */ 'R', 'F', 'I', 'D', 0,
  /* 3322 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 0,
  /* 3330 */ 'T', 'L', 'B', 'L', 'D', 0,
  /* 3336 */ 'F', 'S', 'E', 'L', 'D', 0,
  /* 3342 */ 'M', 'U', 'L', 'L', 'D', 0,
  /* 3348 */ 'C', 'M', 'P', 'L', 'D', 0,
  /* 3354 */ 'V', 'R', 'L', 'D', 0,
  /* 3359 */ 'V', 'S', 'L', 'D', 0,
  /* 3364 */ 'F', 'R', 'I', 'M', 'D', 0,
  /* 3370 */ 'B', 'P', 'E', 'R', 'M', 'D', 0,
  /* 3377 */ 'V', 'P', 'M', 'S', 'U', 'M', 'D', 0,
  /* 3385 */ 'X', 'X', 'L', 'A', 'N', 'D', 0,
  /* 3392 */ 'X', 'X', 'L', 'N', 'A', 'N', 'D', 0,
  /* 3400 */ 'C', 'R', 'N', 'A', 'N', 'D', 0,
  /* 3407 */ 'E', 'V', 'N', 'A', 'N', 'D', 0,
  /* 3414 */ 'C', 'R', 'A', 'N', 'D', 0,
  /* 3420 */ 'E', 'V', 'A', 'N', 'D', 0,
  /* 3426 */ 'T', 'E', 'N', 'D', 0,
  /* 3431 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 3444 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 0,
  /* 3452 */ 'F', 'R', 'I', 'N', 'D', 0,
  /* 3458 */ 'F', 'R', 'I', 'P', 'D', 0,
  /* 3464 */ 'C', 'M', 'P', 'D', 0,
  /* 3469 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 3486 */ 'M', 'T', 'M', 'S', 'R', 'D', 0,
  /* 3493 */ 'M', 'F', 'V', 'S', 'R', 'D', 0,
  /* 3500 */ 'M', 'T', 'V', 'S', 'R', 'D', 0,
  /* 3507 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 3513 */ 'F', 'N', 'A', 'B', 'S', 'D', 0,
  /* 3520 */ 'V', 'M', 'I', 'N', 'S', 'D', 0,
  /* 3527 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 0,
  /* 3536 */ 'V', 'M', 'A', 'X', 'S', 'D', 0,
  /* 3543 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'D', 0,
  /* 3552 */ 'S', 'T', 'D', 0,
  /* 3556 */ 'V', 'M', 'I', 'N', 'U', 'D', 0,
  /* 3563 */ 'F', 'C', 'M', 'P', 'U', 'D', 0,
  /* 3570 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 0,
  /* 3579 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 0,
  /* 3588 */ 'V', 'M', 'A', 'X', 'U', 'D', 0,
  /* 3595 */ 'D', 'I', 'V', 'D', 0,
  /* 3600 */ 'F', 'R', 'I', 'Z', 'D', 0,
  /* 3606 */ 'V', 'C', 'L', 'Z', 'D', 0,
  /* 3612 */ 'C', 'N', 'T', 'L', 'Z', 'D', 0,
  /* 3619 */ 'M', 'F', 'B', 'H', 'R', 'B', 'E', 0,
  /* 3627 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 3640 */ 'A', 'D', 'D', 'E', 0,
  /* 3645 */ 'D', 'I', 'V', 'D', 'E', 0,
  /* 3651 */ 'S', 'L', 'B', 'M', 'F', 'E', 'E', 0,
  /* 3659 */ 'W', 'R', 'T', 'E', 'E', 0,
  /* 3665 */ 'S', 'U', 'B', 'F', 'E', 0,
  /* 3671 */ 'E', 'V', 'L', 'W', 'H', 'E', 0,
  /* 3678 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 0,
  /* 3686 */ 'S', 'L', 'B', 'I', 'E', 0,
  /* 3692 */ 'T', 'L', 'B', 'I', 'E', 0,
  /* 3698 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 3705 */ 'A', 'D', 'D', 'M', 'E', 0,
  /* 3711 */ 'S', 'U', 'B', 'F', 'M', 'E', 0,
  /* 3718 */ 'T', 'L', 'B', 'R', 'E', 0,
  /* 3724 */ 'Q', 'V', 'F', 'R', 'E', 0,
  /* 3730 */ 'S', 'L', 'B', 'M', 'T', 'E', 0,
  /* 3737 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 0,
  /* 3747 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 3757 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 3766 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 3775 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 3790 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 3804 */ 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 3817 */ 'T', 'L', 'B', 'W', 'E', 0,
  /* 3823 */ 'D', 'I', 'V', 'W', 'E', 0,
  /* 3829 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 0,
  /* 3837 */ 'A', 'D', 'D', 'Z', 'E', 0,
  /* 3843 */ 'S', 'U', 'B', 'F', 'Z', 'E', 0,
  /* 3850 */ 'D', 'C', 'B', 'F', 0,
  /* 3855 */ 'S', 'U', 'B', 'F', 0,
  /* 3860 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 3873 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 0,
  /* 3882 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 0,
  /* 3891 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 0,
  /* 3900 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 0,
  /* 3908 */ 'M', 'C', 'R', 'F', 0,
  /* 3913 */ 'M', 'F', 'O', 'C', 'R', 'F', 0,
  /* 3920 */ 'M', 'T', 'O', 'C', 'R', 'F', 0,
  /* 3927 */ 'M', 'T', 'C', 'R', 'F', 0,
  /* 3933 */ 'M', 'T', 'F', 'S', 'F', 0,
  /* 3939 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 0,
  /* 3948 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 0,
  /* 3957 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 0,
  /* 3966 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 0,
  /* 3974 */ 'Q', 'V', 'F', 'N', 'E', 'G', 0,
  /* 3981 */ 'E', 'V', 'N', 'E', 'G', 0,
  /* 3987 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4002 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4016 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4030 */ 'V', '_', 'S', 'E', 'T', '0', 'H', 0,
  /* 4038 */ 'V', 'S', 'R', 'A', 'H', 0,
  /* 4044 */ 'E', 'V', 'L', 'D', 'H', 0,
  /* 4050 */ 'E', 'V', 'S', 'T', 'D', 'H', 0,
  /* 4057 */ 'V', 'M', 'R', 'G', 'H', 'H', 0,
  /* 4064 */ 'V', 'M', 'R', 'G', 'L', 'H', 0,
  /* 4071 */ 'V', 'R', 'L', 'H', 0,
  /* 4076 */ 'V', 'S', 'L', 'H', 0,
  /* 4081 */ 'V', 'P', 'M', 'S', 'U', 'M', 'H', 0,
  /* 4089 */ 'V', 'S', 'R', 'H', 0,
  /* 4094 */ 'V', 'M', 'U', 'L', 'E', 'S', 'H', 0,
  /* 4102 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'H', 0,
  /* 4116 */ 'V', 'A', 'V', 'G', 'S', 'H', 0,
  /* 4123 */ 'V', 'U', 'P', 'K', 'H', 'S', 'H', 0,
  /* 4131 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'H', 0,
  /* 4140 */ 'V', 'U', 'P', 'K', 'L', 'S', 'H', 0,
  /* 4148 */ 'V', 'M', 'I', 'N', 'S', 'H', 0,
  /* 4155 */ 'V', 'M', 'U', 'L', 'O', 'S', 'H', 0,
  /* 4163 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 0,
  /* 4172 */ 'E', 'V', 'E', 'X', 'T', 'S', 'H', 0,
  /* 4180 */ 'V', 'M', 'A', 'X', 'S', 'H', 0,
  /* 4187 */ 'V', 'S', 'P', 'L', 'T', 'H', 0,
  /* 4194 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'H', 0,
  /* 4203 */ 'S', 'T', 'H', 0,
  /* 4207 */ 'V', 'M', 'U', 'L', 'E', 'U', 'H', 0,
  /* 4215 */ 'V', 'A', 'V', 'G', 'U', 'H', 0,
  /* 4222 */ 'V', 'M', 'I', 'N', 'U', 'H', 0,
  /* 4229 */ 'V', 'M', 'U', 'L', 'O', 'U', 'H', 0,
  /* 4237 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 0,
  /* 4246 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 0,
  /* 4255 */ 'V', 'M', 'A', 'X', 'U', 'H', 0,
  /* 4262 */ 'V', 'C', 'L', 'Z', 'H', 0,
  /* 4268 */ 'D', 'C', 'B', 'I', 0,
  /* 4273 */ 'I', 'C', 'B', 'I', 0,
  /* 4278 */ 'S', 'U', 'B', 'I', 0,
  /* 4283 */ 'D', 'C', 'C', 'C', 'I', 0,
  /* 4289 */ 'I', 'C', 'C', 'C', 'I', 0,
  /* 4295 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 'I', 0,
  /* 4305 */ 'R', 'F', 'C', 'I', 0,
  /* 4310 */ 'R', 'F', 'M', 'C', 'I', 0,
  /* 4316 */ 'Q', 'V', 'G', 'P', 'C', 'I', 0,
  /* 4323 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 'I', 0,
  /* 4333 */ 'S', 'R', 'A', 'D', 'I', 0,
  /* 4339 */ 'A', 'D', 'D', 'I', 0,
  /* 4344 */ 'R', 'F', 'D', 'I', 0,
  /* 4349 */ 'C', 'M', 'P', 'L', 'D', 'I', 0,
  /* 4356 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 0,
  /* 4365 */ 'E', 'X', 'T', 'L', 'D', 'I', 0,
  /* 4372 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 0,
  /* 4381 */ 'C', 'M', 'P', 'D', 'I', 0,
  /* 4387 */ 'C', 'L', 'R', 'R', 'D', 'I', 0,
  /* 4394 */ 'I', 'N', 'S', 'R', 'D', 'I', 0,
  /* 4401 */ 'R', 'O', 'T', 'R', 'D', 'I', 0,
  /* 4408 */ 'E', 'X', 'T', 'R', 'D', 'I', 0,
  /* 4415 */ 'T', 'D', 'I', 0,
  /* 4419 */ 'W', 'R', 'T', 'E', 'E', 'I', 0,
  /* 4426 */ 'R', 'F', 'I', 0,
  /* 4430 */ 'M', 'T', 'F', 'S', 'F', 'I', 0,
  /* 4437 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'F', 'I', 0,
  /* 4447 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 0,
  /* 4457 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 'H', 'I', 0,
  /* 4469 */ 'P', 'H', 'I', 0,
  /* 4473 */ 'T', 'L', 'B', 'L', 'I', 0,
  /* 4479 */ 'M', 'U', 'L', 'L', 'I', 0,
  /* 4485 */ 'R', 'L', 'D', 'I', 'M', 'I', 0,
  /* 4492 */ 'R', 'L', 'W', 'I', 'M', 'I', 0,
  /* 4499 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 0,
  /* 4508 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 0,
  /* 4517 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 0,
  /* 4526 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 0,
  /* 4534 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 0,
  /* 4543 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 0,
  /* 4552 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 0,
  /* 4561 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 0,
  /* 4570 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 0,
  /* 4578 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 0,
  /* 4587 */ 'V', 'S', 'L', 'D', 'O', 'I', 0,
  /* 4594 */ 'X', 'S', 'R', 'D', 'P', 'I', 0,
  /* 4601 */ 'X', 'V', 'R', 'D', 'P', 'I', 0,
  /* 4608 */ 'X', 'V', 'R', 'S', 'P', 'I', 0,
  /* 4615 */ 'X', 'O', 'R', 'I', 0,
  /* 4620 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 4630 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 4639 */ 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 4648 */ 'S', 'R', 'A', 'W', 'I', 0,
  /* 4654 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 0,
  /* 4662 */ 'C', 'M', 'P', 'L', 'W', 'I', 0,
  /* 4669 */ 'E', 'V', 'R', 'L', 'W', 'I', 0,
  /* 4676 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 0,
  /* 4685 */ 'I', 'N', 'S', 'L', 'W', 'I', 0,
  /* 4692 */ 'E', 'V', 'S', 'L', 'W', 'I', 0,
  /* 4699 */ 'E', 'X', 'T', 'L', 'W', 'I', 0,
  /* 4706 */ 'C', 'M', 'P', 'W', 'I', 0,
  /* 4712 */ 'C', 'L', 'R', 'R', 'W', 'I', 0,
  /* 4719 */ 'I', 'N', 'S', 'R', 'W', 'I', 0,
  /* 4726 */ 'R', 'O', 'T', 'R', 'W', 'I', 0,
  /* 4733 */ 'E', 'X', 'T', 'R', 'W', 'I', 0,
  /* 4740 */ 'L', 'S', 'W', 'I', 0,
  /* 4745 */ 'S', 'T', 'S', 'W', 'I', 0,
  /* 4751 */ 'T', 'W', 'I', 0,
  /* 4755 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 0,
  /* 4765 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 0,
  /* 4774 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 0,
  /* 4784 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 0,
  /* 4793 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 0,
  /* 4804 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 0,
  /* 4814 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 0,
  /* 4825 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 0,
  /* 4835 */ 'T', 'C', 'H', 'E', 'C', 'K', 0,
  /* 4842 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 0,
  /* 4853 */ 'B', 'L', 0,
  /* 4856 */ 'g', 'B', 'C', 'L', 0,
  /* 4861 */ 'B', 'C', 'C', 'L', 0,
  /* 4866 */ 'R', 'L', 'D', 'C', 'L', 0,
  /* 4872 */ 'R', 'L', 'D', 'I', 'C', 'L', 0,
  /* 4879 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4888 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4897 */ 'T', 'L', 'B', 'I', 'E', 'L', 0,
  /* 4904 */ 'Q', 'V', 'F', 'S', 'E', 'L', 0,
  /* 4911 */ 'I', 'S', 'E', 'L', 0,
  /* 4916 */ 'V', 'S', 'E', 'L', 0,
  /* 4921 */ 'X', 'X', 'S', 'E', 'L', 0,
  /* 4927 */ 'D', 'S', 'S', 'A', 'L', 'L', 0,
  /* 4934 */ 'K', 'I', 'L', 'L', 0,
  /* 4939 */ 'B', 'L', 'R', 'L', 0,
  /* 4944 */ 'g', 'B', 'C', 'L', 'R', 'L', 0,
  /* 4951 */ 'B', 'C', 'C', 'L', 'R', 'L', 0,
  /* 4958 */ 'B', 'D', 'Z', 'L', 'R', 'L', 0,
  /* 4965 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 0,
  /* 4973 */ 'B', 'C', 'T', 'R', 'L', 0,
  /* 4979 */ 'g', 'B', 'C', 'C', 'T', 'R', 'L', 0,
  /* 4987 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', 0,
  /* 4995 */ 'L', 'V', 'S', 'L', 0,
  /* 5000 */ 'Q', 'V', 'F', 'M', 'U', 'L', 0,
  /* 5007 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 0,
  /* 5015 */ 'L', 'B', 'A', 'R', 'X', 'L', 0,
  /* 5022 */ 'L', 'D', 'A', 'R', 'X', 'L', 0,
  /* 5029 */ 'L', 'H', 'A', 'R', 'X', 'L', 0,
  /* 5036 */ 'L', 'W', 'A', 'R', 'X', 'L', 0,
  /* 5043 */ 'L', 'V', 'X', 'L', 0,
  /* 5048 */ 'S', 'T', 'V', 'X', 'L', 0,
  /* 5054 */ 'D', 'C', 'B', 'Z', 'L', 0,
  /* 5060 */ 'B', 'D', 'Z', 'L', 0,
  /* 5065 */ 'B', 'D', 'N', 'Z', 'L', 0,
  /* 5071 */ 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 5078 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 5087 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 5098 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 5109 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 5121 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 5133 */ 'V', 'M', 'S', 'U', 'M', 'M', 'B', 'M', 0,
  /* 5142 */ 'V', 'S', 'U', 'B', 'U', 'B', 'M', 0,
  /* 5150 */ 'V', 'A', 'D', 'D', 'U', 'B', 'M', 0,
  /* 5158 */ 'V', 'M', 'S', 'U', 'M', 'U', 'B', 'M', 0,
  /* 5167 */ 'V', 'S', 'U', 'B', 'U', 'D', 'M', 0,
  /* 5175 */ 'V', 'A', 'D', 'D', 'U', 'D', 'M', 0,
  /* 5183 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'M', 0,
  /* 5192 */ 'V', 'S', 'U', 'B', 'U', 'H', 'M', 0,
  /* 5200 */ 'V', 'M', 'L', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 5210 */ 'V', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 5218 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'M', 0,
  /* 5227 */ 'T', 'R', 'E', 'C', 'L', 'A', 'I', 'M', 0,
  /* 5236 */ 'V', 'R', 'F', 'I', 'M', 0,
  /* 5242 */ 'X', 'S', 'R', 'D', 'P', 'I', 'M', 0,
  /* 5250 */ 'X', 'V', 'R', 'D', 'P', 'I', 'M', 0,
  /* 5258 */ 'X', 'V', 'R', 'S', 'P', 'I', 'M', 0,
  /* 5266 */ 'Q', 'V', 'F', 'R', 'I', 'M', 0,
  /* 5273 */ 'R', 'L', 'W', 'I', 'N', 'M', 0,
  /* 5280 */ 'R', 'L', 'W', 'N', 'M', 0,
  /* 5286 */ 'V', 'S', 'U', 'B', 'U', 'Q', 'M', 0,
  /* 5294 */ 'V', 'A', 'D', 'D', 'U', 'Q', 'M', 0,
  /* 5302 */ 'V', 'S', 'U', 'B', 'E', 'U', 'Q', 'M', 0,
  /* 5311 */ 'V', 'A', 'D', 'D', 'E', 'U', 'Q', 'M', 0,
  /* 5320 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 0,
  /* 5328 */ 'V', 'P', 'E', 'R', 'M', 0,
  /* 5334 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 5344 */ 'V', 'P', 'K', 'U', 'D', 'U', 'M', 0,
  /* 5352 */ 'V', 'P', 'K', 'U', 'H', 'U', 'M', 0,
  /* 5360 */ 'V', 'P', 'K', 'U', 'W', 'U', 'M', 0,
  /* 5368 */ 'V', 'S', 'U', 'B', 'U', 'W', 'M', 0,
  /* 5376 */ 'V', 'A', 'D', 'D', 'U', 'W', 'M', 0,
  /* 5384 */ 'V', 'M', 'U', 'L', 'U', 'W', 'M', 0,
  /* 5392 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 5404 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 5416 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'N', 0,
  /* 5426 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'N', 0,
  /* 5436 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 5448 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 5460 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'N', 0,
  /* 5470 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 5482 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 5494 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'N', 0,
  /* 5504 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 0,
  /* 5514 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 0,
  /* 5523 */ 'V', 'R', 'F', 'I', 'N', 0,
  /* 5529 */ 'T', 'B', 'E', 'G', 'I', 'N', 0,
  /* 5536 */ 'Q', 'V', 'F', 'R', 'I', 'N', 0,
  /* 5543 */ 'M', 'F', 'S', 'R', 'I', 'N', 0,
  /* 5550 */ 'M', 'T', 'S', 'R', 'I', 'N', 0,
  /* 5557 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 5573 */ 'A', 'T', 'T', 'N', 0,
  /* 5578 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 5595 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 0,
  /* 5603 */ 'E', 'n', 'f', 'o', 'r', 'c', 'e', 'I', 'E', 'I', 'O', 0,
  /* 5615 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 0,
  /* 5625 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 'L', 'O', 0,
  /* 5637 */ 'V', 'S', 'L', 'O', 0,
  /* 5642 */ 'V', 'S', 'R', 'O', 0,
  /* 5647 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 0,
  /* 5655 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 5664 */ 'T', 'R', 'A', 'P', 0,
  /* 5669 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 5680 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 5691 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 5701 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 5711 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 5722 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 5733 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 5743 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 5753 */ 'X', 'S', 'S', 'U', 'B', 'D', 'P', 0,
  /* 5761 */ 'X', 'V', 'S', 'U', 'B', 'D', 'P', 0,
  /* 5769 */ 'X', 'S', 'A', 'D', 'D', 'D', 'P', 0,
  /* 5777 */ 'X', 'V', 'A', 'D', 'D', 'D', 'P', 0,
  /* 5785 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 5795 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 5805 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 5815 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 5825 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 5835 */ 'X', 'S', 'R', 'E', 'D', 'P', 0,
  /* 5842 */ 'X', 'V', 'R', 'E', 'D', 'P', 0,
  /* 5849 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 5860 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 5871 */ 'X', 'S', 'N', 'E', 'G', 'D', 'P', 0,
  /* 5879 */ 'X', 'V', 'N', 'E', 'G', 'D', 'P', 0,
  /* 5887 */ 'X', 'S', 'M', 'U', 'L', 'D', 'P', 0,
  /* 5895 */ 'X', 'V', 'M', 'U', 'L', 'D', 'P', 0,
  /* 5903 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 5914 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 5925 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 5935 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 5945 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 5956 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 5967 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 5977 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 5987 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 5997 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 6007 */ 'X', 'S', 'M', 'I', 'N', 'D', 'P', 0,
  /* 6015 */ 'X', 'V', 'M', 'I', 'N', 'D', 'P', 0,
  /* 6023 */ 'X', 'S', 'C', 'M', 'P', 'O', 'D', 'P', 0,
  /* 6032 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 6041 */ 'X', 'V', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 6050 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 6060 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 6069 */ 'X', 'V', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 6078 */ 'X', 'S', 'A', 'B', 'S', 'D', 'P', 0,
  /* 6086 */ 'X', 'V', 'A', 'B', 'S', 'D', 'P', 0,
  /* 6094 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 6104 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 6113 */ 'X', 'S', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 6123 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 6133 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 6142 */ 'X', 'S', 'C', 'M', 'P', 'U', 'D', 'P', 0,
  /* 6151 */ 'X', 'S', 'D', 'I', 'V', 'D', 'P', 0,
  /* 6159 */ 'X', 'S', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 6168 */ 'X', 'V', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 6177 */ 'X', 'V', 'D', 'I', 'V', 'D', 'P', 0,
  /* 6185 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'D', 'P', 0,
  /* 6195 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'D', 'P', 0,
  /* 6205 */ 'X', 'S', 'M', 'A', 'X', 'D', 'P', 0,
  /* 6213 */ 'X', 'V', 'M', 'A', 'X', 'D', 'P', 0,
  /* 6221 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 0,
  /* 6229 */ 'V', 'N', 'M', 'S', 'U', 'B', 'F', 'P', 0,
  /* 6238 */ 'V', 'S', 'U', 'B', 'F', 'P', 0,
  /* 6245 */ 'V', 'M', 'A', 'D', 'D', 'F', 'P', 0,
  /* 6253 */ 'V', 'A', 'D', 'D', 'F', 'P', 0,
  /* 6260 */ 'V', 'L', 'O', 'G', 'E', 'F', 'P', 0,
  /* 6268 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 0,
  /* 6277 */ 'V', 'R', 'E', 'F', 'P', 0,
  /* 6283 */ 'V', 'E', 'X', 'P', 'T', 'E', 'F', 'P', 0,
  /* 6292 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'F', 'P', 0,
  /* 6302 */ 'V', 'M', 'I', 'N', 'F', 'P', 0,
  /* 6309 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 0,
  /* 6318 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 0,
  /* 6327 */ 'V', 'M', 'A', 'X', 'F', 'P', 0,
  /* 6334 */ 'V', 'R', 'F', 'I', 'P', 0,
  /* 6340 */ 'X', 'S', 'R', 'D', 'P', 'I', 'P', 0,
  /* 6348 */ 'X', 'V', 'R', 'D', 'P', 'I', 'P', 0,
  /* 6356 */ 'X', 'V', 'R', 'S', 'P', 'I', 'P', 0,
  /* 6364 */ 'Q', 'V', 'F', 'R', 'I', 'P', 0,
  /* 6371 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', 0,
  /* 6380 */ 'B', 'L', '8', '_', 'N', 'O', 'P', 0,
  /* 6388 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'L', 'O', 'A', 'D', '_', 'O', 'P', 0,
  /* 6405 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 6416 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 6427 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 6437 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 6447 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 6458 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 6469 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 6479 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 6489 */ 'X', 'S', 'S', 'U', 'B', 'S', 'P', 0,
  /* 6497 */ 'X', 'V', 'S', 'U', 'B', 'S', 'P', 0,
  /* 6505 */ 'X', 'S', 'A', 'D', 'D', 'S', 'P', 0,
  /* 6513 */ 'X', 'V', 'A', 'D', 'D', 'S', 'P', 0,
  /* 6521 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 6531 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 6541 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 0,
  /* 6551 */ 'X', 'S', 'R', 'E', 'S', 'P', 0,
  /* 6558 */ 'X', 'V', 'R', 'E', 'S', 'P', 0,
  /* 6565 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 6576 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 6587 */ 'X', 'V', 'N', 'E', 'G', 'S', 'P', 0,
  /* 6595 */ 'X', 'S', 'M', 'U', 'L', 'S', 'P', 0,
  /* 6603 */ 'X', 'V', 'M', 'U', 'L', 'S', 'P', 0,
  /* 6611 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 6622 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 6633 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 6643 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 6653 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 6664 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 6675 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 6685 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 6695 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'S', 'P', 0,
  /* 6705 */ 'X', 'V', 'M', 'I', 'N', 'S', 'P', 0,
  /* 6713 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 6722 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 6731 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 0,
  /* 6741 */ 'Q', 'V', 'F', 'R', 'S', 'P', 0,
  /* 6748 */ 'X', 'V', 'N', 'A', 'B', 'S', 'S', 'P', 0,
  /* 6757 */ 'X', 'V', 'A', 'B', 'S', 'S', 'P', 0,
  /* 6765 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 0,
  /* 6775 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 6784 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 6794 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 6803 */ 'X', 'S', 'D', 'I', 'V', 'S', 'P', 0,
  /* 6811 */ 'X', 'V', 'T', 'D', 'I', 'V', 'S', 'P', 0,
  /* 6820 */ 'X', 'V', 'D', 'I', 'V', 'S', 'P', 0,
  /* 6828 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'S', 'P', 0,
  /* 6838 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'S', 'P', 0,
  /* 6848 */ 'X', 'V', 'M', 'A', 'X', 'S', 'P', 0,
  /* 6856 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 6871 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 6880 */ 'E', 'V', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 6888 */ 'V', 'B', 'P', 'E', 'R', 'M', 'Q', 0,
  /* 6896 */ 'V', 'S', 'U', 'B', 'C', 'U', 'Q', 0,
  /* 6904 */ 'V', 'A', 'D', 'D', 'C', 'U', 'Q', 0,
  /* 6912 */ 'V', 'S', 'U', 'B', 'E', 'C', 'U', 'Q', 0,
  /* 6921 */ 'V', 'A', 'D', 'D', 'E', 'C', 'U', 'Q', 0,
  /* 6930 */ 'M', 'B', 'A', 'R', 0,
  /* 6935 */ 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 6945 */ 'M', 'F', 'D', 'C', 'R', 0,
  /* 6951 */ 'R', 'L', 'D', 'C', 'R', 0,
  /* 6957 */ 'M', 'T', 'D', 'C', 'R', 0,
  /* 6963 */ 'M', 'F', 'C', 'R', 0,
  /* 6968 */ 'R', 'L', 'D', 'I', 'C', 'R', 0,
  /* 6975 */ 'M', 'F', 'V', 'S', 'C', 'R', 0,
  /* 6982 */ 'M', 'T', 'V', 'S', 'C', 'R', 0,
  /* 6989 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 7000 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 7009 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 7024 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 7039 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 7052 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 7063 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 7072 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 7080 */ 'B', 'L', 'R', 0,
  /* 7084 */ 'g', 'B', 'C', 'L', 'R', 0,
  /* 7090 */ 'B', 'C', 'C', 'L', 'R', 0,
  /* 7096 */ 'M', 'F', 'L', 'R', 0,
  /* 7101 */ 'M', 'T', 'L', 'R', 0,
  /* 7106 */ 'B', 'D', 'Z', 'L', 'R', 0,
  /* 7112 */ 'B', 'D', 'N', 'Z', 'L', 'R', 0,
  /* 7119 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 7130 */ 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 7142 */ 'Q', 'V', 'F', 'M', 'R', 0,
  /* 7148 */ 'X', 'X', 'L', 'O', 'R', 0,
  /* 7154 */ 'X', 'X', 'L', 'N', 'O', 'R', 0,
  /* 7161 */ 'C', 'R', 'N', 'O', 'R', 0,
  /* 7167 */ 'E', 'V', 'N', 'O', 'R', 0,
  /* 7173 */ 'C', 'R', 'O', 'R', 0,
  /* 7178 */ 'E', 'V', 'O', 'R', 0,
  /* 7183 */ 'X', 'X', 'L', 'X', 'O', 'R', 0,
  /* 7190 */ 'V', 'P', 'E', 'R', 'M', 'X', 'O', 'R', 0,
  /* 7199 */ 'C', 'R', 'X', 'O', 'R', 0,
  /* 7205 */ 'E', 'V', 'X', 'O', 'R', 0,
  /* 7211 */ 'M', 'F', 'S', 'P', 'R', 0,
  /* 7217 */ 'M', 'T', 'S', 'P', 'R', 0,
  /* 7223 */ 'M', 'F', 'S', 'R', 0,
  /* 7228 */ 'M', 'F', 'M', 'S', 'R', 0,
  /* 7234 */ 'M', 'T', 'M', 'S', 'R', 0,
  /* 7240 */ 'M', 'T', 'S', 'R', 0,
  /* 7245 */ 'L', 'V', 'S', 'R', 0,
  /* 7250 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', 0,
  /* 7259 */ 'g', 'B', 'C', 'C', 'T', 'R', 0,
  /* 7266 */ 'B', 'C', 'C', 'C', 'T', 'R', 0,
  /* 7273 */ 'M', 'F', 'C', 'T', 'R', 0,
  /* 7279 */ 'M', 'T', 'C', 'T', 'R', 0,
  /* 7285 */ 'Q', 'V', 'F', 'A', 'B', 'S', 0,
  /* 7292 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 0,
  /* 7300 */ 'E', 'V', 'A', 'B', 'S', 0,
  /* 7306 */ 'V', 'S', 'U', 'M', '4', 'S', 'B', 'S', 0,
  /* 7315 */ 'V', 'S', 'U', 'B', 'S', 'B', 'S', 0,
  /* 7323 */ 'V', 'A', 'D', 'D', 'S', 'B', 'S', 0,
  /* 7331 */ 'V', 'S', 'U', 'M', '4', 'U', 'B', 'S', 0,
  /* 7340 */ 'V', 'S', 'U', 'B', 'U', 'B', 'S', 0,
  /* 7348 */ 'V', 'A', 'D', 'D', 'U', 'B', 'S', 0,
  /* 7356 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 0,
  /* 7364 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 0,
  /* 7373 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 0,
  /* 7383 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 0,
  /* 7391 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 0,
  /* 7400 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 7410 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 7424 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 'S', 0,
  /* 7437 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 7447 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 7458 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'S', 0,
  /* 7467 */ 'D', 'C', 'B', 'T', 'D', 'S', 0,
  /* 7474 */ 'D', 'C', 'B', 'T', 'S', 'T', 'D', 'S', 0,
  /* 7483 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 7494 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 7505 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'D', 'S', 0,
  /* 7516 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 7527 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 7538 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'D', 'S', 0,
  /* 7549 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 7562 */ 'Q', 'V', 'F', 'R', 'E', 'S', 0,
  /* 7569 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 0,
  /* 7580 */ 'M', 'F', 'F', 'S', 0,
  /* 7585 */ 'L', 'F', 'S', 0,
  /* 7589 */ 'M', 'C', 'R', 'F', 'S', 0,
  /* 7595 */ 'S', 'T', 'F', 'S', 0,
  /* 7600 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 7606 */ 'V', 'S', 'U', 'M', '4', 'S', 'H', 'S', 0,
  /* 7615 */ 'V', 'S', 'U', 'B', 'S', 'H', 'S', 0,
  /* 7623 */ 'V', 'M', 'H', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 7633 */ 'V', 'M', 'H', 'R', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 7644 */ 'V', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 7652 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'S', 0,
  /* 7661 */ 'V', 'S', 'U', 'B', 'U', 'H', 'S', 0,
  /* 7669 */ 'V', 'A', 'D', 'D', 'U', 'H', 'S', 0,
  /* 7677 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'S', 0,
  /* 7686 */ 'S', 'U', 'B', 'I', 'S', 0,
  /* 7692 */ 'A', 'D', 'D', 'I', 'S', 0,
  /* 7698 */ 'L', 'I', 'S', 0,
  /* 7702 */ 'X', 'O', 'R', 'I', 'S', 0,
  /* 7708 */ 'E', 'V', 'S', 'R', 'W', 'I', 'S', 0,
  /* 7716 */ 'F', 'S', 'E', 'L', 'S', 0,
  /* 7722 */ 'A', 'D', 'D', '4', 'T', 'L', 'S', 0,
  /* 7730 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', 0,
  /* 7738 */ 'B', 'L', '8', '_', 'T', 'L', 'S', 0,
  /* 7746 */ 'B', 'L', '_', 'T', 'L', 'S', 0,
  /* 7753 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'T', 'L', 'S', 0,
  /* 7765 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 0,
  /* 7773 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 'S', 0,
  /* 7782 */ 'F', 'R', 'I', 'M', 'S', 0,
  /* 7788 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 0,
  /* 7796 */ 'F', 'R', 'I', 'N', 'S', 0,
  /* 7802 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 0,
  /* 7810 */ 'F', 'R', 'I', 'P', 'S', 0,
  /* 7816 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 7833 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 7839 */ 'F', 'N', 'A', 'B', 'S', 'S', 0,
  /* 7846 */ 'V', 'P', 'K', 'S', 'D', 'S', 'S', 0,
  /* 7854 */ 'V', 'P', 'K', 'S', 'H', 'S', 'S', 0,
  /* 7862 */ 'V', 'P', 'K', 'S', 'W', 'S', 'S', 0,
  /* 7870 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 0,
  /* 7879 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'S', 0,
  /* 7888 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 7895 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 'S', 0,
  /* 7905 */ 'V', 'P', 'K', 'S', 'D', 'U', 'S', 0,
  /* 7913 */ 'V', 'P', 'K', 'U', 'D', 'U', 'S', 0,
  /* 7921 */ 'V', 'P', 'K', 'S', 'H', 'U', 'S', 0,
  /* 7929 */ 'V', 'P', 'K', 'U', 'H', 'U', 'S', 0,
  /* 7937 */ 'F', 'C', 'M', 'P', 'U', 'S', 0,
  /* 7944 */ 'V', 'P', 'K', 'S', 'W', 'U', 'S', 0,
  /* 7952 */ 'V', 'P', 'K', 'U', 'W', 'U', 'S', 0,
  /* 7960 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 7966 */ 'E', 'V', 'S', 'R', 'W', 'S', 0,
  /* 7973 */ 'V', 'S', 'U', 'M', '2', 'S', 'W', 'S', 0,
  /* 7982 */ 'V', 'S', 'U', 'B', 'S', 'W', 'S', 0,
  /* 7990 */ 'V', 'A', 'D', 'D', 'S', 'W', 'S', 0,
  /* 7998 */ 'V', 'S', 'U', 'M', 'S', 'W', 'S', 0,
  /* 8006 */ 'V', 'S', 'U', 'B', 'U', 'W', 'S', 0,
  /* 8014 */ 'V', 'A', 'D', 'D', 'U', 'W', 'S', 0,
  /* 8022 */ 'E', 'V', 'D', 'I', 'V', 'W', 'S', 0,
  /* 8030 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 8041 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 8052 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'W', 'S', 0,
  /* 8063 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 8074 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 8085 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'W', 'S', 0,
  /* 8096 */ 'V', 'C', 'T', 'S', 'X', 'S', 0,
  /* 8103 */ 'V', 'C', 'T', 'U', 'X', 'S', 0,
  /* 8110 */ 'F', 'R', 'I', 'Z', 'S', 0,
  /* 8116 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 0,
  /* 8128 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 0,
  /* 8139 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 0,
  /* 8152 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 0,
  /* 8165 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 0,
  /* 8176 */ 'D', 'C', 'B', 'T', 0,
  /* 8181 */ 'I', 'C', 'B', 'T', 0,
  /* 8186 */ 'D', 'C', 'B', 'T', 'C', 'T', 0,
  /* 8193 */ 'D', 'C', 'B', 'T', 'S', 'T', 'C', 'T', 0,
  /* 8202 */ 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 8213 */ 'C', 'R', '6', 'S', 'E', 'T', 0,
  /* 8220 */ 'C', 'R', '6', 'U', 'N', 'S', 'E', 'T', 0,
  /* 8229 */ 'C', 'R', 'U', 'N', 'S', 'E', 'T', 0,
  /* 8237 */ 'C', 'R', 'S', 'E', 'T', 0,
  /* 8243 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 0,
  /* 8252 */ 'W', 'A', 'I', 'T', 0,
  /* 8257 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 8271 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 8283 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 8298 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 8313 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 0,
  /* 8322 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 8333 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 8344 */ 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 8353 */ 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 8365 */ 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 8374 */ 'T', 'R', 'E', 'C', 'H', 'K', 'P', 'T', 0,
  /* 8383 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 8398 */ 'T', 'A', 'B', 'O', 'R', 'T', 0,
  /* 8405 */ 'F', 'S', 'Q', 'R', 'T', 0,
  /* 8411 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 8424 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 8436 */ 'D', 'C', 'B', 'S', 'T', 0,
  /* 8442 */ 'D', 'S', 'T', 0,
  /* 8446 */ 'D', 'C', 'B', 'T', 'S', 'T', 0,
  /* 8453 */ 'D', 'S', 'T', 'S', 'T', 0,
  /* 8459 */ 'D', 'C', 'B', 'T', 'T', 0,
  /* 8465 */ 'D', 'S', 'T', 'T', 0,
  /* 8470 */ 'D', 'C', 'B', 'T', 'S', 'T', 'T', 0,
  /* 8478 */ 'D', 'S', 'T', 'S', 'T', 'T', 0,
  /* 8485 */ 'L', 'H', 'A', 'U', 0,
  /* 8490 */ 'S', 'T', 'B', 'U', 0,
  /* 8495 */ 'L', 'F', 'D', 'U', 0,
  /* 8500 */ 'S', 'T', 'F', 'D', 'U', 0,
  /* 8506 */ 'M', 'U', 'L', 'H', 'D', 'U', 0,
  /* 8513 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 0,
  /* 8522 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 0,
  /* 8531 */ 'L', 'D', 'U', 0,
  /* 8535 */ 'S', 'T', 'D', 'U', 0,
  /* 8540 */ 'D', 'I', 'V', 'D', 'U', 0,
  /* 8546 */ 'D', 'I', 'V', 'D', 'E', 'U', 0,
  /* 8553 */ 'D', 'I', 'V', 'W', 'E', 'U', 0,
  /* 8560 */ 'S', 'T', 'H', 'U', 0,
  /* 8565 */ 'E', 'V', 'S', 'R', 'W', 'I', 'U', 0,
  /* 8573 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 0,
  /* 8581 */ 'L', 'F', 'S', 'U', 0,
  /* 8586 */ 'S', 'T', 'F', 'S', 'U', 0,
  /* 8592 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'U', 0,
  /* 8601 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'U', 0,
  /* 8610 */ 'M', 'U', 'L', 'H', 'W', 'U', 0,
  /* 8617 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 0,
  /* 8626 */ 'E', 'V', 'S', 'R', 'W', 'U', 0,
  /* 8633 */ 'S', 'T', 'W', 'U', 0,
  /* 8638 */ 'E', 'V', 'D', 'I', 'V', 'W', 'U', 0,
  /* 8646 */ 'L', 'B', 'Z', 'U', 0,
  /* 8651 */ 'L', 'H', 'Z', 'U', 0,
  /* 8656 */ 'L', 'W', 'Z', 'U', 0,
  /* 8661 */ 'F', 'D', 'I', 'V', 0,
  /* 8666 */ 'X', 'X', 'L', 'E', 'Q', 'V', 0,
  /* 8673 */ 'C', 'R', 'E', 'Q', 'V', 0,
  /* 8679 */ 'E', 'V', 'E', 'Q', 'V', 0,
  /* 8685 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 8697 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 8709 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 8721 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 8733 */ 'E', 'V', 'A', 'D', 'D', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8745 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8757 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8770 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8782 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8794 */ 'E', 'V', 'A', 'D', 'D', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8806 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8818 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8831 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8843 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 8855 */ 'E', 'V', 'A', 'D', 'D', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8867 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8879 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8892 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8904 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8916 */ 'E', 'V', 'A', 'D', 'D', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8928 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8940 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8953 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8965 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 8977 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'W', 0,
  /* 8988 */ 'V', 'S', 'R', 'A', 'W', 0,
  /* 8994 */ 'E', 'V', 'A', 'D', 'D', 'W', 0,
  /* 9001 */ 'E', 'V', 'L', 'D', 'W', 0,
  /* 9007 */ 'E', 'V', 'R', 'N', 'D', 'W', 0,
  /* 9014 */ 'E', 'V', 'S', 'T', 'D', 'W', 0,
  /* 9021 */ 'V', 'M', 'R', 'G', 'E', 'W', 0,
  /* 9028 */ 'E', 'V', 'S', 'U', 'B', 'F', 'W', 0,
  /* 9036 */ 'E', 'V', 'S', 'U', 'B', 'I', 'F', 'W', 0,
  /* 9045 */ 'V', 'M', 'R', 'G', 'H', 'W', 0,
  /* 9052 */ 'X', 'X', 'M', 'R', 'G', 'H', 'W', 0,
  /* 9060 */ 'M', 'U', 'L', 'H', 'W', 0,
  /* 9066 */ 'E', 'V', 'A', 'D', 'D', 'I', 'W', 0,
  /* 9074 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 0,
  /* 9082 */ 'V', 'M', 'R', 'G', 'L', 'W', 0,
  /* 9089 */ 'X', 'X', 'M', 'R', 'G', 'L', 'W', 0,
  /* 9097 */ 'M', 'U', 'L', 'L', 'W', 0,
  /* 9103 */ 'C', 'M', 'P', 'L', 'W', 0,
  /* 9109 */ 'E', 'V', 'R', 'L', 'W', 0,
  /* 9115 */ 'E', 'V', 'S', 'L', 'W', 0,
  /* 9121 */ 'L', 'M', 'W', 0,
  /* 9125 */ 'S', 'T', 'M', 'W', 0,
  /* 9130 */ 'V', 'P', 'M', 'S', 'U', 'M', 'W', 0,
  /* 9138 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 9150 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 9162 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 9174 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 9186 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 9198 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 9210 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 9222 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 9234 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 9246 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 9258 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 9270 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 9282 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 9294 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 9306 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 9318 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 9330 */ 'V', 'M', 'R', 'G', 'O', 'W', 0,
  /* 9337 */ 'C', 'M', 'P', 'W', 0,
  /* 9342 */ 'V', 'S', 'R', 'W', 0,
  /* 9347 */ 'V', 'M', 'U', 'L', 'E', 'S', 'W', 0,
  /* 9355 */ 'V', 'A', 'V', 'G', 'S', 'W', 0,
  /* 9362 */ 'V', 'U', 'P', 'K', 'H', 'S', 'W', 0,
  /* 9370 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'W', 0,
  /* 9379 */ 'V', 'U', 'P', 'K', 'L', 'S', 'W', 0,
  /* 9387 */ 'E', 'V', 'C', 'N', 'T', 'L', 'S', 'W', 0,
  /* 9396 */ 'V', 'M', 'I', 'N', 'S', 'W', 0,
  /* 9403 */ 'V', 'M', 'U', 'L', 'O', 'S', 'W', 0,
  /* 9411 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 0,
  /* 9420 */ 'E', 'X', 'T', 'S', 'W', 0,
  /* 9426 */ 'V', 'M', 'A', 'X', 'S', 'W', 0,
  /* 9433 */ 'V', 'S', 'P', 'L', 'T', 'W', 0,
  /* 9440 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 0,
  /* 9448 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'W', 0,
  /* 9457 */ 'S', 'T', 'W', 0,
  /* 9461 */ 'V', 'S', 'U', 'B', 'C', 'U', 'W', 0,
  /* 9469 */ 'V', 'A', 'D', 'D', 'C', 'U', 'W', 0,
  /* 9477 */ 'V', 'M', 'U', 'L', 'E', 'U', 'W', 0,
  /* 9485 */ 'V', 'A', 'V', 'G', 'U', 'W', 0,
  /* 9492 */ 'V', 'M', 'I', 'N', 'U', 'W', 0,
  /* 9499 */ 'V', 'M', 'U', 'L', 'O', 'U', 'W', 0,
  /* 9507 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 0,
  /* 9516 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 0,
  /* 9525 */ 'V', 'M', 'A', 'X', 'U', 'W', 0,
  /* 9532 */ 'D', 'I', 'V', 'W', 0,
  /* 9537 */ 'V', 'C', 'L', 'Z', 'W', 0,
  /* 9543 */ 'E', 'V', 'C', 'N', 'T', 'L', 'Z', 'W', 0,
  /* 9552 */ 'L', 'X', 'V', 'D', '2', 'X', 0,
  /* 9559 */ 'S', 'T', 'X', 'V', 'D', '2', 'X', 0,
  /* 9567 */ 'L', 'X', 'V', 'W', '4', 'X', 0,
  /* 9574 */ 'S', 'T', 'X', 'V', 'W', '4', 'X', 0,
  /* 9582 */ 'L', 'H', 'A', 'X', 0,
  /* 9587 */ 'T', 'L', 'B', 'I', 'V', 'A', 'X', 0,
  /* 9595 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 0,
  /* 9604 */ 'L', 'X', 'S', 'I', 'W', 'A', 'X', 0,
  /* 9612 */ 'L', 'W', 'A', 'X', 0,
  /* 9617 */ 'L', 'V', 'E', 'B', 'X', 0,
  /* 9623 */ 'S', 'T', 'V', 'E', 'B', 'X', 0,
  /* 9630 */ 'S', 'T', 'B', 'X', 0,
  /* 9635 */ 'S', 'T', 'B', 'C', 'X', 0,
  /* 9641 */ 'S', 'T', 'D', 'C', 'X', 0,
  /* 9647 */ 'S', 'T', 'H', 'C', 'X', 0,
  /* 9653 */ 'S', 'T', 'W', 'C', 'X', 0,
  /* 9659 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 0,
  /* 9667 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 0,
  /* 9676 */ 'E', 'V', 'L', 'D', 'D', 'X', 0,
  /* 9683 */ 'E', 'V', 'S', 'T', 'D', 'D', 'X', 0,
  /* 9691 */ 'Q', 'V', 'L', 'F', 'D', 'X', 0,
  /* 9698 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 0,
  /* 9706 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'D', 'X', 0,
  /* 9715 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'D', 'X', 0,
  /* 9724 */ 'L', 'X', 'S', 'D', 'X', 0,
  /* 9730 */ 'S', 'T', 'X', 'S', 'D', 'X', 0,
  /* 9737 */ 'S', 'T', 'D', 'X', 0,
  /* 9742 */ 'E', 'V', 'L', 'W', 'H', 'E', 'X', 0,
  /* 9750 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 'X', 0,
  /* 9759 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 'X', 0,
  /* 9768 */ 'E', 'V', 'L', 'D', 'H', 'X', 0,
  /* 9775 */ 'E', 'V', 'S', 'T', 'D', 'H', 'X', 0,
  /* 9783 */ 'L', 'V', 'E', 'H', 'X', 0,
  /* 9789 */ 'S', 'T', 'V', 'E', 'H', 'X', 0,
  /* 9796 */ 'S', 'T', 'H', 'X', 0,
  /* 9801 */ 'S', 'T', 'B', 'C', 'I', 'X', 0,
  /* 9808 */ 'L', 'D', 'C', 'I', 'X', 0,
  /* 9814 */ 'S', 'T', 'D', 'C', 'I', 'X', 0,
  /* 9821 */ 'S', 'T', 'H', 'C', 'I', 'X', 0,
  /* 9828 */ 'S', 'T', 'W', 'C', 'I', 'X', 0,
  /* 9835 */ 'L', 'B', 'Z', 'C', 'I', 'X', 0,
  /* 9842 */ 'L', 'H', 'Z', 'C', 'I', 'X', 0,
  /* 9849 */ 'L', 'W', 'Z', 'C', 'I', 'X', 0,
  /* 9856 */ 'V', 'S', 'B', 'O', 'X', 0,
  /* 9862 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 'X', 0,
  /* 9871 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 'X', 0,
  /* 9880 */ 'V', 'U', 'P', 'K', 'H', 'P', 'X', 0,
  /* 9888 */ 'V', 'P', 'K', 'P', 'X', 0,
  /* 9894 */ 'V', 'U', 'P', 'K', 'L', 'P', 'X', 0,
  /* 9902 */ 'L', 'X', 'S', 'S', 'P', 'X', 0,
  /* 9909 */ 'S', 'T', 'X', 'S', 'S', 'P', 'X', 0,
  /* 9917 */ 'L', 'B', 'A', 'R', 'X', 0,
  /* 9923 */ 'L', 'D', 'A', 'R', 'X', 0,
  /* 9929 */ 'L', 'H', 'A', 'R', 'X', 0,
  /* 9935 */ 'L', 'W', 'A', 'R', 'X', 0,
  /* 9941 */ 'L', 'D', 'B', 'R', 'X', 0,
  /* 9947 */ 'S', 'T', 'D', 'B', 'R', 'X', 0,
  /* 9954 */ 'L', 'H', 'B', 'R', 'X', 0,
  /* 9960 */ 'S', 'T', 'H', 'B', 'R', 'X', 0,
  /* 9967 */ 'L', 'W', 'B', 'R', 'X', 0,
  /* 9973 */ 'S', 'T', 'W', 'B', 'R', 'X', 0,
  /* 9980 */ 'T', 'L', 'B', 'S', 'X', 0,
  /* 9986 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 0,
  /* 9994 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 0,
  /* 10003 */ 'L', 'X', 'V', 'D', 'S', 'X', 0,
  /* 10010 */ 'V', 'C', 'F', 'S', 'X', 0,
  /* 10016 */ 'Q', 'V', 'L', 'F', 'S', 'X', 0,
  /* 10023 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 0,
  /* 10031 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 0,
  /* 10040 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 'X', 0,
  /* 10049 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'S', 'X', 0,
  /* 10058 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 10071 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 10083 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 10097 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 10111 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 10123 */ 'L', 'H', 'A', 'U', 'X', 0,
  /* 10129 */ 'L', 'W', 'A', 'U', 'X', 0,
  /* 10135 */ 'S', 'T', 'B', 'U', 'X', 0,
  /* 10141 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 0,
  /* 10150 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 0,
  /* 10160 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 0,
  /* 10168 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 0,
  /* 10177 */ 'L', 'D', 'U', 'X', 0,
  /* 10182 */ 'S', 'T', 'D', 'U', 'X', 0,
  /* 10188 */ 'V', 'C', 'F', 'U', 'X', 0,
  /* 10194 */ 'S', 'T', 'H', 'U', 'X', 0,
  /* 10200 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 'X', 0,
  /* 10209 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 0,
  /* 10218 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 0,
  /* 10228 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 0,
  /* 10236 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 0,
  /* 10245 */ 'S', 'T', 'W', 'U', 'X', 0,
  /* 10251 */ 'L', 'B', 'Z', 'U', 'X', 0,
  /* 10257 */ 'L', 'H', 'Z', 'U', 'X', 0,
  /* 10263 */ 'L', 'W', 'Z', 'U', 'X', 0,
  /* 10269 */ 'L', 'V', 'X', 0,
  /* 10273 */ 'S', 'T', 'V', 'X', 0,
  /* 10278 */ 'E', 'V', 'L', 'D', 'W', 'X', 0,
  /* 10285 */ 'E', 'V', 'S', 'T', 'D', 'W', 'X', 0,
  /* 10293 */ 'L', 'V', 'E', 'W', 'X', 0,
  /* 10299 */ 'S', 'T', 'V', 'E', 'W', 'X', 0,
  /* 10306 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 0,
  /* 10315 */ 'S', 'T', 'X', 'S', 'I', 'W', 'X', 0,
  /* 10323 */ 'S', 'T', 'W', 'X', 0,
  /* 10328 */ 'L', 'B', 'Z', 'X', 0,
  /* 10333 */ 'L', 'H', 'Z', 'X', 0,
  /* 10338 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 0,
  /* 10347 */ 'L', 'X', 'S', 'I', 'W', 'Z', 'X', 0,
  /* 10355 */ 'L', 'W', 'Z', 'X', 0,
  /* 10360 */ 'C', 'O', 'P', 'Y', 0,
  /* 10365 */ 'D', 'C', 'B', 'Z', 0,
  /* 10370 */ 'L', 'B', 'Z', 0,
  /* 10374 */ 'B', 'D', 'Z', 0,
  /* 10378 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'Z', 0,
  /* 10387 */ 'L', 'H', 'Z', 0,
  /* 10391 */ 'V', 'R', 'F', 'I', 'Z', 0,
  /* 10397 */ 'X', 'S', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 10405 */ 'X', 'V', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 10413 */ 'X', 'V', 'R', 'S', 'P', 'I', 'Z', 0,
  /* 10421 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 0,
  /* 10428 */ 'B', 'D', 'N', 'Z', 0,
  /* 10433 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 0,
  /* 10443 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 0,
  /* 10453 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'Z', 0,
  /* 10462 */ 'L', 'W', 'Z', 0,
  /* 10466 */ 'M', 'F', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 10474 */ 'M', 'T', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 10482 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', '_', 0,
  /* 10491 */ 'B', 'L', '8', '_', 'T', 'L', 'S', '_', 0,
  /* 10500 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'b', 0,
  /* 10509 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'b', 0,
  /* 10518 */ 'M', 'T', 'F', 'S', 'F', 'b', 0,
  /* 10525 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 'b', 0,
  /* 10535 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 'b', 0,
  /* 10546 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 'b', 0,
  /* 10558 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 0,
  /* 10566 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 0,
  /* 10577 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 0,
  /* 10587 */ 'Q', 'V', 'F', 'M', 'R', 'b', 0,
  /* 10594 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 0,
  /* 10604 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 0,
  /* 10614 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'b', 0,
  /* 10622 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'b', 0,
  /* 10631 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'b', 0,
  /* 10639 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 'b', 0,
  /* 10648 */ 'L', 'D', 't', 'o', 'c', 0,
  /* 10654 */ 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 10661 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 10679 */ 'X', 'X', 'L', 'O', 'R', 'f', 0,
  /* 10686 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', 0,
  /* 10697 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 10708 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 10719 */ 'B', 'D', 'Z', 'L', 'A', 'm', 0,
  /* 10726 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'm', 0,
  /* 10734 */ 'B', 'D', 'Z', 'A', 'm', 0,
  /* 10740 */ 'B', 'D', 'N', 'Z', 'A', 'm', 0,
  /* 10747 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 10755 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 10764 */ 'B', 'D', 'Z', 'L', 'm', 0,
  /* 10770 */ 'B', 'D', 'N', 'Z', 'L', 'm', 0,
  /* 10777 */ 'B', 'D', 'Z', 'L', 'R', 'm', 0,
  /* 10784 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'm', 0,
  /* 10792 */ 'B', 'D', 'Z', 'm', 0,
  /* 10797 */ 'B', 'D', 'N', 'Z', 'm', 0,
  /* 10803 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', 0,
  /* 10812 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', 0,
  /* 10821 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', 0,
  /* 10829 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 'b', 'm', 0,
  /* 10839 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 'b', 'm', 0,
  /* 10849 */ 'R', 'L', 'W', 'N', 'M', 'o', 'b', 'm', 0,
  /* 10858 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 'n', 0,
  /* 10867 */ 'B', 'C', 'C', 'T', 'R', '8', 'n', 0,
  /* 10875 */ 'B', 'C', 'n', 0,
  /* 10879 */ 'B', 'C', 'L', 'n', 0,
  /* 10884 */ 'B', 'C', 'L', 'R', 'L', 'n', 0,
  /* 10891 */ 'B', 'C', 'C', 'T', 'R', 'L', 'n', 0,
  /* 10899 */ 'B', 'C', 'L', 'R', 'n', 0,
  /* 10905 */ 'B', 'C', 'C', 'T', 'R', 'n', 0,
  /* 10912 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 'o', 0,
  /* 10925 */ 'A', 'D', 'D', '4', 'o', 0,
  /* 10931 */ 'E', 'X', 'T', 'S', 'B', '8', 'o', 0,
  /* 10939 */ 'A', 'D', 'D', 'C', '8', 'o', 0,
  /* 10946 */ 'A', 'N', 'D', 'C', '8', 'o', 0,
  /* 10953 */ 'S', 'U', 'B', 'F', 'C', '8', 'o', 0,
  /* 10961 */ 'O', 'R', 'C', '8', 'o', 0,
  /* 10967 */ 'A', 'D', 'D', '8', 'o', 0,
  /* 10973 */ 'N', 'A', 'N', 'D', '8', 'o', 0,
  /* 10980 */ 'A', 'D', 'D', 'E', '8', 'o', 0,
  /* 10987 */ 'S', 'U', 'B', 'F', 'E', '8', 'o', 0,
  /* 10995 */ 'A', 'D', 'D', 'M', 'E', '8', 'o', 0,
  /* 11003 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'o', 0,
  /* 11012 */ 'A', 'D', 'D', 'Z', 'E', '8', 'o', 0,
  /* 11020 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'o', 0,
  /* 11029 */ 'S', 'U', 'B', 'F', '8', 'o', 0,
  /* 11036 */ 'N', 'E', 'G', '8', 'o', 0,
  /* 11042 */ 'E', 'X', 'T', 'S', 'H', '8', 'o', 0,
  /* 11050 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 'o', 0,
  /* 11059 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 'o', 0,
  /* 11068 */ 'R', 'L', 'W', 'N', 'M', '8', 'o', 0,
  /* 11076 */ 'N', 'O', 'R', '8', 'o', 0,
  /* 11082 */ 'X', 'O', 'R', '8', 'o', 0,
  /* 11088 */ 'E', 'Q', 'V', '8', 'o', 0,
  /* 11094 */ 'S', 'L', 'W', '8', 'o', 0,
  /* 11100 */ 'S', 'R', 'W', '8', 'o', 0,
  /* 11106 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 'o', 0,
  /* 11115 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 'o', 0,
  /* 11125 */ 'E', 'X', 'T', 'S', 'B', 'o', 0,
  /* 11132 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 'o', 0,
  /* 11142 */ 'F', 'S', 'U', 'B', 'o', 0,
  /* 11148 */ 'F', 'M', 'S', 'U', 'B', 'o', 0,
  /* 11155 */ 'F', 'N', 'M', 'S', 'U', 'B', 'o', 0,
  /* 11163 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 'o', 0,
  /* 11173 */ 'A', 'D', 'D', 'C', 'o', 0,
  /* 11179 */ 'A', 'N', 'D', 'C', 'o', 0,
  /* 11185 */ 'S', 'U', 'B', 'F', 'C', 'o', 0,
  /* 11192 */ 'S', 'U', 'B', 'I', 'C', 'o', 0,
  /* 11199 */ 'A', 'D', 'D', 'I', 'C', 'o', 0,
  /* 11206 */ 'R', 'L', 'D', 'I', 'C', 'o', 0,
  /* 11213 */ 'O', 'R', 'C', 'o', 0,
  /* 11218 */ 'S', 'R', 'A', 'D', 'o', 0,
  /* 11224 */ 'F', 'A', 'D', 'D', 'o', 0,
  /* 11230 */ 'F', 'M', 'A', 'D', 'D', 'o', 0,
  /* 11237 */ 'F', 'N', 'M', 'A', 'D', 'D', 'o', 0,
  /* 11245 */ 'F', 'N', 'E', 'G', 'D', 'o', 0,
  /* 11252 */ 'M', 'U', 'L', 'H', 'D', 'o', 0,
  /* 11259 */ 'F', 'C', 'F', 'I', 'D', 'o', 0,
  /* 11266 */ 'F', 'C', 'T', 'I', 'D', 'o', 0,
  /* 11273 */ 'F', 'S', 'E', 'L', 'D', 'o', 0,
  /* 11280 */ 'M', 'U', 'L', 'L', 'D', 'o', 0,
  /* 11287 */ 'S', 'L', 'D', 'o', 0,
  /* 11292 */ 'F', 'R', 'I', 'M', 'D', 'o', 0,
  /* 11299 */ 'N', 'A', 'N', 'D', 'o', 0,
  /* 11305 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 'o', 0,
  /* 11314 */ 'F', 'R', 'I', 'N', 'D', 'o', 0,
  /* 11321 */ 'F', 'R', 'I', 'P', 'D', 'o', 0,
  /* 11328 */ 'S', 'R', 'D', 'o', 0,
  /* 11333 */ 'F', 'A', 'B', 'S', 'D', 'o', 0,
  /* 11340 */ 'F', 'N', 'A', 'B', 'S', 'D', 'o', 0,
  /* 11348 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 'o', 0,
  /* 11358 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 'o', 0,
  /* 11368 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 'o', 0,
  /* 11378 */ 'D', 'I', 'V', 'D', 'o', 0,
  /* 11384 */ 'F', 'R', 'I', 'Z', 'D', 'o', 0,
  /* 11391 */ 'C', 'N', 'T', 'L', 'Z', 'D', 'o', 0,
  /* 11399 */ 'A', 'D', 'D', 'E', 'o', 0,
  /* 11405 */ 'D', 'I', 'V', 'D', 'E', 'o', 0,
  /* 11412 */ 'S', 'U', 'B', 'F', 'E', 'o', 0,
  /* 11419 */ 'A', 'D', 'D', 'M', 'E', 'o', 0,
  /* 11426 */ 'S', 'U', 'B', 'F', 'M', 'E', 'o', 0,
  /* 11434 */ 'F', 'R', 'E', 'o', 0,
  /* 11439 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'o', 0,
  /* 11448 */ 'D', 'I', 'V', 'W', 'E', 'o', 0,
  /* 11455 */ 'A', 'D', 'D', 'Z', 'E', 'o', 0,
  /* 11462 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'o', 0,
  /* 11470 */ 'S', 'U', 'B', 'F', 'o', 0,
  /* 11476 */ 'M', 'T', 'F', 'S', 'F', 'o', 0,
  /* 11483 */ 'N', 'E', 'G', 'o', 0,
  /* 11488 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 'o', 0,
  /* 11498 */ 'E', 'X', 'T', 'S', 'H', 'o', 0,
  /* 11505 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 'o', 0,
  /* 11515 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 'o', 0,
  /* 11525 */ 'S', 'R', 'A', 'D', 'I', 'o', 0,
  /* 11532 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 'o', 0,
  /* 11542 */ 'E', 'X', 'T', 'L', 'D', 'I', 'o', 0,
  /* 11550 */ 'A', 'N', 'D', 'I', 'o', 0,
  /* 11556 */ 'C', 'L', 'R', 'R', 'D', 'I', 'o', 0,
  /* 11564 */ 'I', 'N', 'S', 'R', 'D', 'I', 'o', 0,
  /* 11572 */ 'R', 'O', 'T', 'R', 'D', 'I', 'o', 0,
  /* 11580 */ 'E', 'X', 'T', 'R', 'D', 'I', 'o', 0,
  /* 11588 */ 'M', 'T', 'F', 'S', 'F', 'I', 'o', 0,
  /* 11596 */ 'R', 'L', 'D', 'I', 'M', 'I', 'o', 0,
  /* 11604 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 0,
  /* 11612 */ 'S', 'R', 'A', 'W', 'I', 'o', 0,
  /* 11619 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 'o', 0,
  /* 11629 */ 'I', 'N', 'S', 'L', 'W', 'I', 'o', 0,
  /* 11637 */ 'E', 'X', 'T', 'L', 'W', 'I', 'o', 0,
  /* 11645 */ 'C', 'L', 'R', 'R', 'W', 'I', 'o', 0,
  /* 11653 */ 'I', 'N', 'S', 'R', 'W', 'I', 'o', 0,
  /* 11661 */ 'R', 'O', 'T', 'R', 'W', 'I', 'o', 0,
  /* 11669 */ 'E', 'X', 'T', 'R', 'W', 'I', 'o', 0,
  /* 11677 */ 'R', 'L', 'D', 'C', 'L', 'o', 0,
  /* 11684 */ 'R', 'L', 'D', 'I', 'C', 'L', 'o', 0,
  /* 11692 */ 'F', 'M', 'U', 'L', 'o', 0,
  /* 11698 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 0,
  /* 11706 */ 'R', 'L', 'W', 'N', 'M', 'o', 0,
  /* 11713 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 'o', 0,
  /* 11724 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 'o', 0,
  /* 11735 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 'o', 0,
  /* 11746 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 'o', 0,
  /* 11755 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 'o', 0,
  /* 11765 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 'o', 0,
  /* 11775 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 'o', 0,
  /* 11785 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 'o', 0,
  /* 11796 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 'o', 0,
  /* 11807 */ 'F', 'R', 'S', 'P', 'o', 0,
  /* 11813 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 'o', 0,
  /* 11824 */ 'R', 'L', 'D', 'C', 'R', 'o', 0,
  /* 11831 */ 'R', 'L', 'D', 'I', 'C', 'R', 'o', 0,
  /* 11839 */ 'F', 'M', 'R', 'o', 0,
  /* 11844 */ 'N', 'O', 'R', 'o', 0,
  /* 11849 */ 'X', 'O', 'R', 'o', 0,
  /* 11854 */ 'F', 'S', 'U', 'B', 'S', 'o', 0,
  /* 11861 */ 'F', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 11869 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 11878 */ 'F', 'A', 'D', 'D', 'S', 'o', 0,
  /* 11885 */ 'F', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 11893 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 11902 */ 'F', 'C', 'F', 'I', 'D', 'S', 'o', 0,
  /* 11910 */ 'F', 'R', 'E', 'S', 'o', 0,
  /* 11916 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'o', 0,
  /* 11926 */ 'M', 'F', 'F', 'S', 'o', 0,
  /* 11932 */ 'F', 'N', 'E', 'G', 'S', 'o', 0,
  /* 11939 */ 'A', 'N', 'D', 'I', 'S', 'o', 0,
  /* 11946 */ 'F', 'S', 'E', 'L', 'S', 'o', 0,
  /* 11953 */ 'F', 'M', 'U', 'L', 'S', 'o', 0,
  /* 11960 */ 'F', 'R', 'I', 'M', 'S', 'o', 0,
  /* 11967 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 'o', 0,
  /* 11976 */ 'F', 'R', 'I', 'N', 'S', 'o', 0,
  /* 11983 */ 'F', 'R', 'I', 'P', 'S', 'o', 0,
  /* 11990 */ 'F', 'A', 'B', 'S', 'S', 'o', 0,
  /* 11997 */ 'F', 'N', 'A', 'B', 'S', 'S', 'o', 0,
  /* 12005 */ 'F', 'S', 'Q', 'R', 'T', 'S', 'o', 0,
  /* 12013 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', 'o', 0,
  /* 12022 */ 'F', 'D', 'I', 'V', 'S', 'o', 0,
  /* 12029 */ 'F', 'R', 'I', 'Z', 'S', 'o', 0,
  /* 12036 */ 'F', 'S', 'Q', 'R', 'T', 'o', 0,
  /* 12043 */ 'M', 'U', 'L', 'H', 'D', 'U', 'o', 0,
  /* 12051 */ 'F', 'C', 'F', 'I', 'D', 'U', 'o', 0,
  /* 12059 */ 'D', 'I', 'V', 'D', 'U', 'o', 0,
  /* 12066 */ 'D', 'I', 'V', 'D', 'E', 'U', 'o', 0,
  /* 12074 */ 'D', 'I', 'V', 'W', 'E', 'U', 'o', 0,
  /* 12082 */ 'M', 'U', 'L', 'H', 'W', 'U', 'o', 0,
  /* 12090 */ 'D', 'I', 'V', 'W', 'U', 'o', 0,
  /* 12097 */ 'F', 'D', 'I', 'V', 'o', 0,
  /* 12103 */ 'E', 'Q', 'V', 'o', 0,
  /* 12108 */ 'S', 'R', 'A', 'W', 'o', 0,
  /* 12114 */ 'M', 'U', 'L', 'H', 'W', 'o', 0,
  /* 12121 */ 'F', 'C', 'T', 'I', 'W', 'o', 0,
  /* 12128 */ 'M', 'U', 'L', 'L', 'W', 'o', 0,
  /* 12135 */ 'S', 'L', 'W', 'o', 0,
  /* 12140 */ 'S', 'R', 'W', 'o', 0,
  /* 12145 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 'o', 0,
  /* 12155 */ 'E', 'X', 'T', 'S', 'W', 'o', 0,
  /* 12162 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 'o', 0,
  /* 12172 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 'o', 0,
  /* 12182 */ 'D', 'I', 'V', 'W', 'o', 0,
  /* 12188 */ 'C', 'N', 'T', 'L', 'Z', 'W', 'o', 0,
  /* 12196 */ 'F', 'C', 'T', 'I', 'D', 'Z', 'o', 0,
  /* 12204 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 'o', 0,
  /* 12213 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 'o', 0,
  /* 12222 */ 'F', 'C', 'T', 'I', 'W', 'Z', 'o', 0,
  /* 12230 */ 'B', 'D', 'Z', 'L', 'A', 'p', 0,
  /* 12237 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'p', 0,
  /* 12245 */ 'B', 'D', 'Z', 'A', 'p', 0,
  /* 12251 */ 'B', 'D', 'N', 'Z', 'A', 'p', 0,
  /* 12258 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 12266 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 12275 */ 'B', 'D', 'Z', 'L', 'p', 0,
  /* 12281 */ 'B', 'D', 'N', 'Z', 'L', 'p', 0,
  /* 12288 */ 'B', 'D', 'Z', 'L', 'R', 'p', 0,
  /* 12295 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'p', 0,
  /* 12303 */ 'B', 'D', 'Z', 'p', 0,
  /* 12308 */ 'B', 'D', 'N', 'Z', 'p', 0,
  /* 12314 */ 'M', 'T', 'C', 'T', 'R', '8', 'l', 'o', 'o', 'p', 0,
  /* 12325 */ 'M', 'T', 'C', 'T', 'R', 'l', 'o', 'o', 'p', 0,
  /* 12335 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 12349 */ 'Q', 'V', 'F', 'N', 'E', 'G', 's', 0,
  /* 12357 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 's', 0,
  /* 12367 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 's', 0,
  /* 12378 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 's', 0,
  /* 12390 */ 'Q', 'V', 'F', 'R', 'I', 'M', 's', 0,
  /* 12398 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 's', 0,
  /* 12407 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 's', 0,
  /* 12417 */ 'Q', 'V', 'F', 'R', 'I', 'N', 's', 0,
  /* 12425 */ 'Q', 'V', 'F', 'R', 'I', 'P', 's', 0,
  /* 12433 */ 'Q', 'V', 'F', 'R', 'S', 'P', 's', 0,
  /* 12441 */ 'Q', 'V', 'F', 'M', 'R', 's', 0,
  /* 12448 */ 'Q', 'V', 'F', 'A', 'B', 'S', 's', 0,
  /* 12456 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 's', 0,
  /* 12465 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 's', 0,
  /* 12474 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 12484 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 12495 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 's', 0,
  /* 12504 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 12514 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 12525 */ 'Q', 'V', 'F', 'R', 'E', 'S', 's', 0,
  /* 12533 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 's', 0,
  /* 12545 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 's', 0,
  /* 12554 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 's', 0,
  /* 12563 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 's', 0,
  /* 12573 */ 'Q', 'V', 'L', 'F', 'S', 'X', 's', 0,
  /* 12581 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 's', 0,
  /* 12590 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 's', 0,
  /* 12600 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 's', 0,
  /* 12608 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 's', 0,
  /* 12617 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 's', 0,
  /* 12629 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 's', 0,
  /* 12640 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 's', 0,
  /* 12651 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 's', 0,
  /* 12662 */ 'B', 'C', 'L', 'a', 'l', 'w', 'a', 'y', 's', 0,
  /* 12672 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 'i', 'n', 't', 0,
  /* 12684 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 12694 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 12704 */ 'L', 'A', 'x', 0,
  /* 12708 */ 'D', 'C', 'B', 'T', 'x', 0,
  /* 12714 */ 'D', 'C', 'B', 'T', 'S', 'T', 'x', 0,
  /* 12722 */ 'F', 'A', 'D', 'D', 'r', 't', 'z', 0,
};

extern const unsigned PPCInstrNameIndices[] = {
    4469U, 5334U, 5557U, 4888U, 4879U, 4934U, 3987U, 4002U, 
    3860U, 4016U, 7816U, 3747U, 3627U, 10360U, 3698U, 8383U, 
    3431U, 5655U, 8333U, 3469U, 8322U, 2940U, 6388U, 686U, 
    7722U, 10925U, 1015U, 7730U, 10482U, 10967U, 2814U, 966U, 
    10939U, 11173U, 3640U, 1026U, 10980U, 11399U, 4339U, 1138U, 
    2862U, 985U, 11199U, 7692U, 1498U, 2078U, 55U, 2062U, 
    2036U, 2049U, 2025U, 5121U, 267U, 5087U, 227U, 7009U, 
    281U, 5098U, 240U, 7024U, 298U, 5078U, 3705U, 1039U, 
    10995U, 11419U, 3837U, 1054U, 11012U, 11455U, 5578U, 6856U, 
    3388U, 1021U, 10974U, 2822U, 972U, 10946U, 11179U, 11939U, 
    1793U, 11550U, 1786U, 8283U, 1517U, 8298U, 1533U, 11300U, 
    834U, 168U, 511U, 1270U, 757U, 91U, 434U, 1197U, 
    798U, 132U, 475U, 1236U, 777U, 111U, 454U, 1216U, 
    874U, 208U, 551U, 1308U, 737U, 71U, 414U, 1165U, 
    854U, 188U, 531U, 1289U, 818U, 152U, 495U, 1255U, 
    5573U, 2526U, 1915U, 2807U, 2810U, 1938U, 7266U, 1476U, 
    4987U, 1361U, 4861U, 2290U, 7090U, 4951U, 7260U, 1469U, 
    10867U, 4980U, 1353U, 10858U, 10891U, 10905U, 4857U, 7085U, 
    4945U, 10884U, 10899U, 12662U, 10879U, 7254U, 1463U, 4973U, 
    1346U, 10661U, 10875U, 10428U, 1739U, 2514U, 10740U, 12251U, 
    5065U, 2302U, 10726U, 12237U, 7112U, 1415U, 4965U, 10755U, 
    12266U, 10784U, 12295U, 10770U, 12281U, 10797U, 12308U, 10374U, 
    1729U, 2509U, 10734U, 12245U, 5060U, 2296U, 10719U, 12230U, 
    7106U, 1408U, 4958U, 10747U, 12258U, 10777U, 12288U, 10764U, 
    12275U, 10792U, 12303U, 4853U, 1336U, 6380U, 7753U, 7738U, 
    10491U, 2280U, 930U, 6371U, 7080U, 1391U, 4939U, 7746U, 
    3370U, 2905U, 2583U, 4356U, 11532U, 4676U, 11619U, 4387U, 
    11556U, 4712U, 11645U, 2578U, 942U, 3464U, 4381U, 3348U, 
    4349U, 9103U, 4662U, 9337U, 4706U, 3612U, 11391U, 9545U, 
    1611U, 11106U, 12188U, 8213U, 8220U, 3414U, 2827U, 8673U, 
    3400U, 7161U, 7173U, 3042U, 8237U, 8229U, 7199U, 1913U, 
    3850U, 4268U, 8436U, 8176U, 8186U, 7467U, 8446U, 8193U, 
    7474U, 8470U, 12714U, 8459U, 12708U, 10365U, 5054U, 4283U, 
    3595U, 3645U, 8546U, 12066U, 11405U, 8540U, 12059U, 11378U, 
    9532U, 3823U, 8553U, 12074U, 11448U, 8640U, 12090U, 12182U, 
    7850U, 4927U, 8442U, 570U, 8453U, 576U, 8478U, 591U, 
    8465U, 584U, 2931U, 1000U, 358U, 651U, 376U, 669U, 
    12335U, 8669U, 1591U, 11088U, 12103U, 7300U, 9066U, 8733U, 
    8855U, 8794U, 8916U, 8994U, 3420U, 2834U, 6880U, 7870U, 
    8592U, 7879U, 8601U, 9387U, 9543U, 8022U, 8638U, 8679U, 
    2674U, 4172U, 3275U, 9676U, 4044U, 9768U, 9001U, 10278U, 
    8116U, 10058U, 8139U, 10083U, 8152U, 10097U, 3671U, 9742U, 
    7802U, 10040U, 8573U, 10200U, 8128U, 10071U, 8165U, 10111U, 
    4447U, 5625U, 5615U, 4457U, 1801U, 5392U, 1845U, 5436U, 
    1879U, 5470U, 3873U, 1943U, 8685U, 9138U, 4499U, 2104U, 
    8745U, 9186U, 3939U, 1982U, 8709U, 9162U, 8867U, 9258U, 
    4534U, 2143U, 8806U, 9222U, 8928U, 9294U, 1813U, 5404U, 
    1857U, 5448U, 1891U, 5482U, 3891U, 1963U, 8697U, 9150U, 
    4517U, 2124U, 8782U, 9210U, 3957U, 2002U, 8721U, 9174U, 
    8904U, 9282U, 4561U, 2173U, 8843U, 9246U, 8965U, 9318U, 
    2309U, 3882U, 1953U, 4508U, 2114U, 3948U, 1992U, 4543U, 
    2153U, 8770U, 9198U, 8892U, 9270U, 4552U, 2163U, 8831U, 
    9234U, 8953U, 9306U, 3900U, 1973U, 1825U, 5416U, 4526U, 
    2134U, 1869U, 5460U, 3966U, 2012U, 1835U, 5426U, 4570U, 
    2183U, 1903U, 5494U, 3407U, 3981U, 7167U, 7178U, 3048U, 
    9109U, 4669U, 9007U, 9115U, 4692U, 4437U, 4630U, 7708U, 
    8565U, 7966U, 8626U, 3281U, 9683U, 4050U, 9775U, 9014U, 
    10285U, 3678U, 9750U, 5595U, 9862U, 3829U, 9759U, 5647U, 
    9871U, 8757U, 8879U, 8818U, 8940U, 9028U, 9036U, 7205U, 
    4365U, 11542U, 4699U, 11637U, 4408U, 11580U, 4733U, 11669U, 
    2676U, 948U, 600U, 10931U, 11125U, 4174U, 1126U, 613U, 
    11042U, 11498U, 9420U, 639U, 10912U, 12155U, 5603U, 3507U, 
    11333U, 7833U, 11990U, 3209U, 7385U, 11878U, 11224U, 12722U, 
    3311U, 7460U, 11902U, 8515U, 7897U, 12013U, 12051U, 11259U, 
    3563U, 7937U, 3444U, 11305U, 7788U, 11967U, 3324U, 10435U, 
    12204U, 10380U, 12196U, 11266U, 9076U, 10445U, 12213U, 10455U, 
    12222U, 12121U, 8661U, 7960U, 12022U, 12097U, 3216U, 7393U, 
    11885U, 11230U, 7144U, 11839U, 2769U, 7366U, 11861U, 11148U, 
    5002U, 7767U, 11953U, 11692U, 3513U, 11340U, 7839U, 11997U, 
    3297U, 11245U, 7600U, 11932U, 3224U, 7402U, 11893U, 11237U, 
    2777U, 7375U, 11869U, 11155U, 3726U, 7564U, 11910U, 11434U, 
    3364U, 11292U, 7782U, 11960U, 3452U, 11314U, 7796U, 11976U, 
    3458U, 11321U, 7810U, 11983U, 3600U, 11384U, 8110U, 12029U, 
    6743U, 11807U, 3739U, 7571U, 11916U, 11439U, 3336U, 11273U, 
    7716U, 11946U, 8405U, 7888U, 12005U, 12036U, 2762U, 7358U, 
    11854U, 11142U, 7052U, 330U, 7039U, 315U, 4273U, 8181U, 
    4289U, 4685U, 11629U, 4394U, 11564U, 4719U, 11653U, 4911U, 
    1340U, 2919U, 2281U, 12704U, 9917U, 5015U, 10370U, 1724U, 
    9835U, 8646U, 1573U, 10251U, 1679U, 10328U, 1706U, 3333U, 
    9923U, 5022U, 9941U, 9808U, 8531U, 10177U, 9711U, 5109U, 
    253U, 10648U, 1925U, 8365U, 4639U, 5071U, 3288U, 8495U, 
    10162U, 9693U, 9597U, 10340U, 7585U, 8581U, 10230U, 10018U, 
    2021U, 925U, 9929U, 5029U, 8485U, 1549U, 10123U, 1651U, 
    9582U, 1619U, 9954U, 1637U, 10387U, 1734U, 9842U, 8651U, 
    1579U, 10257U, 1686U, 10333U, 1712U, 4476U, 1147U, 7698U, 
    1505U, 9121U, 4740U, 9617U, 9783U, 10293U, 4995U, 7245U, 
    10269U, 5043U, 2315U, 9935U, 5036U, 10129U, 9612U, 350U, 
    343U, 9967U, 1644U, 10462U, 1745U, 9849U, 8656U, 1585U, 
    10263U, 1693U, 10355U, 1718U, 10654U, 9724U, 9604U, 10347U, 
    9902U, 9552U, 10003U, 9567U, 6930U, 3908U, 7589U, 3619U, 
    6963U, 1385U, 7273U, 1484U, 6945U, 7580U, 11926U, 7096U, 
    1396U, 7228U, 3913U, 1075U, 7211U, 1445U, 7223U, 5543U, 
    2689U, 955U, 3757U, 12684U, 6975U, 3493U, 10466U, 2925U, 
    3927U, 1091U, 7279U, 1491U, 12314U, 12325U, 6957U, 0U, 
    48U, 3933U, 4430U, 11588U, 10518U, 11476U, 7101U, 1402U, 
    7234U, 3486U, 3920U, 1083U, 7217U, 1452U, 7240U, 5550U, 
    3766U, 12694U, 6982U, 3500U, 2319U, 10474U, 3303U, 8506U, 
    12043U, 11252U, 9060U, 8610U, 12082U, 12114U, 3342U, 11280U, 
    4479U, 1144U, 9097U, 12128U, 7130U, 7119U, 1423U, 3395U, 
    1020U, 10973U, 11299U, 3977U, 1121U, 11036U, 11483U, 6376U, 
    893U, 905U, 7157U, 1435U, 11076U, 11844U, 7151U, 1436U, 
    11077U, 3038U, 1010U, 10961U, 11213U, 4616U, 1160U, 7703U, 
    1511U, 11845U, 3544U, 9449U, 8344U, 8353U, 4578U, 10525U, 
    12357U, 4620U, 10535U, 12367U, 7285U, 12448U, 3207U, 7383U, 
    12495U, 3309U, 7458U, 8513U, 7895U, 10500U, 6871U, 10577U, 
    12629U, 8243U, 10594U, 12640U, 8313U, 10604U, 12651U, 5514U, 
    12407U, 3322U, 8522U, 10433U, 10378U, 10509U, 9074U, 8617U, 
    10443U, 10453U, 4842U, 10546U, 12378U, 3214U, 7391U, 12504U, 
    7142U, 10587U, 12441U, 2767U, 7364U, 12474U, 5000U, 7765U, 
    12545U, 7292U, 12456U, 3974U, 12349U, 3222U, 7400U, 12514U, 
    2775U, 7373U, 12484U, 5320U, 12398U, 3724U, 7562U, 12525U, 
    5266U, 12390U, 5536U, 12417U, 6364U, 12425U, 10421U, 12600U, 
    6741U, 12433U, 3737U, 7569U, 12533U, 4904U, 10558U, 10639U, 
    12608U, 2760U, 7356U, 12465U, 5504U, 10566U, 12617U, 3256U, 
    7437U, 5007U, 7773U, 3231U, 7410U, 3265U, 7447U, 3244U, 
    7424U, 4316U, 10141U, 2409U, 9659U, 2337U, 10209U, 2449U, 
    9986U, 2373U, 12554U, 10160U, 2430U, 9691U, 2356U, 10614U, 
    9595U, 2327U, 10338U, 2499U, 10228U, 2470U, 10016U, 2392U, 
    10631U, 12573U, 9706U, 10031U, 12672U, 9715U, 10049U, 10150U, 
    2419U, 4793U, 2234U, 9667U, 2346U, 4755U, 2192U, 10218U, 
    2459U, 4814U, 2257U, 9994U, 2382U, 4774U, 2213U, 12563U, 
    10168U, 2439U, 4804U, 2246U, 9698U, 2364U, 4765U, 2203U, 
    10622U, 10306U, 2489U, 10236U, 2479U, 4825U, 2269U, 12590U, 
    10023U, 2400U, 4784U, 2224U, 12581U, 6989U, 8257U, 3775U, 
    4305U, 4344U, 2534U, 4426U, 3317U, 4310U, 4866U, 11677U, 
    6951U, 11824U, 2868U, 4872U, 626U, 11684U, 6968U, 11831U, 
    11206U, 4485U, 11596U, 4492U, 1151U, 11050U, 10803U, 11604U, 
    10829U, 5273U, 1370U, 11059U, 10812U, 11698U, 10839U, 5280U, 
    1378U, 11068U, 10821U, 11706U, 10849U, 4401U, 11572U, 4726U, 
    11661U, 2714U, 3164U, 691U, 1098U, 714U, 1184U, 2952U, 
    2979U, 3081U, 3054U, 3006U, 3137U, 3108U, 704U, 1111U, 
    727U, 1326U, 2967U, 2994U, 3096U, 3069U, 3022U, 3152U, 
    3124U, 2092U, 3686U, 3651U, 3730U, 3360U, 4360U, 11536U, 
    11287U, 9117U, 1596U, 11094U, 4680U, 11623U, 12135U, 7000U, 
    8271U, 3804U, 3196U, 4333U, 11525U, 11218U, 8989U, 4648U, 
    11612U, 12108U, 3489U, 4396U, 11566U, 11328U, 9343U, 1601U, 
    11100U, 4721U, 11655U, 12140U, 2710U, 961U, 9801U, 9635U, 
    8490U, 1555U, 10135U, 1658U, 9630U, 1625U, 3552U, 9947U, 
    9814U, 9641U, 8535U, 10182U, 9737U, 3292U, 8500U, 10170U, 
    9700U, 10308U, 7595U, 8586U, 10238U, 10025U, 4203U, 1133U, 
    9960U, 9821U, 9647U, 8560U, 1561U, 10194U, 1665U, 9796U, 
    1631U, 9125U, 4745U, 9623U, 9789U, 10299U, 10273U, 5048U, 
    9457U, 1606U, 9973U, 9828U, 9653U, 8633U, 1567U, 10245U, 
    1672U, 10323U, 1700U, 9730U, 10315U, 9909U, 9559U, 9574U, 
    3855U, 1069U, 11029U, 2850U, 978U, 10953U, 11185U, 3665U, 
    1032U, 10987U, 11412U, 2874U, 992U, 3711U, 1046U, 11003U, 
    11426U, 3843U, 1061U, 11020U, 11462U, 11470U, 4278U, 2856U, 
    11192U, 7686U, 2914U, 8398U, 2841U, 4295U, 3167U, 4323U, 
    2554U, 935U, 1918U, 917U, 7250U, 1459U, 5529U, 4835U, 
    8202U, 10686U, 1750U, 10697U, 1762U, 10708U, 1774U, 3549U, 
    4415U, 3426U, 2098U, 3692U, 4897U, 9587U, 3330U, 4473U, 
    3718U, 393U, 9980U, 407U, 3176U, 2911U, 3817U, 400U, 
    5664U, 8374U, 5227U, 7241U, 9437U, 4751U, 3790U, 6935U, 
    6904U, 9469U, 6921U, 5311U, 6253U, 7323U, 7644U, 7990U, 
    5150U, 7348U, 5175U, 5210U, 7669U, 5294U, 5376U, 8014U, 
    3421U, 2835U, 2618U, 4116U, 9355U, 2729U, 4215U, 9485U, 
    6888U, 10010U, 32U, 10188U, 40U, 7072U, 8424U, 2800U, 
    3606U, 4262U, 9537U, 6221U, 11746U, 6309U, 11765U, 2751U, 
    11132U, 3570U, 11358U, 4237U, 11505U, 9507U, 12162U, 6268U, 
    11755U, 6318U, 11775U, 2665U, 11115U, 3527U, 11348U, 4163U, 
    11488U, 9411U, 12145U, 2784U, 11163U, 3579U, 11368U, 4246U, 
    11515U, 9516U, 12172U, 8096U, 14U, 8103U, 23U, 8680U, 
    6283U, 3201U, 6260U, 6245U, 6327U, 2682U, 3536U, 4180U, 
    9426U, 2793U, 3588U, 4255U, 9525U, 7623U, 7633U, 6302U, 
    2650U, 3520U, 4148U, 9396U, 2736U, 3556U, 4222U, 9492U, 
    5200U, 9021U, 2540U, 4057U, 9045U, 2547U, 4064U, 9082U, 
    9330U, 5133U, 5183U, 7652U, 5158U, 5218U, 7677U, 2596U, 
    4094U, 9347U, 2721U, 4207U, 9477U, 2657U, 4155U, 9403U, 
    2743U, 4229U, 9499U, 5384U, 3408U, 7063U, 8411U, 6229U, 
    7168U, 7179U, 3049U, 5328U, 7190U, 9888U, 7846U, 7905U, 
    7854U, 7921U, 7862U, 7944U, 5344U, 7913U, 5352U, 7929U, 
    5360U, 7952U, 2570U, 3377U, 4081U, 9130U, 2701U, 3543U, 
    4194U, 9448U, 6277U, 5236U, 5523U, 6334U, 10391U, 2560U, 
    3354U, 4071U, 9110U, 6292U, 9856U, 4916U, 3184U, 8977U, 
    4996U, 2565U, 3359U, 4587U, 4076U, 5637U, 9116U, 2694U, 
    4187U, 2633U, 4131U, 9370U, 9433U, 7246U, 2528U, 3195U, 
    4038U, 8988U, 2591U, 3495U, 4089U, 5642U, 9342U, 6896U, 
    9461U, 6912U, 5302U, 6238U, 7315U, 7615U, 7982U, 5142U, 
    7340U, 5167U, 5192U, 7661U, 5286U, 5368U, 8006U, 7973U, 
    7306U, 7606U, 7331U, 7998U, 9880U, 2625U, 4123U, 9362U, 
    9894U, 2642U, 4140U, 9379U, 7206U, 7U, 2520U, 4030U, 
    7549U, 2604U, 4102U, 8252U, 3659U, 4419U, 7186U, 1440U, 
    11082U, 4615U, 1159U, 7702U, 1510U, 11849U, 6078U, 5769U, 
    6505U, 6023U, 6142U, 5987U, 6713U, 7483U, 8030U, 7516U, 
    8063U, 6032U, 5785U, 5805U, 6151U, 6803U, 5733U, 6469U, 
    5967U, 6675U, 6205U, 6007U, 5691U, 6427U, 5925U, 6633U, 
    5887U, 6595U, 6060U, 5871U, 5711U, 6447U, 5945U, 6653U, 
    5669U, 6405U, 5903U, 6611U, 4594U, 2881U, 5242U, 6340U, 
    10397U, 5835U, 6551U, 5849U, 6565U, 6104U, 6775U, 5753U, 
    6489U, 6159U, 6113U, 6086U, 6757U, 5777U, 6513U, 6050U, 
    11724U, 6731U, 11796U, 5825U, 11713U, 6541U, 11785U, 6094U, 
    11735U, 6765U, 11813U, 5997U, 6695U, 6722U, 7494U, 8041U, 
    7527U, 8074U, 6041U, 7505U, 8052U, 7538U, 8085U, 5795U, 
    6521U, 6185U, 6828U, 5815U, 6531U, 6195U, 6838U, 6177U, 
    6820U, 5743U, 6479U, 5977U, 6685U, 6213U, 6848U, 6015U, 
    6705U, 5701U, 6437U, 5935U, 6643U, 5895U, 6603U, 6069U, 
    6748U, 5879U, 6587U, 5722U, 6458U, 5956U, 6664U, 5680U, 
    6416U, 5914U, 6622U, 4601U, 2889U, 5250U, 6348U, 10405U, 
    5842U, 6558U, 4608U, 2897U, 5258U, 6356U, 10413U, 5860U, 
    6576U, 6133U, 6794U, 5761U, 6497U, 6168U, 6811U, 6123U, 
    6784U, 3385U, 2819U, 8666U, 3392U, 7154U, 7148U, 3035U, 
    10679U, 7183U, 9052U, 9089U, 4372U, 4921U, 4654U, 9440U, 
    2806U, 1933U, 7259U, 4979U, 4856U, 2284U, 7084U, 4944U, 
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1624);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfo {
  explicit PPCGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1);
  virtual ~PPCGenInstrInfo();
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc PPCInsts[];
extern const unsigned PPCInstrNameIndices[];
extern const char PPCInstrNameData[];
PPCGenInstrInfo::PPCGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode) {
  InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1624);
}
PPCGenInstrInfo::~PPCGenInstrInfo() {}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace PPC {
namespace OpName { 
enum {
OPERAND_LAST
};
} // End namespace OpName
} // End namespace PPC
} // End namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM
#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace PPC {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // End namespace PPC
} // End namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace PPC {
namespace OpTypes { 
enum OperandType {
  abscalltarget = 0,
  abscondbrtarget = 1,
  absdirectbrtarget = 2,
  calltarget = 3,
  condbrtarget = 4,
  crbitm = 5,
  directbrtarget = 6,
  dispRI = 7,
  dispRIX = 8,
  dispSPE2 = 9,
  dispSPE4 = 10,
  dispSPE8 = 11,
  f32imm = 12,
  f64imm = 13,
  i16imm = 14,
  i1imm = 15,
  i32imm = 16,
  i64imm = 17,
  i8imm = 18,
  imm32SExt16 = 19,
  imm64SExt16 = 20,
  imm64ZExt32 = 21,
  memr = 22,
  memri = 23,
  memrix = 24,
  memrr = 25,
  pred = 26,
  ptr_rc_idx = 27,
  ptr_rc_nor0 = 28,
  s16imm = 29,
  s16imm64 = 30,
  s17imm = 31,
  s17imm64 = 32,
  s5imm = 33,
  spe2dis = 34,
  spe4dis = 35,
  spe8dis = 36,
  tlscall = 37,
  tlscall32 = 38,
  tlsgd = 39,
  tlsgd32 = 40,
  tlsreg = 41,
  tlsreg32 = 42,
  tocentry = 43,
  tocentry32 = 44,
  u10imm = 45,
  u12imm = 46,
  u16imm = 47,
  u16imm64 = 48,
  u1imm = 49,
  u2imm = 50,
  u3imm = 51,
  u4imm = 52,
  u5imm = 53,
  u6imm = 54,
  OPERAND_TYPE_LIST_END
};
} // End namespace OpTypes
} // End namespace PPC
} // End namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM
#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace PPC {

enum IsVSXFMAAlt {
	IsVSXFMAAlt_1
};

enum RC {
	RC_0,
	RC_1
};

// getAltVSXFMAOpcode
int getAltVSXFMAOpcode(uint16_t Opcode) {
static const uint16_t getAltVSXFMAOpcodeTable[][2] = {
  { PPC::XSMADDADP, PPC::XSMADDMDP },
  { PPC::XSMADDASP, PPC::XSMADDMSP },
  { PPC::XSMSUBADP, PPC::XSMSUBMDP },
  { PPC::XSMSUBASP, PPC::XSMSUBMSP },
  { PPC::XSNMADDADP, PPC::XSNMADDMDP },
  { PPC::XSNMADDASP, PPC::XSNMADDMSP },
  { PPC::XSNMSUBADP, PPC::XSNMSUBMDP },
  { PPC::XSNMSUBASP, PPC::XSNMSUBMSP },
  { PPC::XVMADDADP, PPC::XVMADDMDP },
  { PPC::XVMADDASP, PPC::XVMADDMSP },
  { PPC::XVMSUBADP, PPC::XVMSUBMDP },
  { PPC::XVMSUBASP, PPC::XVMSUBMSP },
  { PPC::XVNMADDADP, PPC::XVNMADDMDP },
  { PPC::XVNMADDASP, PPC::XVNMADDMSP },
  { PPC::XVNMSUBADP, PPC::XVNMSUBMDP },
  { PPC::XVNMSUBASP, PPC::XVNMSUBMSP },
}; // End of getAltVSXFMAOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 16;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getAltVSXFMAOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getAltVSXFMAOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getAltVSXFMAOpcodeTable[mid][1];
}

// getNonRecordFormOpcode
int getNonRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getNonRecordFormOpcodeTable[][2] = {
  { PPC::ADD4o, PPC::ADD4 },
  { PPC::ADD8o, PPC::ADD8 },
  { PPC::ADDC8o, PPC::ADDC8 },
  { PPC::ADDCo, PPC::ADDC },
  { PPC::ADDE8o, PPC::ADDE8 },
  { PPC::ADDEo, PPC::ADDE },
  { PPC::ADDICo, PPC::ADDIC },
  { PPC::ADDME8o, PPC::ADDME8 },
  { PPC::ADDMEo, PPC::ADDME },
  { PPC::ADDZE8o, PPC::ADDZE8 },
  { PPC::ADDZEo, PPC::ADDZE },
  { PPC::AND8o, PPC::AND8 },
  { PPC::ANDC8o, PPC::ANDC8 },
  { PPC::ANDCo, PPC::ANDC },
  { PPC::ANDo, PPC::AND },
  { PPC::CNTLZDo, PPC::CNTLZD },
  { PPC::CNTLZW8o, PPC::CNTLZW8 },
  { PPC::CNTLZWo, PPC::CNTLZW },
  { PPC::DIVDUo, PPC::DIVDU },
  { PPC::DIVDo, PPC::DIVD },
  { PPC::DIVWUo, PPC::DIVWU },
  { PPC::DIVWo, PPC::DIVW },
  { PPC::EQV8o, PPC::EQV8 },
  { PPC::EQVo, PPC::EQV },
  { PPC::EXTSB8o, PPC::EXTSB8 },
  { PPC::EXTSBo, PPC::EXTSB },
  { PPC::EXTSH8o, PPC::EXTSH8 },
  { PPC::EXTSHo, PPC::EXTSH },
  { PPC::EXTSW_32_64o, PPC::EXTSW_32_64 },
  { PPC::EXTSWo, PPC::EXTSW },
  { PPC::FABSDo, PPC::FABSD },
  { PPC::FABSSo, PPC::FABSS },
  { PPC::FADDSo, PPC::FADDS },
  { PPC::FADDo, PPC::FADD },
  { PPC::FCFIDSo, PPC::FCFIDS },
  { PPC::FCFIDUSo, PPC::FCFIDUS },
  { PPC::FCFIDUo, PPC::FCFIDU },
  { PPC::FCFIDo, PPC::FCFID },
  { PPC::FCPSGNDo, PPC::FCPSGND },
  { PPC::FCPSGNSo, PPC::FCPSGNS },
  { PPC::FCTIDUZo, PPC::FCTIDUZ },
  { PPC::FCTIDZo, PPC::FCTIDZ },
  { PPC::FCTIDo, PPC::FCTID },
  { PPC::FCTIWUZo, PPC::FCTIWUZ },
  { PPC::FCTIWZo, PPC::FCTIWZ },
  { PPC::FCTIWo, PPC::FCTIW },
  { PPC::FDIVSo, PPC::FDIVS },
  { PPC::FDIVo, PPC::FDIV },
  { PPC::FMADDSo, PPC::FMADDS },
  { PPC::FMADDo, PPC::FMADD },
  { PPC::FMRo, PPC::FMR },
  { PPC::FMSUBSo, PPC::FMSUBS },
  { PPC::FMSUBo, PPC::FMSUB },
  { PPC::FMULSo, PPC::FMULS },
  { PPC::FMULo, PPC::FMUL },
  { PPC::FNABSDo, PPC::FNABSD },
  { PPC::FNABSSo, PPC::FNABSS },
  { PPC::FNEGDo, PPC::FNEGD },
  { PPC::FNEGSo, PPC::FNEGS },
  { PPC::FNMADDSo, PPC::FNMADDS },
  { PPC::FNMADDo, PPC::FNMADD },
  { PPC::FNMSUBSo, PPC::FNMSUBS },
  { PPC::FNMSUBo, PPC::FNMSUB },
  { PPC::FRESo, PPC::FRES },
  { PPC::FREo, PPC::FRE },
  { PPC::FRIMDo, PPC::FRIMD },
  { PPC::FRIMSo, PPC::FRIMS },
  { PPC::FRINDo, PPC::FRIND },
  { PPC::FRINSo, PPC::FRINS },
  { PPC::FRIPDo, PPC::FRIPD },
  { PPC::FRIPSo, PPC::FRIPS },
  { PPC::FRIZDo, PPC::FRIZD },
  { PPC::FRIZSo, PPC::FRIZS },
  { PPC::FRSPo, PPC::FRSP },
  { PPC::FRSQRTESo, PPC::FRSQRTES },
  { PPC::FRSQRTEo, PPC::FRSQRTE },
  { PPC::FSELDo, PPC::FSELD },
  { PPC::FSELSo, PPC::FSELS },
  { PPC::FSQRTSo, PPC::FSQRTS },
  { PPC::FSQRTo, PPC::FSQRT },
  { PPC::FSUBSo, PPC::FSUBS },
  { PPC::FSUBo, PPC::FSUB },
  { PPC::MULHDUo, PPC::MULHDU },
  { PPC::MULHDo, PPC::MULHD },
  { PPC::MULHWUo, PPC::MULHWU },
  { PPC::MULHWo, PPC::MULHW },
  { PPC::MULLDo, PPC::MULLD },
  { PPC::MULLWo, PPC::MULLW },
  { PPC::NAND8o, PPC::NAND8 },
  { PPC::NANDo, PPC::NAND },
  { PPC::NEG8o, PPC::NEG8 },
  { PPC::NEGo, PPC::NEG },
  { PPC::NOR8o, PPC::NOR8 },
  { PPC::NORo, PPC::NOR },
  { PPC::OR8o, PPC::OR8 },
  { PPC::ORC8o, PPC::ORC8 },
  { PPC::ORCo, PPC::ORC },
  { PPC::ORo, PPC::OR },
  { PPC::RLDCLo, PPC::RLDCL },
  { PPC::RLDCRo, PPC::RLDCR },
  { PPC::RLDICLo, PPC::RLDICL },
  { PPC::RLDICRo, PPC::RLDICR },
  { PPC::RLDICo, PPC::RLDIC },
  { PPC::RLDIMIo, PPC::RLDIMI },
  { PPC::RLWIMI8o, PPC::RLWIMI8 },
  { PPC::RLWIMIo, PPC::RLWIMI },
  { PPC::RLWINM8o, PPC::RLWINM8 },
  { PPC::RLWINMo, PPC::RLWINM },
  { PPC::RLWNM8o, PPC::RLWNM8 },
  { PPC::RLWNMo, PPC::RLWNM },
  { PPC::SLDo, PPC::SLD },
  { PPC::SLW8o, PPC::SLW8 },
  { PPC::SLWo, PPC::SLW },
  { PPC::SRADIo, PPC::SRADI },
  { PPC::SRADo, PPC::SRAD },
  { PPC::SRAWIo, PPC::SRAWI },
  { PPC::SRAWo, PPC::SRAW },
  { PPC::SRDo, PPC::SRD },
  { PPC::SRW8o, PPC::SRW8 },
  { PPC::SRWo, PPC::SRW },
  { PPC::SUBF8o, PPC::SUBF8 },
  { PPC::SUBFC8o, PPC::SUBFC8 },
  { PPC::SUBFCo, PPC::SUBFC },
  { PPC::SUBFE8o, PPC::SUBFE8 },
  { PPC::SUBFEo, PPC::SUBFE },
  { PPC::SUBFME8o, PPC::SUBFME8 },
  { PPC::SUBFMEo, PPC::SUBFME },
  { PPC::SUBFZE8o, PPC::SUBFZE8 },
  { PPC::SUBFZEo, PPC::SUBFZE },
  { PPC::SUBFo, PPC::SUBF },
  { PPC::XOR8o, PPC::XOR8 },
  { PPC::XORo, PPC::XOR },
}; // End of getNonRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 132;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getNonRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNonRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonRecordFormOpcodeTable[mid][1];
}

// getRecordFormOpcode
int getRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getRecordFormOpcodeTable[][2] = {
  { PPC::ADD4, PPC::ADD4o },
  { PPC::ADD8, PPC::ADD8o },
  { PPC::ADDC, PPC::ADDCo },
  { PPC::ADDC8, PPC::ADDC8o },
  { PPC::ADDE, PPC::ADDEo },
  { PPC::ADDE8, PPC::ADDE8o },
  { PPC::ADDIC, PPC::ADDICo },
  { PPC::ADDME, PPC::ADDMEo },
  { PPC::ADDME8, PPC::ADDME8o },
  { PPC::ADDZE, PPC::ADDZEo },
  { PPC::ADDZE8, PPC::ADDZE8o },
  { PPC::AND, PPC::ANDo },
  { PPC::AND8, PPC::AND8o },
  { PPC::ANDC, PPC::ANDCo },
  { PPC::ANDC8, PPC::ANDC8o },
  { PPC::CNTLZD, PPC::CNTLZDo },
  { PPC::CNTLZW, PPC::CNTLZWo },
  { PPC::CNTLZW8, PPC::CNTLZW8o },
  { PPC::DIVD, PPC::DIVDo },
  { PPC::DIVDU, PPC::DIVDUo },
  { PPC::DIVW, PPC::DIVWo },
  { PPC::DIVWU, PPC::DIVWUo },
  { PPC::EQV, PPC::EQVo },
  { PPC::EQV8, PPC::EQV8o },
  { PPC::EXTSB, PPC::EXTSBo },
  { PPC::EXTSB8, PPC::EXTSB8o },
  { PPC::EXTSH, PPC::EXTSHo },
  { PPC::EXTSH8, PPC::EXTSH8o },
  { PPC::EXTSW, PPC::EXTSWo },
  { PPC::EXTSW_32_64, PPC::EXTSW_32_64o },
  { PPC::FABSD, PPC::FABSDo },
  { PPC::FABSS, PPC::FABSSo },
  { PPC::FADD, PPC::FADDo },
  { PPC::FADDS, PPC::FADDSo },
  { PPC::FCFID, PPC::FCFIDo },
  { PPC::FCFIDS, PPC::FCFIDSo },
  { PPC::FCFIDU, PPC::FCFIDUo },
  { PPC::FCFIDUS, PPC::FCFIDUSo },
  { PPC::FCPSGND, PPC::FCPSGNDo },
  { PPC::FCPSGNS, PPC::FCPSGNSo },
  { PPC::FCTID, PPC::FCTIDo },
  { PPC::FCTIDUZ, PPC::FCTIDUZo },
  { PPC::FCTIDZ, PPC::FCTIDZo },
  { PPC::FCTIW, PPC::FCTIWo },
  { PPC::FCTIWUZ, PPC::FCTIWUZo },
  { PPC::FCTIWZ, PPC::FCTIWZo },
  { PPC::FDIV, PPC::FDIVo },
  { PPC::FDIVS, PPC::FDIVSo },
  { PPC::FMADD, PPC::FMADDo },
  { PPC::FMADDS, PPC::FMADDSo },
  { PPC::FMR, PPC::FMRo },
  { PPC::FMSUB, PPC::FMSUBo },
  { PPC::FMSUBS, PPC::FMSUBSo },
  { PPC::FMUL, PPC::FMULo },
  { PPC::FMULS, PPC::FMULSo },
  { PPC::FNABSD, PPC::FNABSDo },
  { PPC::FNABSS, PPC::FNABSSo },
  { PPC::FNEGD, PPC::FNEGDo },
  { PPC::FNEGS, PPC::FNEGSo },
  { PPC::FNMADD, PPC::FNMADDo },
  { PPC::FNMADDS, PPC::FNMADDSo },
  { PPC::FNMSUB, PPC::FNMSUBo },
  { PPC::FNMSUBS, PPC::FNMSUBSo },
  { PPC::FRE, PPC::FREo },
  { PPC::FRES, PPC::FRESo },
  { PPC::FRIMD, PPC::FRIMDo },
  { PPC::FRIMS, PPC::FRIMSo },
  { PPC::FRIND, PPC::FRINDo },
  { PPC::FRINS, PPC::FRINSo },
  { PPC::FRIPD, PPC::FRIPDo },
  { PPC::FRIPS, PPC::FRIPSo },
  { PPC::FRIZD, PPC::FRIZDo },
  { PPC::FRIZS, PPC::FRIZSo },
  { PPC::FRSP, PPC::FRSPo },
  { PPC::FRSQRTE, PPC::FRSQRTEo },
  { PPC::FRSQRTES, PPC::FRSQRTESo },
  { PPC::FSELD, PPC::FSELDo },
  { PPC::FSELS, PPC::FSELSo },
  { PPC::FSQRT, PPC::FSQRTo },
  { PPC::FSQRTS, PPC::FSQRTSo },
  { PPC::FSUB, PPC::FSUBo },
  { PPC::FSUBS, PPC::FSUBSo },
  { PPC::MULHD, PPC::MULHDo },
  { PPC::MULHDU, PPC::MULHDUo },
  { PPC::MULHW, PPC::MULHWo },
  { PPC::MULHWU, PPC::MULHWUo },
  { PPC::MULLD, PPC::MULLDo },
  { PPC::MULLW, PPC::MULLWo },
  { PPC::NAND, PPC::NANDo },
  { PPC::NAND8, PPC::NAND8o },
  { PPC::NEG, PPC::NEGo },
  { PPC::NEG8, PPC::NEG8o },
  { PPC::NOR, PPC::NORo },
  { PPC::NOR8, PPC::NOR8o },
  { PPC::OR, PPC::ORo },
  { PPC::OR8, PPC::OR8o },
  { PPC::ORC, PPC::ORCo },
  { PPC::ORC8, PPC::ORC8o },
  { PPC::RLDCL, PPC::RLDCLo },
  { PPC::RLDCR, PPC::RLDCRo },
  { PPC::RLDIC, PPC::RLDICo },
  { PPC::RLDICL, PPC::RLDICLo },
  { PPC::RLDICR, PPC::RLDICRo },
  { PPC::RLDIMI, PPC::RLDIMIo },
  { PPC::RLWIMI, PPC::RLWIMIo },
  { PPC::RLWIMI8, PPC::RLWIMI8o },
  { PPC::RLWINM, PPC::RLWINMo },
  { PPC::RLWINM8, PPC::RLWINM8o },
  { PPC::RLWNM, PPC::RLWNMo },
  { PPC::RLWNM8, PPC::RLWNM8o },
  { PPC::SLD, PPC::SLDo },
  { PPC::SLW, PPC::SLWo },
  { PPC::SLW8, PPC::SLW8o },
  { PPC::SRAD, PPC::SRADo },
  { PPC::SRADI, PPC::SRADIo },
  { PPC::SRAW, PPC::SRAWo },
  { PPC::SRAWI, PPC::SRAWIo },
  { PPC::SRD, PPC::SRDo },
  { PPC::SRW, PPC::SRWo },
  { PPC::SRW8, PPC::SRW8o },
  { PPC::SUBF, PPC::SUBFo },
  { PPC::SUBF8, PPC::SUBF8o },
  { PPC::SUBFC, PPC::SUBFCo },
  { PPC::SUBFC8, PPC::SUBFC8o },
  { PPC::SUBFE, PPC::SUBFEo },
  { PPC::SUBFE8, PPC::SUBFE8o },
  { PPC::SUBFME, PPC::SUBFMEo },
  { PPC::SUBFME8, PPC::SUBFME8o },
  { PPC::SUBFZE, PPC::SUBFZEo },
  { PPC::SUBFZE8, PPC::SUBFZE8o },
  { PPC::XOR, PPC::XORo },
  { PPC::XOR8, PPC::XOR8o },
}; // End of getRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 132;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRecordFormOpcodeTable[mid][1];
}

} // End PPC namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

